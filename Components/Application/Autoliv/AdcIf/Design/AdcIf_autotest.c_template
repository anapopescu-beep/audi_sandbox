
/******************************************************************************

AUTOLIV ELECTRONIC document.

-------------------------------------

Copyright Autoliv Inc. All rights reserved.

*******************************************************************************
C-File Template Version: 
******************************************************************************/

/*!****************************************************************************

details
   File containing the AdcIf component autotest

******************************************************************************/
/******************************************************************************
EXTERNAL DEPENDENCIES
******************************************************************************/
#include "common.h"
#include "Nvp_Generated_NvmDefault.h"
#include "Rte_AdcIf.h"
#include "AdcIf.h"
#include "IoHwAb_AdcIf.h"

/******************************************************************************
MODULE DEFINES
******************************************************************************/

/******************************************************************************
MODULE TYPES
******************************************************************************/

/******************************************************************************
DECLARATION OF LOCAL FUNCTIONS
******************************************************************************/

/******************************************************************************
DEFINITION OF LOCAL VARIABLES
******************************************************************************/

/******************************************************************************
DEFINITION OF EXPORTED VARIABLES
******************************************************************************/

/******************************************************************************
DEFINITION OF LOCAL CONSTANT DATA
******************************************************************************/

/******************************************************************************
DEFINITION OF EXPORTED CONSTANT DATA
******************************************************************************/

/******************************************************************************
MODULE FUNCTION-LIKE MACROS
******************************************************************************/

/******************************************************************************
DEFINITION OF LOCAL FUNCTION
******************************************************************************/

/******************************************************************************
DEFINITION OF APIs
******************************************************************************/

/**
* \brief
*       This is the ADC autotest. It consists of checking that the two
*       reference voltages measured on the dedicated ADC channels do not drift.
* \outputparam
*       Name: pu8TestResult;
*       Type: u8TestResultType *;
*       Description: The autotest test result in uint8 range;
*       Range: 
*			KU8_ATM_TEST_OK
*           KU8_ATM_TEST_NOK
*           KU8_ATM_TEST_NOT_DECIDED;
* \pre
*       This function must be called in autotests.
* \dynamicaspectcaller
*       ATM Autotests.
* \dynamicaspectdescription
*       Called in Autotests via RTE layer.
* \constrains
*       ADC Pheripheral must be initialised.
* \ddesignrequirement
*		DSG_AdcIf_Autotest_CheckAdc
* \archrequirement
*       ARCH_SW_AdcIf_pseCheckAdc
*/
void AdcIf_Autotest_CheckAdc(u8TestResultType * pu8TestResult)
{
   Set_Returned_status_to_NOT_Decided;

   Get_the_filtered_raw_value_of_measured_voltage_on_ADC_test_pins;

   Convert_filtered_raw_values_in_mV;

   /* Compare the ADC low voltage value to the corresponding threshold */
   if (NVP_u16ADCLowVoltageThrs < ADCRefLowVoltage)
   {
      /* If the value is strictly above the threshold, return NOK */
      ResultOfAutoTest = KU8_ATM_TEST_NOK;
   }
   /* Compare the ADC high voltage value to the corresponding threshold */
   else if(ADCRefHighVoltage < NVP_u16ADCHighVoltageThrs)
   {
      ResultOfAutoTest = KU8_ATM_TEST_NOK;
   }
   /* All ADC reference voltages are in expected range */
   else
   {
      ResultOfAutoTest = KU8_ATM_TEST_OK;
   }

   /* Return the auto test status */
   *TestResult = ResultOfAutoTest;
}

/**
* \brief
*       This is the ADC calib autotest. 
*       It consists of checking that the ADC calibration is OK.
* \outputparam
*       Name: pu8TestResult;
*       Type: u8TestResultType *;
*       Description: The autotest test result in uint8 range;
*       Range: 
*          KU8_ATM_TEST_OK
*          KU8_ATM_TEST_NOK
*          KU8_ATM_TEST_NOT_DECIDED;
* \pre
*       This function must be called in autotests.
* \dynamicaspectcaller
*       ATM Autotests.
* \dynamicaspectdescription
*       Called in Autotests Manager SW component via RTE layer.
* \constrains
*       AdcIf_Calib function must be executed first.
* \ddesignrequirement
*		DSG_AdcIf_Autotest_CheckAdcCalib
* \archrequirement
*       ARCH_SW_AdcIf_pseCheckAdcCalib
*/
void AdcIf_Autotest_CheckAdcCalib(u8TestResultType *pu8TestResult)
{

   Set_Returned_status_to_NOT_Decided;

   /* If the two calibration are OK */
   if (The_two_calibration_statues_are_OK)
   {
      ResultOfAutoTest = KU8_ATM_TEST_OK;
   }
   
   /*If one of them is NOK */
   else
   {
      ResultOfAutoTest = KU8_ATM_TEST_NOK;
   }

   /* Return the auto test status */
   *TestResult = ResultOfAutoTest;
}

/******************************************************************************
End Of File
*****************************************************************************/
