/*********************************************************************************//*!
*   \file           T1_config.h
*
*   \brief          generated by T1_projGen.pl for project AUDI eCS
*                   using license POT1924 - LicID1141
*
*   \par Visibility
*                   External
*
*   \date           28.08.2023 at 15:50:20
*
*   \copyright      GLIWA embedded systems GmbH & Co. KG, Weilheim i.OB. All rights reserved
*************************************************************************************/

/*************************************************************************************
 * Command line flags:
 *********************
 -UserCfg=T1_UserCfg.inv
 -Cfg=T1_Cfg_CAN_FD.inv
 -OsPm=T1_TresosAutoCoreOS.pm
 -OsCfg=T1_OsCfg.inv
 ************************************************************************************/

#ifndef T1_CONFIG_H_
#define T1_CONFIG_H_ (1)

/*----------------------------------------------------------------------------------*/
/*--- Global macros ----------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------------*/
/*--- header includes --------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------------*/
/*--- Task and ISR IDs -------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

#define T1_OsTask_Bsw_ReadWrite_AllProcess_ID         (  0u)/* ECC */
#define T1_OsTask_AppIdle_ID                          (  1u)/* ECC */
#define T1_OsTask_Bsw_ComServices_ID                  (  2u)
#define T1_OsTask_Bsw_SysServices_ID                  (  3u)
#define T1_OsTask_Bsw_MemServices_ID                  (  4u)
#define T1_OsTask_Alv_ComHwAbs_ID                     (  5u)
#define T1_OsTask_Bsw_Init_ID                         (  6u)
#define T1_OsTask_Bsw_Events_ID                       (  7u)
#define T1_OsTask_Alv_eCSApp_ID                       (  8u)
#define T1_OsTask_Alv_Autotests_ID                    (  9u)
#define T1_OsTask_Alv_ComServices_ID                  ( 10u)
#define T1_OsTask_Alv_EcuHwAbs_ID                     ( 11u)
#define T1_OsTask_Alv_ModeMngmt_ID                    ( 12u)
#define T1_OsTask_Bsw_ComEvents_ID                    ( 13u)
#define T1_CAN0_ORED_IRQHandler_ID                    ( 14u)/* CAT2 */
#define T1_CAN0_Error_IRQHandler_ID                   ( 15u)/* CAT2 */
#define T1_CAN0_ORED_0_15_MB_IRQHandler_ID            ( 16u)/* CAT2 */
#define T1_CAN0_ORED_16_31_MB_IRQHandler_ID           ( 17u)/* CAT2 */
#define T1_LPIT_0_CH_1_ISR_ID                         ( 18u)/* CAT2 */
#define T1_LPTMR_ISR_ID                               ( 19u)/* CAT1 */
#define T1_PORTD_ISR_ID                               ( 20u)/* CAT1 */
#define T1_PORTE_ISR_ID                               ( 21u)/* CAT2 */
#define T1_LPIT_0_CH_2_ISR_ID                         ( 22u)/* CAT2 */
#define T1_Os_Counter_FTM0_0_ID                       ( 23u)/* CAT2 */
/* Core 0: */
#define T1_NOF_TASKS_CORE0                            ( 24u)
#define T1_MAX_TASK_PREEMPTIONS_CORE0                 ( 20u)
#define T1_CAT1_ISR_ID_OFFSET_CORE0                   ( 19u)
#define T1_CAT2_ISR_ID_OFFSET_CORE0                   ( 14u)
#define T1_EXT_ISR_ID_OFFSET_CORE0                    ( 21u)
#define T1_CAT1_TO_TRACE_ID_CORE0( id_ )              (T1_CAT1_ISR_ID_OFFSET_CORE0 + (id_))
#define T1_CAT2_TO_TRACE_ID_CORE0( id_ )              (T1_CAT2_ISR_ID_OFFSET_CORE0 + (id_))
#define T1_EXT_ISR_TO_TRACE_ID_CORE0( id_ )           (T1_EXT_ISR_ID_OFFSET_CORE0 + (id_))

/*----------------------------------------------------------------------------------*/
/*--- Application Features ---------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

#define T1_AF_TRACE_STARTUP                           (0x00000001uL) /* Capture Startup Trace */
#define T1_AF_ALLOW_TRIGGER                           (0x00000002uL) /* Allow on Target Trigger */
#define T1_AF_ALLOW_TRACEDATA                         (0x00000004uL) /* Allow T1 Trace Data */
#define T1_AF_CHECK_INTEGRATION                       (0x00000008uL) /* Trace the stopwatch T1_SW_CHECK_INTEGRATION_CORE_ALL */

/*----------------------------------------------------------------------------------*/
/*--- T1.delay IDs -----------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

/* Delays for all cores */
#define T1_DL_CHECK_INTEGRATION_CORE_ALL              (0u) /* Check Integration */

/* Delays for core 0 */
#define T1_DL_CHECK_INTEGRATION_CORE0                 (T1_DL_CHECK_INTEGRATION_CORE_ALL) /* Check Integration */

/*----------------------------------------------------------------------------------*/
/*--- User Data Event and User Event IDs -------------------------------------------*/
/*----------------------------------------------------------------------------------*/

/* User Events for all cores */
#define T1_UDE_CHECK_INTEGRATION_SYNCTIMER_CORE_ALL   (0u) /* Check Integration Sync Timer Ticks */
#define T1_UDE_PRINTF_CORE_ALL                        (1u) /* printf string */
#define T1_UDE_16BitDataTrace_CORE_ALL                (2u) /* 16 bit Data tracing */
#define T1_UDE_32BitDataTrace_CORE_ALL                (3u) /* 32 bit Data tracing */
#define T1_UDE_BinaryTrace_CORE_ALL                   (4u) /* Binary Data tracing */
#define T1_UE_T1_CONT_ERR_CORE0                       (32u) /* T1.cont error callback for core 0 */
#define T1_UE_CPU_LOAD_CALLBACK_CORE0                 (33u) /* T1.cont CPU load callback for core 0 */
#define T1_UE_T1_ERR_CORE_ALL                         (34u) /* T1_errorCount Increase */

/* User Events for core 0 */
#define T1_UDE_CHECK_INTEGRATION_SYNCTIMER_CORE0      (T1_UDE_CHECK_INTEGRATION_SYNCTIMER_CORE_ALL) /* Check Integration Sync Timer Ticks */
#define T1_UDE_PRINTF_CORE0                           (T1_UDE_PRINTF_CORE_ALL) /* printf string */
#define T1_UDE_16BitDataTrace_CORE0                   (T1_UDE_16BitDataTrace_CORE_ALL) /* 16 bit Data tracing */
#define T1_UDE_32BitDataTrace_CORE0                   (T1_UDE_32BitDataTrace_CORE_ALL) /* 32 bit Data tracing */
#define T1_UDE_BinaryTrace_CORE0                      (T1_UDE_BinaryTrace_CORE_ALL) /* Binary Data tracing */

/*----------------------------------------------------------------------------------*/
/*--- User stopwatch IDs -----------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

/* User stopwatches for all cores */
/* The following user stopwatches are supervised by T1.cont */
#define T1_SW_CHECK_INTEGRATION_CORE_ALL              (   0u) /* Check Integration */

/* User stopwatches for core 0 */
/* The following user stopwatches are supervised by T1.cont */
#define T1_SW_CHECK_INTEGRATION_CORE0                 (T1_SW_CHECK_INTEGRATION_CORE_ALL) /* Check Integration */

/*----------------------------------------------------------------------------------*/
/*--- Config macros ----------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

#define T1_NOF_CORES                                  (1u)
#define T1_PC_ARRAY( coreId_, var_ )                  (var_ ## 0)
#define T1_PC( coreId_, var_ )                        (&T1_PC_ARRAY( coreId_, var_ ))
#if defined T1_GET_RAW_TIME_CORE0 && ! defined T1_GET_RAW_TIME
#   define T1_GET_RAW_TIME( ) T1_GET_RAW_TIME_CORE0( )
#endif /* defined T1_GET_RAW_TIME_CORE0 && ! defined T1_GET_RAW_TIME */
#define T1_COMMS_CORE_OFFSET                          (0u)
#define T1_SID                                        (2u)
#define T1_TRACE_56BIT_SYNC_TIMER                     (0)
#define T1_FG_CONT_ACT_EXTRA_ENTRIES                  (1)
#define T1_CAN_PC_TO_ECU_ID                           (0x12Cu)
#define T1_CAN_ECU_TO_PC_ID                           (0xC8u)
#define T1_GCP_MAX_RX_FRAME_SIZE                      (8u)
#define T1_GCP_MAX_TX_FRAME_SIZE                      (64u)
#define T1_STATIC_RUNNABLE_ID                         (1023u)
#define T1_TIMEOUT_RX                                 (100u)
#define T1_TIMEOUT_TX                                 (100u)
#define T1_TIMEOUT_RESPONSE                           (1000u)
#define T1_INIT_FEATURE_MASK                          (T1_AF_ALLOW_TRIGGER)
#define T1_GET_SYNC_TIME( )                           ((T1_uint32_t)T1_GET_TRACE_TIME_PC( 0u ))
#define T1_SYNC_TIMER_WIDTH_BITS                      (16u)
#define T1_SYNC_TIMER_DURATION_NS                     ((1000.0f/80)*16)
#define T1_ALL_TRACE_TIMERS_ARE_SYNC_TIMER            (1)
#define T1_ANY_TRACE_TIMER_IS_SYNC_TIMER              (1)
#define T1_CONT_NOF_FOCUS_MEASUREMENTS                (2u)
#define T1_MAX_NOF_TASKS                              ( 24u)
#define T1_MIN_CAT1_ISR_ID_OFFSET                     ( 19u)
#define T1_MIN_CAT2_ISR_ID_OFFSET                     ( 14u)
#define T1_MIN_EXT_ISR_ID_OFFSET                      ( 21u)
#define T1_GET_RAW_TIME( )                            (*(T1_tickUint_t volatile const *)T1_PTIMER_CORE0)
#define T1_ALL_TIMERS_ARE_MEMORY_MAPPED               (1)
#define T1_SYNC_TO_TRACE_TIME( syncTime__ )           ((T1_tickUint_t)(((syncTime__) << 0) >> 0))
#define T1_TRACE_TO_SYNC_TIME( traceTime__ )          ((T1_uint32_t)(((traceTime__) << 16) >> 16))
#define T1_RAW_TO_SYNC_TIME( rawTime_ )               ((T1_uint32_t)(((rawTime_) << 16) >> 16))
#define T1_RAW_TO_TRACE_TIME( rawTime_ )              ((T1_tickUint_t)(((rawTime_) << 16) >> 16))
#define T1_RAW_TO_TRACE_TIME_UNMASKED( rawTime_ )     ((T1_tickUint_t)(((rawTime_) << 0) >> 0))
#if ! defined T1_GET_TRACE_TIME_PC
#   if defined T1_GET_RAW_TIME && defined T1_RAW_TO_TRACE_TIME
#       define T1_GET_TRACE_TIME_PC( coreId_ )                                  \
            T1_RAW_TO_TRACE_TIME( T1_GET_RAW_TIME( ) )
#   else /* Different timers/speeds for different cores */
#       define T1_GET_TRACE_TIME_PC( coreId_ )                                  \
(                                                                               \
                      T1_RAW_TO_TRACE_TIME_CORE0( T1_GET_RAW_TIME_CORE0( ) )    \
)
#       define T1_TRACE_TO_SYNC_TIME_PC( coreId_, traceTime_ )                  \
(                                                                               \
                      T1_TRACE_TO_SYNC_TIME_CORE0( traceTime_ )                 \
)
#   endif /* defined T1_GET_RAW_TIME && defined T1_RAW_TO_TRACE_TIME */
#endif /* ! defined T1_GET_TRACE_TIME_PC */

/* Core-specific configuration for core 0 */
#define T1_BSF_EVENT_ID_CORE0                         (T1_ACTIVATION)
#define T1_BSF_EVENT_INFO_CORE0                       (T1_OsTask_Alv_ComHwAbs_ID)
#define T1_BACKGROUND_TASK_ID_CORE0                   (T1_OsTask_AppIdle_ID)
#define T1_TICK_DURATION_CORE0_NS                     ((1000.0f/80)*16)
#define T1_SYNC_TO_TRACE_TIME_CORE0( syncTime__ )     ((T1_tickUint_t)(((syncTime__) << 0) >> 0))
#define T1_TRACE_TO_SYNC_TIME_CORE0( traceTime__ )    ((T1_uint32_t)(((traceTime__) << 16) >> 16))
#define T1_RAW_TO_TRACE_TIME_CORE0( rawTime_ )        ((T1_tickUint_t)(((rawTime_) << 16) >> 16))
#define T1_RAW_TO_TRACE_TIME_UNMASKED_CORE0( rawTime_ ) ((T1_tickUint_t)(((rawTime_) << 0) >> 0))
#define T1_RAW_TO_SYNC_TIME_CORE0( rawTime_ )         ((T1_uint32_t)(((rawTime_) << 16) >> 16))
#define T1_OVERHEAD_CORE0_NS                          (178)
#define T1_FLEX_OVERHEAD_CORE0_NS                     (500)
#define T1_CPULOAD_THRESHOLD_256THS_CORE0             (218u) /* 85.2% */
#define T1_FEATURE_MASK_CALLBACK_CORE0                (0u)
#define T1_TRACEBUFFER_ENTRIES_CORE0_                 (3000)
#define T1_TRACEBUFFER_ENTRIES_CORE0                  (3000u)
#define T1_NOF_CSRNS_CORE0                            (2u)
#define T1_NOF_USER_STPWS_CORE0                       (1u)
#define T1_NOF_FLEX_STPWS_CORE0                       (16u)
#define T1_NOF_STPWS_CORE0                            (T1_NOF_USER_STPWS_CORE0 + T1_NOF_FLEX_STPWS_CORE0)
#define T1_NOF_FLEX_ADDRS_CORE0                       (16u)
#define T1_NOF_FLEXBUFFER_ENTRIES_CORE0               (1u)
#define T1_OUTER_HANDLER_CORE0                        (T1_OuterHandlerCore0)
#define T1_PTIMER_CORE0                               (0x40038004uL)
#define T1_SYNC_PERIOD_CORE0                          (10u)
#define T1_GET_RAW_TIME_CORE0( )                      (*(T1_tickUint_t volatile const *)T1_PTIMER_CORE0)
#define T1_TRACE_TIMER_IS_SYNC_TIMER_CORE0            (1)
#define T1_TRACE_TIMER_COUNTS_DOWN_CORE0              (T1_FALSE)
#define T1_TRACE_TIMER_BIT_LENGTH_CORE0               (16u)
#define T1_CPULOAD_TX_PERIOD_CORE0                    (20u)
#define T1_CPULOAD_SAMPLES_CORE0                      (20u)
#define T1_CONT_ANALYSIS_CAPACITY_CORE0               (3000u)
#define T1_NOF_DELAYS_CORE0                           (1u)

/* Unused cores. */
#define T1_TRACE_TIMER_IS_SYNC_TIMER_CORE1            (1)
#define T1_TRACE_TIMER_IS_SYNC_TIMER_CORE2            (1)
#define T1_TRACE_TIMER_IS_SYNC_TIMER_CORE3            (1)
#define T1_TRACE_TIMER_IS_SYNC_TIMER_CORE4            (1)
#define T1_TRACE_TIMER_IS_SYNC_TIMER_CORE5            (1)


#if ! defined T1_CORE_ID_TO_SCOPE_CONSTS
#   if ! defined T1_CLONE
#define T1_CORE_ID_TO_SCOPE_CONSTS( coreId_ )         (T1_P_SCOPE_CONSTS0)
#define T1_CORE_ID_TO_SCOPE_FG_CONSTS( coreId_ )      (T1_P_SCOPE_FG_CONSTS0)
#   endif /* ! defined T1_CLONE */
#endif /* ! defined T1_CORE_ID_TO_SCOPE_CONSTS */

#if ! defined T1_CONT_RC_UNMAP
#   define T1_CONT_RC_UNMAP( coreId_ )                (0)
#endif /* ! defined T1_CONT_RC_UNMAP */

#define T1_TRACE_TASK( taskId_ ) \
(  1 \
)


/*----------------------------------------------------------------------------------*/
/*--- Function wrapper -------------------------------------------------------------*/
/*----------------------------------------------------------------------------------*/

#if defined T1_ENABLE

#endif /* defined T1_ENABLE */

/*----------------------------------------------------------------------------------*/

#endif /* T1_CONFIG_H_ */
