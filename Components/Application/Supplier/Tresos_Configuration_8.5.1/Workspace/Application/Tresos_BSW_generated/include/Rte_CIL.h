#if !defined(RTE_CIL_H)
#define RTE_CIL_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type CIL
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_CIL_Type.h> /* RTE application types header file */
#include <Rte_CIL_Hook.h> /* RTE application trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#if (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#define Rte_Write_SP_IF_eCS_Error_Reihe1_BFS_1_DE_eCS_Error_Reihe1_BFS_1(data) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_BFS_1_DE_eCS_Error_Reihe1_BFS_1(data)

#define Rte_Write_SP_IF_eCS_Error_Reihe1_BFS_2_DE_eCS_Error_Reihe1_BFS_2(data) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_BFS_2_DE_eCS_Error_Reihe1_BFS_2(data)

#define Rte_Write_SP_IF_eCS_Error_Reihe1_FS_1_DE_eCS_Error_Reihe1_FS_1(data) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_FS_1_DE_eCS_Error_Reihe1_FS_1(data)

#define Rte_Write_SP_IF_eCS_Error_Reihe1_FS_2_DE_eCS_Error_Reihe1_FS_2(data) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_FS_2_DE_eCS_Error_Reihe1_FS_2(data)

#define Rte_Write_SP_IF_eCS_Error_Reihe2_BFS_DE_eCS_Error_Reihe2_BFS(data) Rte_Write_CIL_SP_IF_eCS_Error_Reihe2_BFS_DE_eCS_Error_Reihe2_BFS(data)

#define Rte_Write_SP_IF_eCS_Error_Reihe2_FS_DE_eCS_Error_Reihe2_FS(data) Rte_Write_CIL_SP_IF_eCS_Error_Reihe2_FS_DE_eCS_Error_Reihe2_FS(data)

#define Rte_Write_SP_IF_eCS_Gurtschloss_Status_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_eCS_Gurtschloss_Status_Reihe2_BF(data) Rte_Write_CIL_SP_IF_eCS_Gurtschloss_Status_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_eCS_Gurtschloss_Status_Reihe2_BF(data)

#define Rte_Write_SP_IF_eCS_Gurtschloss_Status_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_eCS_Gurtschloss_Status_Reihe2_FA(data) Rte_Write_CIL_SP_IF_eCS_Gurtschloss_Status_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_eCS_Gurtschloss_Status_Reihe2_FA(data)

#define Rte_Write_SP_IF_eCS_HW_defekt_XIX_Grundumfang_XIX_eCS_DE_eCS_HW_defekt(data) Rte_Write_CIL_SP_IF_eCS_HW_defekt_XIX_Grundumfang_XIX_eCS_DE_eCS_HW_defekt(data)

#define Rte_Write_SP_IF_eCS_SBS_Belegung_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_eCS_SBS_Belegung_Reihe2_BF(data) Rte_Write_CIL_SP_IF_eCS_SBS_Belegung_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_eCS_SBS_Belegung_Reihe2_BF(data)

#define Rte_Write_SP_IF_eCS_SBS_Belegung_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_eCS_SBS_Belegung_Reihe2_FA(data) Rte_Write_CIL_SP_IF_eCS_SBS_Belegung_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_eCS_SBS_Belegung_Reihe2_FA(data)

#define Rte_Write_SP_IF_eCS_SBS_LastState_Reihe2_BFS_DE_eCS_SBS_LastState_Reihe2_BFS(data) Rte_Write_CIL_SP_IF_eCS_SBS_LastState_Reihe2_BFS_DE_eCS_SBS_LastState_Reihe2_BFS(data)

#define Rte_Write_SP_IF_eCS_SBS_LastState_Reihe2_FS_DE_eCS_SBS_LastState_Reihe2_FS(data) Rte_Write_CIL_SP_IF_eCS_SBS_LastState_Reihe2_FS_DE_eCS_SBS_LastState_Reihe2_FS(data)

#define Rte_Write_SP_IF_eCS_Status_XIX_Grundumfang_XIX_eCS_DE_eCS_Status(data) Rte_Write_CIL_SP_IF_eCS_Status_XIX_Grundumfang_XIX_eCS_DE_eCS_Status(data)

#define Rte_Write_SP_IF_eCS_Status_Verr_Reihe1_BFS_1_DE_eCS_Status_Verr_Reihe1_BFS_1(data) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_BFS_1_DE_eCS_Status_Verr_Reihe1_BFS_1(data)

#define Rte_Write_SP_IF_eCS_Status_Verr_Reihe1_BFS_2_DE_eCS_Status_Verr_Reihe1_BFS_2(data) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_BFS_2_DE_eCS_Status_Verr_Reihe1_BFS_2(data)

#define Rte_Write_SP_IF_eCS_Status_Verr_Reihe1_FS_1_DE_eCS_Status_Verr_Reihe1_FS_1(data) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_FS_1_DE_eCS_Status_Verr_Reihe1_FS_1(data)

#define Rte_Write_SP_IF_eCS_Status_Verr_Reihe1_FS_2_DE_eCS_Status_Verr_Reihe1_FS_2(data) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_FS_2_DE_eCS_Status_Verr_Reihe1_FS_2(data)

#define Rte_Write_SP_IF_eCS_Status_Verr_Reihe2_BFS_DE_eCS_Status_Verr_Reihe2_BFS(data) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe2_BFS_DE_eCS_Status_Verr_Reihe2_BFS(data)

#define Rte_Write_SP_IF_eCS_Status_Verr_Reihe2_FS_DE_eCS_Status_Verr_Reihe2_FS(data) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe2_FS_DE_eCS_Status_Verr_Reihe2_FS(data)

#define Rte_Write_SP_IF_eCS_Stoerung_XIX_Grundumfang_XIX_eCS_DE_eCS_Stoerung(data) Rte_Write_CIL_SP_IF_eCS_Stoerung_XIX_Grundumfang_XIX_eCS_DE_eCS_Stoerung(data)

#define Rte_Write_P_CAN_CanDataOut_Frame_0_EcuCanDataOut(data) Rte_Write_CIL_P_CAN_CanDataOut_Frame_0_EcuCanDataOut(data)

#define Rte_Write_P_CAN_GliwaDataOut_Frame_GliwaCanDataOut(data) Rte_Write_CIL_P_CAN_GliwaDataOut_Frame_GliwaCanDataOut(data)

#define Rte_Write_P_CAN_MF_Logger_Frame_MfLogger(data) Rte_Write_CIL_P_CAN_MF_Logger_Frame_MfLogger(data)

#define Rte_Read_prrBuckleStatus_au8BuckleStatus(data) Rte_Read_CIL_prrBuckleStatus_au8BuckleStatus(data)

#define Rte_Read_prrSeatOccupancySensorStatus_au8SeatOccupancySensorStatus(data) Rte_Read_CIL_prrSeatOccupancySensorStatus_au8SeatOccupancySensorStatus(data)

#define Rte_Read_prrAccelMtrPerSecSqd_stAccelMtrPerSecSqd(data) Rte_Read_CIL_prrAccelMtrPerSecSqd_stAccelMtrPerSecSqd(data)

#define Rte_Call_pclModeManagement_CheckModeStatus(u64ModesToCheck, bModeStatus) (FSM_runCheckModeStatus(u64ModesToCheck, bModeStatus), RTE_E_OK)

#define Rte_Trigger_ptrpAsrOsServicesCIL_CIL_runAppliToCAN() (Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runAppliToCAN_Start(), Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runAppliToCAN_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#define Rte_Read_prr3DAcceleration_st3DAccel(data) Rte_Read_CIL_prr3DAcceleration_st3DAccel(data)

#define Rte_Read_prrEcsAlgoData_u16BallPosition(data) (*(data) = Rte_ReceiveBuffer_CCA80EAFBC1D050A51A760AE55D6808A_value, RTE_E_OK)

#define Rte_Read_prrEcsAlgoData_u8EcsFlag(data) (*(data) = Rte_ReceiveBuffer_D6A7459B6984E4684577FF07BD0A6DE9_value, RTE_E_OK)

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#define Rte_Write_psrCILData_au8MergedBuckleStatus(data) Rte_Write_CIL_psrCILData_au8MergedBuckleStatus(data)

#define Rte_Write_psrCrashStatus_u8IsCrashActive(data) Rte_Write_CIL_psrCrashStatus_u8IsCrashActive(data)

#define Rte_Read_RP_IF_AB_Gurtschloss_BF_XIX_Grundumfang_XIX_eCS_DE_AB_Gurtschloss_BF(data) (*(data) = Rte_ReceiveBuffer_71129F91CDB8583097BD1AF9876061BF_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_Gurtschloss_FA_XIX_Grundumfang_XIX_eCS_DE_AB_Gurtschloss_FA(data) (*(data) = Rte_ReceiveBuffer_A113D16837611CE866A81C7CF2502920_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_Gurtschloss_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_AB_Gurtschloss_Reihe2_BF(data) (*(data) = Rte_ReceiveBuffer_8CE17C7716C836A5EA22FE5C7FF2371E_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_Gurtschloss_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_AB_Gurtschloss_Reihe2_FA(data) (*(data) = Rte_ReceiveBuffer_5166B52E8FF0980345F83ED171F76370_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_Gurtschloss_Reihe3_BF_XIX_Grundumfang_XIX_eCS_DE_AB_Gurtschloss_Reihe3_BF(data) (*(data) = Rte_ReceiveBuffer_B1C95A15C027575AFBA60DCD8EA85BF6_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_Gurtschloss_Reihe3_FA_XIX_Grundumfang_XIX_eCS_DE_AB_Gurtschloss_Reihe3_FA(data) (*(data) = Rte_ReceiveBuffer_0ED38C6554767FB9046E8963DFA67155_value, RTE_E_OK)

#define Rte_Read_P_CAN_GliwaDataIn_Frame_GliwaCanDataIn(data) Rte_Read_CIL_P_CAN_GliwaDataIn_Frame_GliwaCanDataIn(data)

#define Rte_Trigger_ptrpAsrOsServicesCIL_CIL_runCANToAppli() (Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runCANToAppli_Start(), Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runCANToAppli_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#define Rte_Write_psrEcsDiagRequest_au8DiagReq(data) Rte_Write_CIL_psrEcsDiagRequest_au8DiagReq(data)

#define Rte_Write_psrEcsDiagRequest_au8DiagReqComplement(data) Rte_Write_CIL_psrEcsDiagRequest_au8DiagReqComplement(data)

#define Rte_Read_RP_IF_AB_Crash_Int_XIX_Grundumfang_XIX_eCS_DE_AB_Crash_Int(data) (*(data) = Rte_ReceiveBuffer_6D385FB1A830DB92653750C44AD20C8A_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_eCS_Aktuatortest_BF_XIX_Grundumfang_XIX_eCS_DE_AB_eCS_Aktuatortest_BF(data) (*(data) = Rte_ReceiveBuffer_FC751E2739CF9017F9541E27ADE8219B_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_eCS_Aktuatortest_FA_XIX_Grundumfang_XIX_eCS_DE_AB_eCS_Aktuatortest_FA(data) (*(data) = Rte_ReceiveBuffer_FE6177AFD5FB45B2F6A9F94997417779_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_eCS_Aktuatortest_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_AB_eCS_Aktuatortest_Reihe2_BF(data) (*(data) = Rte_ReceiveBuffer_A476249DE4EFC01A50B56201964406BA_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_eCS_Aktuatortest_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_AB_eCS_Aktuatortest_Reihe2_FA(data) (*(data) = Rte_ReceiveBuffer_10FFE041C230D5EC6DD0F6E02A1CFE0E_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_eCS_Aktuatortest_Reihe3_BF_XIX_Grundumfang_XIX_eCS_DE_AB_eCS_Aktuatortest_Reihe3_BF(data) (*(data) = Rte_ReceiveBuffer_2C2FE1AF2A6B13436CFA32A7A6B91532_value, RTE_E_OK)

#define Rte_Read_RP_IF_AB_eCS_Aktuatortest_Reihe3_FA_XIX_Grundumfang_XIX_eCS_DE_AB_eCS_Aktuatortest_Reihe3_FA(data) (*(data) = Rte_ReceiveBuffer_4E10B5014408A57FCDC9E6198199CEF3_value, RTE_E_OK)

#define Rte_Trigger_ptrpAsrOsServicesCIL_CIL_runCANToSafetyAppli() (Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runCANToSafetyAppli_Start(), Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runCANToSafetyAppli_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#define Rte_Trigger_ptrpCilServicesBswMIf_CIL_runInit() (Rte_TriggerHook_CIL_ptrpCilServicesBswMIf_CIL_runInit_Start(), BswM_OnStartComEffective(), Rte_TriggerHook_CIL_ptrpCilServicesBswMIf_CIL_runInit_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#define Rte_Write_P_CAN_MF_Frame_stMFData(data) Rte_Write_CIL_P_CAN_MF_Frame_stMFData(data)

#define Rte_Read_prrSolenoidPWM_au16Pwm(data) Rte_Read_CIL_prrSolenoidPWM_au16Pwm(data)

#define Rte_Read_pclSolenoidStep_au8CurrentStep(data) Rte_Read_CIL_pclSolenoidStep_au8CurrentStep(data)

#define Rte_Read_pclSolenoidProfile_au8SelectedProfile(data) Rte_Read_CIL_pclSolenoidProfile_au8SelectedProfile(data)

#define Rte_Read_prrSolenoidShortToVccStatus_au8SolenoidAutotestStatus(data) Rte_Read_CIL_prrSolenoidShortToVccStatus_au8SolenoidAutotestStatus(data)

#define Rte_Read_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus(data) Rte_Read_CIL_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus(data)

#define Rte_Read_prrSolenoidOCStatus_au8SolenoidAutotestStatus(data) Rte_Read_CIL_prrSolenoidOCStatus_au8SolenoidAutotestStatus(data)

#define Rte_Read_prrSolenoidStuckStatus_au8SolenoidIsStuck(data) Rte_Read_CIL_prrSolenoidStuckStatus_au8SolenoidIsStuck(data)

#define Rte_Read_prrSolenoidOvervoltageStatus_au8SolenoidOvervoltageStatus(data) Rte_Read_CIL_prrSolenoidOvervoltageStatus_au8SolenoidOvervoltageStatus(data)

#define Rte_Read_prrSolenoidState_au8SolenoidState(data) Rte_Read_CIL_prrSolenoidState_au8SolenoidState(data)

#define Rte_Read_prrAccStatusFailiureSource_u32AccAlarmRegStatus(data) (*(data) = Rte_ReceiveBuffer_5F4AAF01077B640ECA8CD3376BD9AB84_value, RTE_E_OK)

#define Rte_Read_prrAccStatusFailiureSource_u8AccReturnStatus(data) (*(data) = Rte_ReceiveBuffer_4F9F3861A864CBE56D3C085CBB4358BA_value, RTE_E_OK)

#define Rte_Read_prrAccStatusFailiureSource_u8AccCRCStatus(data) (*(data) = Rte_ReceiveBuffer_E290676B8E0042F0E900CFEABF41311D_value, RTE_E_OK)

#define Rte_Read_prrSbcStatusFailiureSource_u32SbcReg1Status(data) (*(data) = Rte_ReceiveBuffer_811DED5CD55CD059370975E68FBF7268_value, RTE_E_OK)

#define Rte_Read_prrAccStatusFailiureSource_u8AccAlarmbPreinitSeqStatus(data) (*(data) = Rte_ReceiveBuffer_BE95DADF0AE0C0DDD3057EF325CB2E3F_value, RTE_E_OK)

#define Rte_Read_prrAccStatusFailiureSource_u8AccelAxisBroken(data) (*(data) = Rte_ReceiveBuffer_CEEFA87ADE9C6E304E2C2EC199ADC8A1_value, RTE_E_OK)

#define Rte_Call_pclMcuCharacteristics_GetTemperature(s16McuTemperature) (IoHwAb_GetMcuTemperature(s16McuTemperature), RTE_E_OK)

#define Rte_Call_pclPtcSensor_GetTemperature(s16PtcSensorTemperature) (IoHwAb_GetPtcTemperature(s16PtcSensorTemperature), RTE_E_OK)

#define Rte_Call_pclAccSensor_GetTemperature(s16AccTemperature) (IoHwAb_GetAccelerometerTemperature(s16AccTemperature), RTE_E_OK)

#define Rte_Call_pclEcuCharacterstics_GetTemperature(s16EcuTemperature) (IoHwAb_GetEcuTemperature(s16EcuTemperature), RTE_E_OK)

#define Rte_Call_pclSolenoidCharacteristics_GetTemperature(u8TypeOfMeasure, s16SolenoidTemperature) (IoHwAb_GetSolenoidTemperature(u8TypeOfMeasure, s16SolenoidTemperature), RTE_E_OK)

#define Rte_Call_pclConvAdcService_getMeasure(u8TypeOfMeasure, u16Measure) (IoHwAb_runGetMeasure(u8TypeOfMeasure, u16Measure), RTE_E_OK)

#define Rte_Trigger_ptrpAsrOsServicesCIL_CIL_runManageMF() (Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runManageMF_Start(), Rte_TriggerHook_CIL_ptrpAsrOsServicesCIL_CIL_runManageMF_Return())

#endif

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

/*------------------[executable entity activation reasons]-------------------*/

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#define Rte_InitValue_psrCrashStatus_u8IsCrashActive 0U
#define Rte_InitValue_prrAccStatusFailiureSource_u32AccAlarmRegStatus 0U
#define Rte_InitValue_prrAccStatusFailiureSource_u8AccAlarmbPreinitSeqStatus 0U
#define Rte_InitValue_prrAccStatusFailiureSource_u8AccCRCStatus 0U
#define Rte_InitValue_prrAccStatusFailiureSource_u8AccReturnStatus 0U
#define Rte_InitValue_prrAccStatusFailiureSource_u8AccelAxisBroken 0U
#define Rte_InitValue_prrEcsAlgoData_u16BallPosition 0U
#define Rte_InitValue_prrEcsAlgoData_u8EcsFlag 1U
#define Rte_InitValue_prrSbcStatusFailiureSource_u32SbcReg1Status 0U

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_CIL, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define CIL_START_SEC_CODE
#include <CIL_MemMap.h>
extern FUNC(void, RTE_CODE) CIL_runAppliToCAN (void);
extern FUNC(void, RTE_CODE) CIL_runCANToAppli (void);
#define CIL_STOP_SEC_CODE
#include <CIL_MemMap.h>

#define CIL_START_SEC_CODE_ASIL_A
#include <CIL_MemMap.h>
extern FUNC(void, RTE_CODE) CIL_runCANToSafetyAppli (void);
#define CIL_STOP_SEC_CODE_ASIL_A
#include <CIL_MemMap.h>

#define CIL_START_SEC_CODE
#include <CIL_MemMap.h>
extern FUNC(void, RTE_CODE) CIL_runInit (void);
extern FUNC(void, RTE_CODE) CIL_runManageMF (void);
extern FUNC(void, RTE_CODE) CIL_updateCurrentEcuState (uint8 u8CurrentEcuState);
#define CIL_STOP_SEC_CODE
#include <CIL_MemMap.h>

/*--------------[declaration of API functions provided by Rte]--------------*/

#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#if (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_BFS_1_DE_eCS_Error_Reihe1_BFS_1 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_BFS_2_DE_eCS_Error_Reihe1_BFS_2 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_FS_1_DE_eCS_Error_Reihe1_FS_1 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Error_Reihe1_FS_2_DE_eCS_Error_Reihe1_FS_2 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Error_Reihe2_BFS_DE_eCS_Error_Reihe2_BFS (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Error_Reihe2_FS_DE_eCS_Error_Reihe2_FS (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Gurtschloss_Status_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_eCS_Gurtschloss_Status_Reihe2_BF (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Gurtschloss_Status_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_eCS_Gurtschloss_Status_Reihe2_FA (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_HW_defekt_XIX_Grundumfang_XIX_eCS_DE_eCS_HW_defekt (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_SBS_Belegung_Reihe2_BF_XIX_Grundumfang_XIX_eCS_DE_eCS_SBS_Belegung_Reihe2_BF (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_SBS_Belegung_Reihe2_FA_XIX_Grundumfang_XIX_eCS_DE_eCS_SBS_Belegung_Reihe2_FA (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_SBS_LastState_Reihe2_BFS_DE_eCS_SBS_LastState_Reihe2_BFS (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_SBS_LastState_Reihe2_FS_DE_eCS_SBS_LastState_Reihe2_FS (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_XIX_Grundumfang_XIX_eCS_DE_eCS_Status (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_BFS_1_DE_eCS_Status_Verr_Reihe1_BFS_1 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_BFS_2_DE_eCS_Status_Verr_Reihe1_BFS_2 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_FS_1_DE_eCS_Status_Verr_Reihe1_FS_1 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe1_FS_2_DE_eCS_Status_Verr_Reihe1_FS_2 (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe2_BFS_DE_eCS_Status_Verr_Reihe2_BFS (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Status_Verr_Reihe2_FS_DE_eCS_Status_Verr_Reihe2_FS (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_SP_IF_eCS_Stoerung_XIX_Grundumfang_XIX_eCS_DE_eCS_Stoerung (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_P_CAN_CanDataOut_Frame_0_EcuCanDataOut (P2CONST(REC_CanDataOut64_Type, AUTOMATIC, RTE_APPL_DATA) data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_P_CAN_GliwaDataOut_Frame_GliwaCanDataOut (P2CONST(REC_CanDataOut64_Type, AUTOMATIC, RTE_APPL_DATA) data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_P_CAN_MF_Logger_Frame_MfLogger (uint8 data);

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrBuckleStatus_au8BuckleStatus (P2VAR(au8BuckleStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrBuckleStatus_au8BuckleStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSeatOccupancySensorStatus_au8SeatOccupancySensorStatus (P2VAR(au8SeatOccupancySensorType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSeatOccupancySensorStatus_au8SeatOccupancySensorStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrAccelMtrPerSecSqd_stAccelMtrPerSecSqd (P2VAR(REC_3D_AccelMtrPerSecSqdType, AUTOMATIC, RTE_APPL_DATA) data);

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prr3DAcceleration_st3DAccel (P2VAR(REC_3D_AccelerationType, AUTOMATIC, RTE_APPL_DATA) data);

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrCILData_au8MergedBuckleStatus (P2CONST(au8MergedBuckleStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrCILData_au8MergedBuckleStatus (P2CONST(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrCrashStatus_u8IsCrashActive (uint8 data);

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_P_CAN_GliwaDataIn_Frame_GliwaCanDataIn (P2VAR(REC_GliwaDataIn_Type, AUTOMATIC, RTE_APPL_DATA) data);

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrEcsDiagRequest_au8DiagReq (P2CONST(au8eCSDiagReqType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrEcsDiagRequest_au8DiagReq (P2CONST(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrEcsDiagRequest_au8DiagReqComplement (P2CONST(au8eCSDiagReqType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_psrEcsDiagRequest_au8DiagReqComplement (P2CONST(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runManageMF)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
#endif
#if (!defined(RTE_RUNNABLEAPI_CIL_runAppliToCAN)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runCANToSafetyAppli)) && (!defined(RTE_RUNNABLEAPI_CIL_runInit)) && (!defined(RTE_RUNNABLEAPI_CIL_updateCurrentEcuState))
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_CIL_P_CAN_MF_Frame_stMFData (P2CONST(REC_CanDataOut64_Type, AUTOMATIC, RTE_APPL_DATA) data);

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidPWM_au16Pwm (P2VAR(au16PwmType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidPWM_au16Pwm (P2VAR(unsigned short, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_pclSolenoidStep_au8CurrentStep (P2VAR(au8CurrentStepType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_pclSolenoidStep_au8CurrentStep (P2VAR(u8CurrentStepType, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_pclSolenoidProfile_au8SelectedProfile (P2VAR(au8SolenoidProfileType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_pclSolenoidProfile_au8SelectedProfile (P2VAR(u8SolenoidProfileType, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidShortToVccStatus_au8SolenoidAutotestStatus (P2VAR(au8SolenoidShortToVccStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidShortToVccStatus_au8SolenoidAutotestStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus (P2VAR(au8SolenoidShortToGndStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidOCStatus_au8SolenoidAutotestStatus (P2VAR(au8SolenoidOCStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidOCStatus_au8SolenoidAutotestStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidStuckStatus_au8SolenoidIsStuck (P2VAR(au8SolenoidBackupsType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidStuckStatus_au8SolenoidIsStuck (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidOvervoltageStatus_au8SolenoidOvervoltageStatus (P2VAR(au8SolenoidOvervoltageStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidOvervoltageStatus_au8SolenoidOvervoltageStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidState_au8SolenoidState (P2VAR(au8FsmStateType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_CIL_prrSolenoidState_au8SolenoidState (P2VAR(u8FsmStateType, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>

#if (!defined RTE_CORE) /* if included by software component */
extern FUNC(void, RTE_CODE) FSM_runCheckModeStatus (uint64 u64ModesToCheck, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) bModeStatus);

extern FUNC(void, RTE_CODE) IoHwAb_GetMcuTemperature (P2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) s16McuTemperature);

extern FUNC(void, RTE_CODE) IoHwAb_GetPtcTemperature (P2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) s16PtcSensorTemperature);

extern FUNC(void, RTE_CODE) IoHwAb_GetAccelerometerTemperature (P2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) s16AccTemperature);

extern FUNC(void, RTE_CODE) IoHwAb_GetEcuTemperature (P2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) s16EcuTemperature);

extern FUNC(void, RTE_CODE) IoHwAb_GetSolenoidTemperature (uint8 u8TypeOfMeasure, P2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) s16SolenoidTemperature);

extern FUNC(void, RTE_CODE) IoHwAb_runGetMeasure (u8AdcChannelIDType u8TypeOfMeasure, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) u16Measure);

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

extern CONSTP2CONST(Rte_CDS_CIL, RTE_CONST, RTE_CONST) Rte_Inst_CIL;

#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_CIL_H) */
/*==================[end of file]============================================*/

