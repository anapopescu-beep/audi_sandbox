#if !defined(RTE_DIOIF_TYPE_H)
#define RTE_DIOIF_TYPE_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains the application-specific types for component type DioIf
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Type.h>         /* RTE types header file */

/*==================[macros]=================================================*/

/*------------------[enumeration constants]----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#ifndef DIOIF_CH_EN_CS_1
#define DIOIF_CH_EN_CS_1 0U
#endif

#ifndef DIOIF_CH_EN_CS_2
#define DIOIF_CH_EN_CS_2 1U
#endif

#ifndef DIOIF_CH_EN_CS_3
#define DIOIF_CH_EN_CS_3 2U
#endif

#ifndef DIOIF_CH_EN_CS_4
#define DIOIF_CH_EN_CS_4 3U
#endif

#ifndef DIOIF_CH_EN_CS_5
#define DIOIF_CH_EN_CS_5 4U
#endif

#ifndef DIOIF_CH_EN_CS_6
#define DIOIF_CH_EN_CS_6 5U
#endif

#ifndef DIOIF_CH_EN_BOOST
#define DIOIF_CH_EN_BOOST 6U
#endif

#ifndef DIOIF_CH_ON_OFF_POWER
#define DIOIF_CH_ON_OFF_POWER 7U
#endif

#ifndef DIOIF_CH_ACC_ALARM_B
#define DIOIF_CH_ACC_ALARM_B 8U
#endif

#ifndef DIOIF_CH_WAKE_CYCLIC_POWER
#define DIOIF_CH_WAKE_CYCLIC_POWER 9U
#endif

#ifndef DIOIF_CH_WAKE_SW1
#define DIOIF_CH_WAKE_SW1 10U
#endif

#ifndef DIOIF_CH_WAKE_SW2
#define DIOIF_CH_WAKE_SW2 11U
#endif

#ifndef DIOIF_CH_MAX
#define DIOIF_CH_MAX 12U
#endif

#endif /* (!defined RTE_CORE) */

/*------------------[range definitions]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif /* (!defined RTE_CORE) */

/*------------------[invalid values]-----------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif /* (!defined RTE_CORE) */

/*------------------[mode declarations]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif /* (!defined RTE_CORE) */

/*==================[type definitions]=======================================*/

/*------------------[mode declaration group types]---------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif /* (!defined RTE_CORE) */

/*==================[external function declarations]=========================*/

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_DIOIF_TYPE_H) */
/*==================[end of file]============================================*/

