#if !defined(RTE_FSM_H)
#define RTE_FSM_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type FSM
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_FSM_Type.h> /* RTE application types header file */
#include <Rte_FSM_Hook.h> /* RTE application trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#if (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#define Rte_Trigger_ptrpFsmServicesBswMIf_FSM_Init() (Rte_TriggerHook_FSM_ptrpFsmServicesBswMIf_FSM_Init_Start(), BswM_OnStartupTwoB(), Rte_TriggerHook_FSM_ptrpFsmServicesBswMIf_FSM_Init_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#define Rte_IrvWrite_FSM_ModesInit_FSM_u32_ModesStatus(data) (Rte_Irv_FSM_FSM_u32_ModesStatus = (data))

#define Rte_IrvWrite_FSM_ModesInit_FSM_u32_ModesStatusComplement(data) (Rte_Irv_FSM_FSM_u32_ModesStatusComplement = (data))

#define Rte_Trigger_ptrpFsmServicesBswMIf_FSM_ModesInit() (Rte_TriggerHook_FSM_ptrpFsmServicesBswMIf_FSM_ModesInit_Start(), BswM_OnStartComEffective(), Rte_TriggerHook_FSM_ptrpFsmServicesBswMIf_FSM_ModesInit_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#define Rte_IrvRead_FSM_runCheckModeStatus_FSM_u32_ModesStatus() Rte_Irv_FSM_FSM_u32_ModesStatus

#define Rte_IrvRead_FSM_runCheckModeStatus_FSM_u32_ModesStatusComplement() Rte_Irv_FSM_FSM_u32_ModesStatusComplement

#define Rte_IrvWrite_FSM_runCheckModeStatus_FSM_u32_ModesStatus(data) (Rte_Irv_FSM_FSM_u32_ModesStatus = (data))

#define Rte_IrvWrite_FSM_runCheckModeStatus_FSM_u32_ModesStatusComplement(data) (Rte_Irv_FSM_FSM_u32_ModesStatusComplement = (data))

#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction))
#define Rte_Call_pclDemServices_GetEventStatus Dem_GetEventStatus

#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#define Rte_Write_psrSolenoidProfile_au8SelectedProfile(data) Rte_Write_FSM_psrSolenoidProfile_au8SelectedProfile(data)

#define Rte_Write_psrSolenoidStuckStatus_au8SolenoidIsStuck(data) Rte_Write_FSM_psrSolenoidStuckStatus_au8SolenoidIsStuck(data)

#define Rte_Write_psrSolenoidState_au8SolenoidState(data) Rte_Write_FSM_psrSolenoidState_au8SolenoidState(data)

#define Rte_Read_prrEcsDiagRequest_au8DiagReq(data) Rte_Read_FSM_prrEcsDiagRequest_au8DiagReq(data)

#define Rte_IsUpdated_prrEcsDiagRequest_au8DiagReq() Rte_ReceiveBuffer_E58F93C275436AADDBC13179CF8A0923_isUpdated

#define Rte_Read_prrEcsDiagRequest_au8DiagReqComplement(data) Rte_Read_FSM_prrEcsDiagRequest_au8DiagReqComplement(data)

#define Rte_IsUpdated_prrEcsDiagRequest_au8DiagReqComplement() Rte_ReceiveBuffer_8BFDE9B2F88FC27025689034FB39E09F_isUpdated

#define Rte_Read_prrSolenoidOpenCircuitStatus_au8SolenoidAutotestStatus(data) Rte_Read_FSM_prrSolenoidOpenCircuitStatus_au8SolenoidAutotestStatus(data)

#define Rte_IsUpdated_prrSolenoidOpenCircuitStatus_au8SolenoidAutotestStatus() Rte_ReceiveBuffer_46545C53BC6B376E698D6AA9FED1E22D_isUpdated

#define Rte_Read_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus(data) Rte_Read_FSM_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus(data)

#define Rte_IsUpdated_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus() Rte_ReceiveBuffer_4D61DDFA3DF600BDDAB85A8EDE2EDEC4_isUpdated

#define Rte_Read_prrEcsAlgoFlag_u8EcsFlag(data) Rte_Read_FSM_prrEcsAlgoFlag_u8EcsFlag(data)

#define Rte_IsUpdated_prrEcsAlgoFlag_u8EcsFlag() Rte_ReceiveBuffer_D3E179B82C0EB186D8DE010372E03E17_isUpdated

#define Rte_Call_pclDemIfEventSerices_GetCounterPassedThreshold(ku16EventId, pu16DebounceTime) (Dem_GetEventDebounceTime(ku16EventId, pu16DebounceTime), RTE_E_OK)

#define Rte_Call_pclAutotestServices_GetTestResult(u8AutoTestId, u8TestResult) (ATM_runGetTestResult(u8AutoTestId, u8TestResult), RTE_E_OK)

#define Rte_Call_pclNvmIfServices_SetRamBlockStatus(u16BlockId, u8BlockChanged) (NvmIf_SetRamBlockStatus(u16BlockId, u8BlockChanged), RTE_E_OK)

#define Rte_Trigger_ptrpAsrOsServicesFSM_FSM_runMainFunction() (Rte_TriggerHook_FSM_ptrpAsrOsServicesFSM_FSM_runMainFunction_Start(), Rte_TriggerHook_FSM_ptrpAsrOsServicesFSM_FSM_runMainFunction_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction))
#define Rte_Read_prrCILData_au8MergedBuckleStatus(data) Rte_Read_FSM_prrCILData_au8MergedBuckleStatus(data)

#define Rte_Read_prrSolenoidOverVoltageStatus_au8SolenoidOvervoltageStatus(data) Rte_Read_FSM_prrSolenoidOverVoltageStatus_au8SolenoidOvervoltageStatus(data)

#define Rte_IsUpdated_prrSolenoidOverVoltageStatus_au8SolenoidOvervoltageStatus() Rte_ReceiveBuffer_5A9A49087A1D068B730AD0EF7EBA1D3E_isUpdated

#define Rte_Read_prrSolenoidConfirmation_au8SolenoidStatus(data) Rte_Read_FSM_prrSolenoidConfirmation_au8SolenoidStatus(data)

#define Rte_Read_prrACCServices_u8AccInitStateMachine(data) (*(data) = Rte_ReceiveBuffer_D884FEABE5B833CFF5DB5C08E13DA662_value, RTE_E_OK)

#define Rte_Read_prrBswMIfServices_u8BlockRestoreStatus(data) (*(data) = Rte_ReceiveBuffer_AE102D5F548AE1D1C22D27FA022D8A6B_value, RTE_E_OK)

#define Rte_Read_prrCrashStatus_u8IsCrashActive(data) Rte_Read_FSM_prrCrashStatus_u8IsCrashActive(data)

#define Rte_IsUpdated_prrCrashStatus_u8IsCrashActive() Rte_ReceiveBuffer_927F10C8403E76D16064A3344637A06D_isUpdated

#define Rte_Call_pclAutotestServices_GetCriticalAutoTestsReachedFlag(u8CriticalAutoTestsReachedFlag) (ATM_runGetCriticalAutoTestsReachedFlag(u8CriticalAutoTestsReachedFlag), RTE_E_OK)

#define Rte_Call_pclConvAdcService_getMeasure(u8TypeOfMeasure, u16Measure) (IoHwAb_runGetMeasure(u8TypeOfMeasure, u16Measure), RTE_E_OK)

#define Rte_Trigger_ptrpAsrOsServicesFSM_FSM_runUpdateModeStatus() (Rte_TriggerHook_FSM_ptrpAsrOsServicesFSM_FSM_runUpdateModeStatus_Start(), Rte_TriggerHook_FSM_ptrpAsrOsServicesFSM_FSM_runUpdateModeStatus_Return())

#endif

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

#define RTE_E_GeneralDiagnosticInfo_E_NOT_OK 1U
#define RTE_E_GeneralDiagnosticInfo_DEM_E_NO_DTC_AVAILABLE 2U
#define RTE_E_GeneralDiagnosticInfo_DEM_E_NODATAAVAILABLE 48U
#define RTE_E_GeneralDiagnosticInfo_DEM_E_WRONG_RECORDNUMBER 49U
#define RTE_E_GeneralDiagnosticInfo_DEM_E_WRONG_BUFFERSIZE 21U
#define RTE_E_GeneralDiagnosticInfo_DEM_E_WRONG_DIDNUMBER 50U

/*------------------[executable entity activation reasons]-------------------*/

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#define Rte_InitValue_prrACCServices_u8AccInitStateMachine 0U
#define Rte_InitValue_prrBswMIfServices_u8BlockRestoreStatus 85U
#define Rte_InitValue_prrCrashStatus_u8IsCrashActive 0U
#define Rte_InitValue_prrEcsAlgoFlag_u16BallPosition 0U
#define Rte_InitValue_prrEcsAlgoFlag_u8EcsFlag 1U

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_FSM, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define FSM_START_SEC_CODE_ASIL_A
#include <FSM_MemMap.h>
extern FUNC(void, RTE_CODE) FSM_Init (void);
extern FUNC(void, RTE_CODE) FSM_ModesInit (void);
extern FUNC(void, RTE_CODE) FSM_getUnlockDetectionTimeoutPeriod (P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) pu16UnlockDetectionTimeoutPeriod);
extern FUNC(void, RTE_CODE) FSM_runCalculateProfileTimeout (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) pu8Response);
extern FUNC(void, RTE_CODE) FSM_runCheckModeStatus (uint64 u64ModesToCheck, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) bModeStatus);
extern FUNC(void, RTE_CODE) FSM_runMainFunction (void);
extern FUNC(void, RTE_CODE) FSM_runUpdateModeStatus (void);
#define FSM_STOP_SEC_CODE_ASIL_A
#include <FSM_MemMap.h>

/*--------------[declaration of API functions provided by Rte]--------------*/

#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#if (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction))
#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runUpdateModeStatus))
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_FSM_psrSolenoidProfile_au8SelectedProfile (P2CONST(au8SolenoidProfileType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_FSM_psrSolenoidProfile_au8SelectedProfile (P2CONST(u8SolenoidProfileType, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_FSM_psrSolenoidStuckStatus_au8SolenoidIsStuck (P2CONST(au8SolenoidBackupsType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_FSM_psrSolenoidStuckStatus_au8SolenoidIsStuck (P2CONST(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_FSM_psrSolenoidState_au8SolenoidState (P2CONST(au8FsmStateType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_FSM_psrSolenoidState_au8SolenoidState (P2CONST(u8FsmStateType, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrEcsDiagRequest_au8DiagReq (P2VAR(au8eCSDiagReqType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrEcsDiagRequest_au8DiagReq (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrEcsDiagRequest_au8DiagReqComplement (P2VAR(au8eCSDiagReqType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrEcsDiagRequest_au8DiagReqComplement (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidOpenCircuitStatus_au8SolenoidAutotestStatus (P2VAR(au8SolenoidOCStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidOpenCircuitStatus_au8SolenoidAutotestStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus (P2VAR(au8SolenoidShortToGndStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidShortToGndStatus_au8SolenoidAutotestStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrEcsAlgoFlag_u8EcsFlag (P2VAR(u8EcsTriggerType, AUTOMATIC, RTE_APPL_DATA) data);

#endif
#if (!defined(RTE_RUNNABLEAPI_FSM_Init)) && (!defined(RTE_RUNNABLEAPI_FSM_ModesInit)) && (!defined(RTE_RUNNABLEAPI_FSM_getUnlockDetectionTimeoutPeriod)) && (!defined(RTE_RUNNABLEAPI_FSM_runCalculateProfileTimeout)) && (!defined(RTE_RUNNABLEAPI_FSM_runCheckModeStatus)) && (!defined(RTE_RUNNABLEAPI_FSM_runMainFunction))
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrCILData_au8MergedBuckleStatus (P2VAR(au8MergedBuckleStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrCILData_au8MergedBuckleStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidOverVoltageStatus_au8SolenoidOvervoltageStatus (P2VAR(au8SolenoidOvervoltageStatusType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidOverVoltageStatus_au8SolenoidOvervoltageStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidConfirmation_au8SolenoidStatus (P2VAR(au8SolenoidUnlockConfirmationType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrSolenoidConfirmation_au8SolenoidStatus (P2VAR(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif

extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_FSM_prrCrashStatus_u8IsCrashActive (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>

#if (!defined RTE_CORE) /* if included by software component */
extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventStatus (Dem_EventIdType EventId, P2VAR(Dem_EventStatusExtendedType, AUTOMATIC, RTE_APPL_DATA) EventStatusExtended);

extern FUNC(void, RTE_CODE) Dem_GetEventDebounceTime (Dem_EventIdType ku16EventId, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) pu16DebounceTime);

extern FUNC(void, RTE_CODE) ATM_runGetTestResult (u8AutoTestIdType u8AutoTestId, P2VAR(u8TestResultType, AUTOMATIC, RTE_APPL_DATA) u8TestResult);

extern FUNC(void, RTE_CODE) NvmIf_SetRamBlockStatus (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);

extern FUNC(void, RTE_CODE) ATM_runGetCriticalAutoTestsReachedFlag (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) u8CriticalAutoTestsReachedFlag);

extern FUNC(void, RTE_CODE) IoHwAb_runGetMeasure (u8AdcChannelIDType u8TypeOfMeasure, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) u16Measure);

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

extern CONSTP2CONST(Rte_CDS_FSM, RTE_CONST, RTE_CONST) Rte_Inst_FSM;

#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_FSM_H) */
/*==================[end of file]============================================*/

