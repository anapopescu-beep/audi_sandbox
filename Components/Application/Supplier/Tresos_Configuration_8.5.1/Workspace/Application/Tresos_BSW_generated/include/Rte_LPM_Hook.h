#if !defined(RTE_LPM_HOOK_H)
#define RTE_LPM_HOOK_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte hook declarations for the software component type LPM
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#include <Rte_Cfg.h>         /* RTE VFB configuration header file */
#include <Rte_Type.h>     /* Rte type definitions header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */
#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE (0)
#endif /* RTE_VFB_TRACE */
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start(void);
#else
#define Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Start */
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return(void);
#else
#define Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclSbcServices_SBC_SetToLowPower_Return */
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start(void);
#else
#define Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Start */
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return(void);
#else
#define Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclSbcServices_SBC_sleepTriggerWatchdog_Return */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Start */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepInit_Return */
#if defined(Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start
#endif
#if defined(Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start)
#undef Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start(uint16 u16WakeCh1, uint16 u16WakeCh2, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) bReturn);
#else
#define Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start(u16WakeCh1, u16WakeCh2, bReturn) ((void)0)
#endif /* Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Start */
#if defined(Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return
#endif
#if defined(Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return)
#undef Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return(uint16 u16WakeCh1, uint16 u16WakeCh2, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) bReturn);
#else
#define Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return(u16WakeCh1, u16WakeCh2, bReturn) ((void)0)
#endif /* Rte_CallHook_LPM_pclLowPowerWakeUp_HandleSeatVariants_Return */
#if defined(Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start
#endif
#if defined(Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start)
#undef Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start(P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) pu16WakeCh1, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) pu16WakeCh2, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) pu8Valid, uint8 u8ResetState);
#else
#define Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start(pu16WakeCh1, pu16WakeCh2, pu8Valid, u8ResetState) ((void)0)
#endif /* Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Start */
#if defined(Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return
#endif
#if defined(Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return)
#undef Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return(P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) pu16WakeCh1, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) pu16WakeCh2, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) pu8Valid, uint8 u8ResetState);
#else
#define Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return(pu16WakeCh1, pu16WakeCh2, pu8Valid, u8ResetState) ((void)0)
#endif /* Rte_CallHook_LPM_pclHandleSeatCurrentCircuit_IoHwAb_HandleSeatCurrentCircuit_Return */
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start
#endif
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start)
#undef Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start(void);
#else
#define Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Start */
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return
#endif
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return)
#undef Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return(void);
#else
#define Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclAdcIfServices_StartConversion_Return */
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start
#endif
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start)
#undef Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start(void);
#else
#define Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Start */
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return
#endif
#if defined(Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return)
#undef Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return(void);
#else
#define Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclAdcIfServices_StopConversion_Return */
#if defined(Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start
#endif
#if defined(Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start)
#undef Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start(void);
#else
#define Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Start */
#if defined(Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return
#endif
#if defined(Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return)
#undef Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return(void);
#else
#define Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclAdcIfServices_WaitForConversion_Return */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Start */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepMainLoop_Return */
#if defined(Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start
#endif
#if defined(Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start)
#undef Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start(void);
#else
#define Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Start */
#if defined(Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return
#endif
#if defined(Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return)
#undef Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return(void);
#else
#define Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclAccRestartInit_RestartInitialization_Return */
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start(void);
#else
#define Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start() ((void)0)
#endif /* Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Start */
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return
#endif
#if defined(Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return)
#undef Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return(void);
#else
#define Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return() ((void)0)
#endif /* Rte_CallHook_LPM_pclSbcServices_SBC_SetToNormal_Return */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Start */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesBswMIf_LPM_sleepRestore_Return */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Start */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_LPTMR_ISR_Return */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Start */
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return
#endif
#if defined(Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return)
#undef Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return(void);
#else
#define Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return() ((void)0)
#endif /* Rte_TriggerHook_LPM_ptrpLpmServicesAsrOs_PORTD_ISR_Return */
#if defined(Rte_Runnable_LPM_LPM_sleepInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPM_sleepInit_Start
#endif
#if defined(Rte_Runnable_LPM_LPM_sleepInit_Start)
#undef Rte_Runnable_LPM_LPM_sleepInit_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPM_sleepInit_Start(void);
#else
#define Rte_Runnable_LPM_LPM_sleepInit_Start() ((void)0)
#endif /* Rte_Runnable_LPM_LPM_sleepInit_Start */
#if defined(Rte_Runnable_LPM_LPM_sleepInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPM_sleepInit_Return
#endif
#if defined(Rte_Runnable_LPM_LPM_sleepInit_Return)
#undef Rte_Runnable_LPM_LPM_sleepInit_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPM_sleepInit_Return(void);
#else
#define Rte_Runnable_LPM_LPM_sleepInit_Return() ((void)0)
#endif /* Rte_Runnable_LPM_LPM_sleepInit_Return */
#if defined(Rte_Runnable_LPM_LPM_sleepMainLoop_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPM_sleepMainLoop_Start
#endif
#if defined(Rte_Runnable_LPM_LPM_sleepMainLoop_Start)
#undef Rte_Runnable_LPM_LPM_sleepMainLoop_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPM_sleepMainLoop_Start(void);
#else
#define Rte_Runnable_LPM_LPM_sleepMainLoop_Start() ((void)0)
#endif /* Rte_Runnable_LPM_LPM_sleepMainLoop_Start */
#if defined(Rte_Runnable_LPM_LPM_sleepMainLoop_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPM_sleepMainLoop_Return
#endif
#if defined(Rte_Runnable_LPM_LPM_sleepMainLoop_Return)
#undef Rte_Runnable_LPM_LPM_sleepMainLoop_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPM_sleepMainLoop_Return(void);
#else
#define Rte_Runnable_LPM_LPM_sleepMainLoop_Return() ((void)0)
#endif /* Rte_Runnable_LPM_LPM_sleepMainLoop_Return */
#if defined(Rte_Runnable_LPM_LPM_sleepRestore_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPM_sleepRestore_Start
#endif
#if defined(Rte_Runnable_LPM_LPM_sleepRestore_Start)
#undef Rte_Runnable_LPM_LPM_sleepRestore_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPM_sleepRestore_Start(void);
#else
#define Rte_Runnable_LPM_LPM_sleepRestore_Start() ((void)0)
#endif /* Rte_Runnable_LPM_LPM_sleepRestore_Start */
#if defined(Rte_Runnable_LPM_LPM_sleepRestore_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPM_sleepRestore_Return
#endif
#if defined(Rte_Runnable_LPM_LPM_sleepRestore_Return)
#undef Rte_Runnable_LPM_LPM_sleepRestore_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPM_sleepRestore_Return(void);
#else
#define Rte_Runnable_LPM_LPM_sleepRestore_Return() ((void)0)
#endif /* Rte_Runnable_LPM_LPM_sleepRestore_Return */
#if defined(Rte_Runnable_LPM_LPTMR_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPTMR_ISR_Start
#endif
#if defined(Rte_Runnable_LPM_LPTMR_ISR_Start)
#undef Rte_Runnable_LPM_LPTMR_ISR_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPTMR_ISR_Start(void);
#else
#define Rte_Runnable_LPM_LPTMR_ISR_Start() ((void)0)
#endif /* Rte_Runnable_LPM_LPTMR_ISR_Start */
#if defined(Rte_Runnable_LPM_LPTMR_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_LPTMR_ISR_Return
#endif
#if defined(Rte_Runnable_LPM_LPTMR_ISR_Return)
#undef Rte_Runnable_LPM_LPTMR_ISR_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_LPTMR_ISR_Return(void);
#else
#define Rte_Runnable_LPM_LPTMR_ISR_Return() ((void)0)
#endif /* Rte_Runnable_LPM_LPTMR_ISR_Return */
#if defined(Rte_Runnable_LPM_PORTD_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_PORTD_ISR_Start
#endif
#if defined(Rte_Runnable_LPM_PORTD_ISR_Start)
#undef Rte_Runnable_LPM_PORTD_ISR_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_PORTD_ISR_Start(void);
#else
#define Rte_Runnable_LPM_PORTD_ISR_Start() ((void)0)
#endif /* Rte_Runnable_LPM_PORTD_ISR_Start */
#if defined(Rte_Runnable_LPM_PORTD_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_LPM_PORTD_ISR_Return
#endif
#if defined(Rte_Runnable_LPM_PORTD_ISR_Return)
#undef Rte_Runnable_LPM_PORTD_ISR_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_LPM_PORTD_ISR_Return(void);
#else
#define Rte_Runnable_LPM_PORTD_ISR_Return() ((void)0)
#endif /* Rte_Runnable_LPM_PORTD_ISR_Return */

/*==================[type definitions]=======================================*/

/*==================[external function declarations]=========================*/

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/
/** @} doxygen end group definition */
#endif /* !defined(RTE_LPM_HOOK_H) */
/*==================[end of file]============================================*/

