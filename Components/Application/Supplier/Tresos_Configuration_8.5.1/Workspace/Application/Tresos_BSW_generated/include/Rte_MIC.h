#if !defined(RTE_MIC_H)
#define RTE_MIC_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type MIC
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_MIC_Type.h> /* RTE application types header file */
#include <Rte_MIC_Hook.h> /* RTE application trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#if (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#define Rte_Call_pclResetCause_GetResetCause(pu32ResetCause) (RCM_GetResetCause(pu32ResetCause), RTE_E_OK)

#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#define Rte_Call_pclNvmIfServices_SetRamBlockStatus(u16BlockId, u8BlockChanged) (NvmIf_SetRamBlockStatus(u16BlockId, u8BlockChanged), RTE_E_OK)

#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption))
#define Rte_Call_pclResetCauseNotification_NotifyResetCause(u32ResetCauseNotification) (RCM_NotifyResetCause(u32ResetCauseNotification), RTE_E_OK)

#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#define Rte_Trigger_p_ptrrMicServicesOsIf_MIC_BusFaultException() (Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start(), ProtectionHook_OsApplication_0(), Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#define Rte_Call_pclSbcServices_SBC_Reset() (SBC_Reset(), RTE_E_OK)

#define Rte_Trigger_p_ptrrMicServicesOsIf_MIC_HardFaultException() (Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start(), ProtectionHook_OsApplication_0(), Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException))
#define Rte_Trigger_p_ptrrMicServicesBswMIf_MIC_Init() (Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start(), BswM_OnStartupTwoA(), Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return())

#endif

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

/*------------------[executable entity activation reasons]-------------------*/

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_MIC, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define MIC_START_SEC_CODE_ASIL_A
#include <MIC_MemMap.h>
extern FUNC(void, RTE_CODE) MIC_Autotest_RunEepromMemoryCorruption (P2VAR(u8TestResultType, AUTOMATIC, RTE_APPL_DATA) pu8TestResult);
extern FUNC(void, RTE_CODE) MIC_Autotest_RunPFlashMemoryCorruption (P2VAR(u8TestResultType, AUTOMATIC, RTE_APPL_DATA) pu8TestResult);
extern FUNC(void, RTE_CODE) MIC_Autotest_RunRamMemoryCorruption (P2VAR(u8TestResultType, AUTOMATIC, RTE_APPL_DATA) pu8TestResult);
extern FUNC(void, RTE_CODE) MIC_BusFaultException (void);
extern FUNC(void, RTE_CODE) MIC_HardFaultException (void);
extern FUNC(void, RTE_CODE) MIC_Init (void);
#define MIC_STOP_SEC_CODE_ASIL_A
#include <MIC_MemMap.h>

/*--------------[declaration of API functions provided by Rte]--------------*/

#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#if (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption))
#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_Init))
#endif
#if (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunEepromMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunPFlashMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_Autotest_RunRamMemoryCorruption)) && (!defined(RTE_RUNNABLEAPI_MIC_BusFaultException)) && (!defined(RTE_RUNNABLEAPI_MIC_HardFaultException))
#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>

#if (!defined RTE_CORE) /* if included by software component */
extern FUNC(void, RTE_CODE) RCM_GetResetCause (P2VAR(u32ResetCauseType, AUTOMATIC, RTE_APPL_DATA) pu32ResetCause);

extern FUNC(void, RTE_CODE) NvmIf_SetRamBlockStatus (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);

extern FUNC(void, RTE_CODE) RCM_NotifyResetCause (u32ResetReasonNotificationType u32ResetCauseNotification);

extern FUNC(void, RTE_CODE) SBC_Reset (void);

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

extern CONSTP2CONST(Rte_CDS_MIC, RTE_CONST, RTE_CONST) Rte_Inst_MIC;

#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_MIC_H) */
/*==================[end of file]============================================*/

