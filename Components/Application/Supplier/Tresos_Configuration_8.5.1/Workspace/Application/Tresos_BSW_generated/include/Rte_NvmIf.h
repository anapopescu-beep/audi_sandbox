#if !defined(RTE_NVMIF_H)
#define RTE_NVMIF_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type NvmIf
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_NvmIf_Type.h> /* RTE application types header file */
#include <Rte_NvmIf_Hook.h> /* RTE application trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock))
#define Rte_Call_pclNvmService_AeeTraceabilityNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(10U, RequestResultPtr)

#define Rte_Call_pclNvmService_AssemblySerialNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(11U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsSteps_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(44U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsVariant_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(13U, RequestResultPtr)

#define Rte_Call_pclNvmService_HwPartNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(9U, RequestResultPtr)

#define Rte_Call_pclNvmService_LockUnlockECU_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(7U, RequestResultPtr)

#define Rte_Call_pclNvmServices_AutotestEnableParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(6U, RequestResultPtr)

#define Rte_Call_pclNvmServices_AutotestParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(29U, RequestResultPtr)

#define Rte_Call_pclNvmServices_DemDefault_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(2U, RequestResultPtr)

#define Rte_Call_pclNvmServices_EccCounters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(3U, RequestResultPtr)

#define Rte_Call_pclNvmServices_MeasFrameCfg_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(8U, RequestResultPtr)

#define Rte_Call_pclNvmServices_ProcessMode_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(12U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsAccLowPass_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(18U, RequestResultPtr)

#define Rte_Call_pclNvmServices_WarmResetCounters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(4U, RequestResultPtr)

#define Rte_Call_pclNvmServices_EcuTempCalibration_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(23U, RequestResultPtr)

#define Rte_Call_pclNvmService_AlvNvmVersion_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(24U, RequestResultPtr)

#define Rte_Call_pclNvmService_AccAngleCalibration_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(26U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsSensitivityOPT_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(22U, RequestResultPtr)

#define Rte_Call_pclNvmService_EolCounters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(27U, RequestResultPtr)

#define Rte_Call_pclNvmService_PhysicalMeasurements_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(30U, RequestResultPtr)

#define Rte_Call_pclNvmService_SolenoidParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(31U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcuStateTimingParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(33U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemSparePartNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(34U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsAccOffsets_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(15U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemHardwareNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(35U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemSystemName_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(36U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemFlashBootloader_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(37U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemOdxIdentifier_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(38U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemOdxVersion_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(39U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemEcuSerialNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(40U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemLogicalBlockVersion_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(41U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemHardwareVersionNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(42U, RequestResultPtr)

#define Rte_Call_pclNvmService_OemAppSwVersionNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(43U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsAlgoOutputDelay_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(20U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsParameters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(45U, RequestResultPtr)

#define Rte_Call_pclNvmServices_MeasFrameRamCfg_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(25U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsProfiles_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(32U, RequestResultPtr)

#define Rte_Call_pclNvmService_SBSLastState_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(19U, RequestResultPtr)

#define Rte_Call_pclNvmService_EcsSensitivityLUT_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(21U, RequestResultPtr)

#endif
#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock))
#define Rte_Call_pclNvmService_AeeTraceabilityNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(10U, BlockChanged)

#define Rte_Call_pclNvmService_AssemblySerialNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(11U, BlockChanged)

#define Rte_Call_pclNvmService_EcsSteps_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(44U, BlockChanged)

#define Rte_Call_pclNvmService_EcsVariant_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(13U, BlockChanged)

#define Rte_Call_pclNvmService_HwPartNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(9U, BlockChanged)

#define Rte_Call_pclNvmService_LockUnlockECU_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(7U, BlockChanged)

#define Rte_Call_pclNvmServices_AutotestEnableParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(6U, BlockChanged)

#define Rte_Call_pclNvmServices_AutotestParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(29U, BlockChanged)

#define Rte_Call_pclNvmServices_DemDefault_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(2U, BlockChanged)

#define Rte_Call_pclNvmServices_EccCounters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(3U, BlockChanged)

#define Rte_Call_pclNvmServices_MeasFrameCfg_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(8U, BlockChanged)

#define Rte_Call_pclNvmServices_ProcessMode_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(12U, BlockChanged)

#define Rte_Call_pclNvmService_EcsAccLowPass_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(18U, BlockChanged)

#define Rte_Call_pclNvmServices_WarmResetCounters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(4U, BlockChanged)

#define Rte_Call_pclNvmServices_EcuTempCalibration_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(23U, BlockChanged)

#define Rte_Call_pclNvmService_AlvNvmVersion_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(24U, BlockChanged)

#define Rte_Call_pclNvmService_AccAngleCalibration_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(26U, BlockChanged)

#define Rte_Call_pclNvmService_EcsSensitivityOPT_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(22U, BlockChanged)

#define Rte_Call_pclNvmService_EolCounters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(27U, BlockChanged)

#define Rte_Call_pclNvmService_PhysicalMeasurements_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(30U, BlockChanged)

#define Rte_Call_pclNvmService_SolenoidParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(31U, BlockChanged)

#define Rte_Call_pclNvmService_EcuStateTimingParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(33U, BlockChanged)

#define Rte_Call_pclNvmService_OemSparePartNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(34U, BlockChanged)

#define Rte_Call_pclNvmService_EcsAccOffsets_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(15U, BlockChanged)

#define Rte_Call_pclNvmService_OemHardwareNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(35U, BlockChanged)

#define Rte_Call_pclNvmService_OemSystemName_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(36U, BlockChanged)

#define Rte_Call_pclNvmService_OemFlashBootloader_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(37U, BlockChanged)

#define Rte_Call_pclNvmService_OemOdxIdentifier_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(38U, BlockChanged)

#define Rte_Call_pclNvmService_OemOdxVersion_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(39U, BlockChanged)

#define Rte_Call_pclNvmService_OemEcuSerialNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(40U, BlockChanged)

#define Rte_Call_pclNvmService_OemLogicalBlockVersion_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(41U, BlockChanged)

#define Rte_Call_pclNvmService_OemHardwareVersionNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(42U, BlockChanged)

#define Rte_Call_pclNvmService_OemAppSwVersionNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(43U, BlockChanged)

#define Rte_Call_pclNvmService_EcsAlgoOutputDelay_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(20U, BlockChanged)

#define Rte_Call_pclNvmService_EcsParameters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(45U, BlockChanged)

#define Rte_Call_pclNvmServices_MeasFrameRamCfg_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(25U, BlockChanged)

#define Rte_Call_pclNvmService_EcsProfiles_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(32U, BlockChanged)

#define Rte_Call_pclNvmService_SBSLastState_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(19U, BlockChanged)

#define Rte_Call_pclNvmService_EcsSensitivityLUT_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(21U, BlockChanged)

#endif
#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress))
#define Rte_Call_pclNvmService_AeeTraceabilityNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(10U, SrcPtr)

#define Rte_Call_pclNvmService_AssemblySerialNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(11U, SrcPtr)

#define Rte_Call_pclNvmService_EcsSteps_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(44U, SrcPtr)

#define Rte_Call_pclNvmService_EcsVariant_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(13U, SrcPtr)

#define Rte_Call_pclNvmService_HwPartNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(9U, SrcPtr)

#define Rte_Call_pclNvmService_LockUnlockECU_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(7U, SrcPtr)

#define Rte_Call_pclNvmServices_AutotestEnableParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(6U, SrcPtr)

#define Rte_Call_pclNvmServices_AutotestParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(29U, SrcPtr)

#define Rte_Call_pclNvmServices_DemDefault_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(2U, SrcPtr)

#define Rte_Call_pclNvmServices_EccCounters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(3U, SrcPtr)

#define Rte_Call_pclNvmServices_MeasFrameCfg_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(8U, SrcPtr)

#define Rte_Call_pclNvmServices_ProcessMode_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(12U, SrcPtr)

#define Rte_Call_pclNvmService_EcsAccLowPass_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(18U, SrcPtr)

#define Rte_Call_pclNvmServices_WarmResetCounters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(4U, SrcPtr)

#define Rte_Call_pclNvmServices_EcuTempCalibration_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(23U, SrcPtr)

#define Rte_Call_pclNvmService_AlvNvmVersion_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(24U, SrcPtr)

#define Rte_Call_pclNvmService_AccAngleCalibration_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(26U, SrcPtr)

#define Rte_Call_pclNvmService_EcsSensitivityOPT_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(22U, SrcPtr)

#define Rte_Call_pclNvmService_EolCounters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(27U, SrcPtr)

#define Rte_Call_pclNvmService_PhysicalMeasurements_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(30U, SrcPtr)

#define Rte_Call_pclNvmService_SolenoidParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(31U, SrcPtr)

#define Rte_Call_pclNvmService_EcuStateTimingParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(33U, SrcPtr)

#define Rte_Call_pclNvmService_OemSparePartNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(34U, SrcPtr)

#define Rte_Call_pclNvmService_EcsAccOffsets_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(15U, SrcPtr)

#define Rte_Call_pclNvmService_OemHardwareNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(35U, SrcPtr)

#define Rte_Call_pclNvmService_OemSystemName_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(36U, SrcPtr)

#define Rte_Call_pclNvmService_OemFlashBootloader_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(37U, SrcPtr)

#define Rte_Call_pclNvmService_OemOdxIdentifier_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(38U, SrcPtr)

#define Rte_Call_pclNvmService_OemOdxVersion_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(39U, SrcPtr)

#define Rte_Call_pclNvmService_OemEcuSerialNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(40U, SrcPtr)

#define Rte_Call_pclNvmService_OemLogicalBlockVersion_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(41U, SrcPtr)

#define Rte_Call_pclNvmService_OemHardwareVersionNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(42U, SrcPtr)

#define Rte_Call_pclNvmService_OemAppSwVersionNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(43U, SrcPtr)

#define Rte_Call_pclNvmService_EcsAlgoOutputDelay_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(20U, SrcPtr)

#define Rte_Call_pclNvmService_EcsParameters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(45U, SrcPtr)

#define Rte_Call_pclNvmServices_MeasFrameRamCfg_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(25U, SrcPtr)

#define Rte_Call_pclNvmService_EcsProfiles_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(32U, SrcPtr)

#define Rte_Call_pclNvmService_SBSLastState_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(19U, SrcPtr)

#define Rte_Call_pclNvmService_EcsSensitivityLUT_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(21U, SrcPtr)

#endif

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

#define RTE_E_NvM_ASR42_Service_E_NOT_OK 1U

/*------------------[executable entity activation reasons]-------------------*/

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_NvmIf, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define NvmIf_START_SEC_CODE_ASIL_A
#include <NvmIf_MemMap.h>
extern FUNC(void, RTE_CODE) NvmIf_Autotest_RunEepromMemoryNotProgrammed (P2VAR(u8TestResultType, AUTOMATIC, RTE_APPL_DATA) pu8TestResult);
#define NvmIf_STOP_SEC_CODE_ASIL_A
#include <NvmIf_MemMap.h>

#define NvmIf_START_SEC_CODE
#include <NvmIf_MemMap.h>
extern FUNC(void, RTE_CODE) NvmIf_GetNvmBlockLength (NvM_ASR42_BlockIdType u16BlockId, P2VAR(u16NvmBlockLengthType, AUTOMATIC, RTE_APPL_DATA) pu16BlockLength);
extern FUNC(void, RTE_CODE) NvmIf_GetNvmBlockStatus (NvM_ASR42_BlockIdType u16BlockId, P2VAR(NvM_ASR42_RequestResultType, AUTOMATIC, RTE_APPL_DATA) pu8BlockStatus);
extern FUNC(void, RTE_CODE) NvmIf_GetRamAddressByBlockId (NvM_ASR42_BlockIdType u16BlockId, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) pu32BlockRamAddress);
extern FUNC(void, RTE_CODE) NvmIf_ReadBlockByAddress (uint32 u32DestAddress, P2VAR(NvM_ASR42_DstPtrType, AUTOMATIC, RTE_APPL_DATA) pvData);
extern FUNC(void, RTE_CODE) NvmIf_RestorePRAMBlockDefaults (NvM_ASR42_BlockIdType u16BlockId);
extern FUNC(void, RTE_CODE) NvmIf_SetRamBlockStatus (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);
extern FUNC(void, RTE_CODE) NvmIf_WriteBlockByAddress (uint32 u32DestAddress, P2VAR(NvM_ASR42_DstPtrType, AUTOMATIC, RTE_APPL_DATA) pvData);
extern FUNC(void, RTE_CODE) NvmIf_WriteNvmBlock (NvM_ASR42_BlockIdType u16BlockId, P2VAR(NvM_SrcPtrType, AUTOMATIC, RTE_APPL_DATA) pvNvM_SrcPtr);
#define NvmIf_STOP_SEC_CODE
#include <NvmIf_MemMap.h>

/*--------------[declaration of API functions provided by Rte]--------------*/

#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock))
#endif
#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock))
#endif
#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress))
#endif

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>

#if (!defined RTE_CORE) /* if included by software component */
extern FUNC(Std_ReturnType, RTE_CODE) NvM_ASR42_Rte_GetErrorStatus (NvM_ASR42_BlockIdType pdav0, P2VAR(NvM_ASR42_RequestResultType, AUTOMATIC, RTE_APPL_DATA) RequestResultPtr);

extern FUNC(Std_ReturnType, RTE_CODE) NvM_ASR42_Rte_SetRamBlockStatus (NvM_ASR42_BlockIdType pdav0, boolean BlockChanged);

extern FUNC(Std_ReturnType, RTE_CODE) NvM_ASR42_Rte_WriteBlock (NvM_ASR42_BlockIdType pdav0, NvM_ASR42_SrcPtrType SrcPtr);

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

extern CONSTP2CONST(Rte_CDS_NvmIf, RTE_CONST, RTE_CONST) Rte_Inst_NvmIf;

#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_NVMIF_H) */
/*==================[end of file]============================================*/

