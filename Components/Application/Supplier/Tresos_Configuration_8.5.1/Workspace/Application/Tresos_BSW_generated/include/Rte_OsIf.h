#if !defined(RTE_OSIF_H)
#define RTE_OSIF_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type OsIf
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.2.21
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_OsIf_Type.h> /* RTE application types header file */
#include <Rte_OsIf_Hook.h> /* RTE application trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#if !defined(RTE_RUNNABLEAPI_OsTask_Bsw_Init)
#define Rte_Call_pclRcmServices_ReportOsErrorStatus(u8TaskID, u8IDOSError) (RCM_ReportOSError(u8TaskID, u8IDOSError), RTE_E_OK)

#define Rte_Call_pclResetCauseNotification_NotifyResetCause(u32ResetCauseNotification) (RCM_NotifyResetCause(u32ResetCauseNotification), RTE_E_OK)

#endif
#if (!defined(RTE_RUNNABLEAPI_OsTask_Bsw_Init)) && (!defined(RTE_RUNNABLEAPI_ProtectionHook))
#define Rte_Trigger_ptrpAsrOsServicesOsIf_ErrorHook() (Rte_TriggerHook_OsIf_ptrpAsrOsServicesOsIf_ErrorHook_Start(), Rte_TriggerHook_OsIf_ptrpAsrOsServicesOsIf_ErrorHook_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_ErrorHook)) && (!defined(RTE_RUNNABLEAPI_ProtectionHook))
#define Rte_Trigger_ptrpAsrOsServicesOsIf_OsTask_Bsw_Init() (Rte_TriggerHook_OsIf_ptrpAsrOsServicesOsIf_OsTask_Bsw_Init_Start(), Rte_TriggerHook_OsIf_ptrpAsrOsServicesOsIf_OsTask_Bsw_Init_Return())

#endif
#if (!defined(RTE_RUNNABLEAPI_ErrorHook)) && (!defined(RTE_RUNNABLEAPI_OsTask_Bsw_Init))
#define Rte_Trigger_ptrpAsrOsServicesOsIf_ProtectionHook() (Rte_TriggerHook_OsIf_ptrpAsrOsServicesOsIf_ProtectionHook_Start(), Rte_TriggerHook_OsIf_ptrpAsrOsServicesOsIf_ProtectionHook_Return())

#endif

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

/*------------------[executable entity activation reasons]-------------------*/

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_OsIf, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define OsIf_START_SEC_CODE
#include <OsIf_MemMap.h>
extern FUNC(void, RTE_CODE) ErrorHook_OsApplication_0 (void);
extern FUNC(void, RTE_CODE) OsTask_Bsw_Init_OsApplication_0 (void);
extern FUNC(void, RTE_CODE) ProtectionHook_OsApplication_0 (void);
#define OsIf_STOP_SEC_CODE
#include <OsIf_MemMap.h>

/*--------------[declaration of API functions provided by Rte]--------------*/

#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#if !defined(RTE_RUNNABLEAPI_OsTask_Bsw_Init)
#endif
#if (!defined(RTE_RUNNABLEAPI_OsTask_Bsw_Init)) && (!defined(RTE_RUNNABLEAPI_ProtectionHook))
#endif
#if (!defined(RTE_RUNNABLEAPI_ErrorHook)) && (!defined(RTE_RUNNABLEAPI_ProtectionHook))
#endif
#if (!defined(RTE_RUNNABLEAPI_ErrorHook)) && (!defined(RTE_RUNNABLEAPI_OsTask_Bsw_Init))
#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>

#if (!defined RTE_CORE) /* if included by software component */
extern FUNC(void, RTE_CODE) RCM_ReportOSError (u8OSTaskIDType u8TaskID, u8OSErrorType u8IDOSError);

extern FUNC(void, RTE_CODE) RCM_NotifyResetCause (u32ResetReasonNotificationType u32ResetCauseNotification);

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

extern CONSTP2CONST(Rte_CDS_OsIf, RTE_CONST, RTE_CONST) Rte_Inst_OsIf;

#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include <Rte_MemMap.h>

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_OSIF_H) */
/*==================[end of file]============================================*/

