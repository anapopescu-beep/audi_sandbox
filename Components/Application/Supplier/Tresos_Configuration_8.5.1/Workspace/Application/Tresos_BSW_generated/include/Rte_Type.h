#ifndef RTE_TYPE_H
#define RTE_TYPE_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2018 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte type definitions
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.2.21
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte.h>

/* ==================[Types]================================================== */
#ifndef RTE_TYPE_EcuM_StateType
#define RTE_TYPE_EcuM_StateType
typedef VAR(uint8, TYPEDEF) EcuM_StateType;
#endif
#ifndef RTE_TYPE_uint64
#define RTE_TYPE_uint64
typedef VAR(unsigned long long, TYPEDEF) uint64;
#endif
#ifndef RTE_TYPE_UInt64
#define RTE_TYPE_UInt64
typedef VAR(uint64, TYPEDEF) UInt64;
#endif
#ifndef RTE_TYPE_NvM_SrcPtrType
#define RTE_TYPE_NvM_SrcPtrType
typedef P2CONST(void, TYPEDEF, RTE_APPL_DATA) NvM_SrcPtrType;
#endif
#ifndef RTE_TYPE_NvM_DstPtrType
#define RTE_TYPE_NvM_DstPtrType
typedef P2VAR(void, TYPEDEF, RTE_APPL_DATA) NvM_DstPtrType;
#endif
#ifndef RTE_TYPE_NvM_BlockIdType
#define RTE_TYPE_NvM_BlockIdType
typedef VAR(uint16, TYPEDEF) NvM_BlockIdType;
#endif
#ifndef RTE_TYPE_NvM_RequestResultType
#define RTE_TYPE_NvM_RequestResultType
typedef VAR(uint8, TYPEDEF) NvM_RequestResultType;
#endif
#ifndef RTE_TYPE_NvM_ASR42_BlockIdType
#define RTE_TYPE_NvM_ASR42_BlockIdType
typedef VAR(uint16, TYPEDEF) NvM_ASR42_BlockIdType;
#endif
#ifndef RTE_TYPE_NvM_ASR42_DstPtrType
#define RTE_TYPE_NvM_ASR42_DstPtrType
typedef P2VAR(void, TYPEDEF, RTE_APPL_DATA) NvM_ASR42_DstPtrType;
#endif
#ifndef RTE_TYPE_NvM_ASR42_RequestResultType
#define RTE_TYPE_NvM_ASR42_RequestResultType
typedef VAR(uint8, TYPEDEF) NvM_ASR42_RequestResultType;
#endif
#ifndef RTE_TYPE_NvM_ASR42_SrcPtrType
#define RTE_TYPE_NvM_ASR42_SrcPtrType
typedef P2CONST(void, TYPEDEF, RTE_APPL_DATA) NvM_ASR42_SrcPtrType;
#endif
#ifndef RTE_TYPE_Dem_DTCFormatType
#define RTE_TYPE_Dem_DTCFormatType
typedef VAR(uint8, TYPEDEF) Dem_DTCFormatType;
#endif
#ifndef RTE_TYPE_Dem_DebouncingStateType
#define RTE_TYPE_Dem_DebouncingStateType
typedef VAR(uint8, TYPEDEF) Dem_DebouncingStateType;
#endif
#ifndef RTE_TYPE_Dem_EventIdType
#define RTE_TYPE_Dem_EventIdType
typedef VAR(uint16, TYPEDEF) Dem_EventIdType;
#endif
#ifndef RTE_TYPE_Dem_EventStatusExtendedType
#define RTE_TYPE_Dem_EventStatusExtendedType
typedef VAR(uint8, TYPEDEF) Dem_EventStatusExtendedType;
#endif
#ifndef RTE_TYPE_Dem_MaxDataValueType
#define RTE_TYPE_Dem_MaxDataValueType
typedef VAR(uint8, TYPEDEF) Dem_MaxDataValueType[1];
#endif
#ifndef RTE_TYPE_Dem_OperationCycleIdType
#define RTE_TYPE_Dem_OperationCycleIdType
typedef VAR(uint8, TYPEDEF) Dem_OperationCycleIdType;
#endif
#ifndef RTE_TYPE_Dem_IndicatorIdType
#define RTE_TYPE_Dem_IndicatorIdType
typedef VAR(uint8, TYPEDEF) Dem_IndicatorIdType;
#endif
#ifndef RTE_TYPE_Dem_RatioIdType
#define RTE_TYPE_Dem_RatioIdType
typedef VAR(uint8, TYPEDEF) Dem_RatioIdType;
#endif
#ifndef RTE_TYPE_Dem_EventStatusType
#define RTE_TYPE_Dem_EventStatusType
typedef VAR(uint8, TYPEDEF) Dem_EventStatusType;
#endif
#ifndef RTE_TYPE_Dem_DebounceResetStatusType
#define RTE_TYPE_Dem_DebounceResetStatusType
typedef VAR(uint8, TYPEDEF) Dem_DebounceResetStatusType;
#endif
#ifndef RTE_TYPE_Dem_UdsStatusByteType
#define RTE_TYPE_Dem_UdsStatusByteType
typedef VAR(uint8, TYPEDEF) Dem_UdsStatusByteType;
#endif
#ifndef RTE_TYPE_Dem_DTCOriginType
#define RTE_TYPE_Dem_DTCOriginType
typedef VAR(uint8, TYPEDEF) Dem_DTCOriginType;
#endif
#ifndef RTE_TYPE_Dem_InitMonitorReasonType
#define RTE_TYPE_Dem_InitMonitorReasonType
typedef VAR(uint8, TYPEDEF) Dem_InitMonitorReasonType;
#endif
#ifndef RTE_TYPE_Dem_OperationCycleStateType
#define RTE_TYPE_Dem_OperationCycleStateType
typedef VAR(uint8, TYPEDEF) Dem_OperationCycleStateType;
#endif
#ifndef RTE_TYPE_Dem_DTCStatusMaskType
#define RTE_TYPE_Dem_DTCStatusMaskType
typedef VAR(uint8, TYPEDEF) Dem_DTCStatusMaskType;
#endif
#ifndef RTE_TYPE_Dem_IndicatorStatusType
#define RTE_TYPE_Dem_IndicatorStatusType
typedef VAR(uint8, TYPEDEF) Dem_IndicatorStatusType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_DTCFormatType
#define RTE_TYPE_Dem_ASR42_DTCFormatType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_DTCFormatType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_DebounceResetStatusType
#define RTE_TYPE_Dem_ASR42_DebounceResetStatusType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_DebounceResetStatusType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_EventStatusExtendedType
#define RTE_TYPE_Dem_ASR42_EventStatusExtendedType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_EventStatusExtendedType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_EventStatusType
#define RTE_TYPE_Dem_ASR42_EventStatusType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_EventStatusType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_MaxDataValueType
#define RTE_TYPE_Dem_ASR42_MaxDataValueType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_MaxDataValueType[1];
#endif
#ifndef RTE_TYPE_Dem_ASR42_OperationCycleStateType
#define RTE_TYPE_Dem_ASR42_OperationCycleStateType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_OperationCycleStateType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_EventIdType
#define RTE_TYPE_Dem_ASR42_EventIdType
typedef VAR(uint16, TYPEDEF) Dem_ASR42_EventIdType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_UdsStatusByteType
#define RTE_TYPE_Dem_ASR42_UdsStatusByteType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_UdsStatusByteType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_DTCOriginType
#define RTE_TYPE_Dem_ASR42_DTCOriginType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_DTCOriginType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_InitMonitorReasonType
#define RTE_TYPE_Dem_ASR42_InitMonitorReasonType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_InitMonitorReasonType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_DTCStatusMaskType
#define RTE_TYPE_Dem_ASR42_DTCStatusMaskType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_DTCStatusMaskType;
#endif
#ifndef RTE_TYPE_Dem_ASR42_IndicatorStatusType
#define RTE_TYPE_Dem_ASR42_IndicatorStatusType
typedef VAR(uint8, TYPEDEF) Dem_ASR42_IndicatorStatusType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_SecLevelType
#define RTE_TYPE_Dcm_ASR42_SecLevelType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_SecLevelType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_SesCtrlType
#define RTE_TYPE_Dcm_ASR42_SesCtrlType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_SesCtrlType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_ProtocolType
#define RTE_TYPE_Dcm_ASR42_ProtocolType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_ProtocolType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_OpStatusType
#define RTE_TYPE_Dcm_ASR42_OpStatusType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_OpStatusType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_ConfirmationStatusType
#define RTE_TYPE_Dcm_ASR42_ConfirmationStatusType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_ConfirmationStatusType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_NegativeResponseCodeType
#define RTE_TYPE_Dcm_ASR42_NegativeResponseCodeType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_NegativeResponseCodeType;
#endif
#ifndef RTE_TYPE_Dcm_ASR42_SecSeedDcmDspSecurityAlv_ArrayType
#define RTE_TYPE_Dcm_ASR42_SecSeedDcmDspSecurityAlv_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_SecSeedDcmDspSecurityAlv_ArrayType[8];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_SecKeyDcmDspSecurityAlv_ArrayType
#define RTE_TYPE_Dcm_ASR42_SecKeyDcmDspSecurityAlv_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_SecKeyDcmDspSecurityAlv_ArrayType[8];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_4024_SWSystemTimeData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_4024_SWSystemTimeData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_4024_SWSystemTimeData_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD00_HWVersionData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD00_HWVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD00_HWVersionData_ArrayType[10];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD01_SWVersionData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD01_SWVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD01_SWVersionData_ArrayType[12];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD03_AEETraceabilityNumberData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD03_AEETraceabilityNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD03_AEETraceabilityNumberData_ArrayType[12];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD08_ResetCauseData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD08_ResetCauseData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD08_ResetCauseData_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD09_LastWarmResetParamData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD09_LastWarmResetParamData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD09_LastWarmResetParamData_ArrayType[8];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD62_EccOccurenceNbData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD62_EccOccurenceNbData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD62_EccOccurenceNbData_ArrayType[16];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FEFF_MeasurementFramesConfData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FEFF_MeasurementFramesConfData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FEFF_MeasurementFramesConfData_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FE00_AllEventStatusesRead_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FE00_AllEventStatusesRead_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FE00_AllEventStatusesRead_ArrayType[69];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F186_ActiveDiagnosticSessionData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F186_ActiveDiagnosticSessionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F186_ActiveDiagnosticSessionData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD8B_ECUManufacturingDateData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD8B_ECUManufacturingDateData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD8B_ECUManufacturingDateData_ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD8C_AssemblySerialNumber_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD8C_AssemblySerialNumber_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD8C_AssemblySerialNumber_ArrayType[20];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD0F_BatteryMeasureData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD0F_BatteryMeasureData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD0F_BatteryMeasureData_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FD10_ECUTemperatureData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FD10_ECUTemperatureData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FD10_ECUTemperatureData_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE0_EcsVariantData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE0_EcsVariantData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE0_EcsVariantData_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE1_EcsParametersData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE1_EcsParametersData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE1_EcsParametersData_ArrayType[49];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE2_AccOffsetData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE2_AccOffsetData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE2_AccOffsetData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE3_EcsProfilesData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE3_EcsProfilesData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE3_EcsProfilesData_ArrayType[48];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE4_EcsStepsData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE4_EcsStepsData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE4_EcsStepsData_ArrayType[56];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE5_EcsAccLowPassData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE5_EcsAccLowPassData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE5_EcsAccLowPassData_ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE7_AlgoOutputDelayData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE7_AlgoOutputDelayData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE7_AlgoOutputDelayData_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDE9_SensitivityLutData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDE9_SensitivityLutData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDE9_SensitivityLutData_ArrayType[20];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDEA_SensitivityOptData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDEA_SensitivityOptData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDEA_SensitivityOptData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_FDFF_MeasurementFrameConfDataRam_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_FDFF_MeasurementFrameConfDataRam_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_FDFF_MeasurementFrameConfDataRam_ArrayType[75];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F187_VWSparePartNumberData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F187_VWSparePartNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F187_VWSparePartNumberData_ArrayType[11];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F189_VWApplicationSoftwareVersionNumberData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F189_VWApplicationSoftwareVersionNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F189_VWApplicationSoftwareVersionNumberData_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F191_VWECUHardwareNumberData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F191_VWECUHardwareNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F191_VWECUHardwareNumberData_ArrayType[11];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F197_VWSystemNameOrEngineTypeData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F197_VWSystemNameOrEngineTypeData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F197_VWSystemNameOrEngineTypeData_ArrayType[13];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F1B4_TechnicalSpecificationsVersionData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F1B4_TechnicalSpecificationsVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F1B4_TechnicalSpecificationsVersionData_ArrayType[26];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_0407_VWLogicalSoftwareBlockCounterOfProgrammingAttemptsData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_0407_VWLogicalSoftwareBlockCounterOfProgrammingAttemptsData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_0407_VWLogicalSoftwareBlockCounterOfProgrammingAttemptsData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_040F_VWLogicalSoftwareBlockLockValueData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_040F_VWLogicalSoftwareBlockLockValueData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_040F_VWLogicalSoftwareBlockLockValueData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_0410_BootloaderTPBlocksizeData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_0410_BootloaderTPBlocksizeData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_0410_BootloaderTPBlocksizeData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_0448_ProgrammingPreconditionsData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_0448_ProgrammingPreconditionsData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_0448_ProgrammingPreconditionsData_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F1DF_ECUProgrammingInformationData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F1DF_ECUProgrammingInformationData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F1DF_ECUProgrammingInformationData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F19E_ASAMODXFileIdentifierData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F19E_ASAMODXFileIdentifierData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F19E_ASAMODXFileIdentifierData_ArrayType[24];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F1A2_ASAMODXFileVersionData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F1A2_ASAMODXFileVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F1A2_ASAMODXFileVersionData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F1D5_FDSProjectData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F1D5_FDSProjectData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F1D5_FDSProjectData_ArrayType[7];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F1A3_VWECUHardwareVersionNumberData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F1A3_VWECUHardwareVersionNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F1A3_VWECUHardwareVersionNumberData_ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F18C_ECUSerialNumberData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F18C_ECUSerialNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F18C_ECUSerialNumberData_ArrayType[20];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F1AB_VWLogicalSoftwareBlockVersionData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F1AB_VWLogicalSoftwareBlockVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F1AB_VWLogicalSoftwareBlockVersionData_ArrayType[12];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocksData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocksData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocksData_ArrayType[30];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_0236_ProgrammingDataElockEcuData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_0236_ProgrammingDataElockEcuData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_0236_ProgrammingDataElockEcuData_ArrayType[59];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DataDID_023E_WSCForProgrammingElockEcuData_ArrayType
#define RTE_TYPE_Dcm_ASR42_DataDID_023E_WSCForProgrammingElockEcuData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DataDID_023E_WSCForProgrammingElockEcuData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_DidSupportedType
#define RTE_TYPE_Dcm_ASR42_DidSupportedType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_DidSupportedType;
#endif
#ifndef RTE_TYPE_DcmDspRoutineInfoCheckProgrammingPreconditions_DcmDspStartRoutineOutSignal_ArrayType
#define RTE_TYPE_DcmDspRoutineInfoCheckProgrammingPreconditions_DcmDspStartRoutineOutSignal_ArrayType
typedef VAR(uint8, TYPEDEF) DcmDspRoutineInfoCheckProgrammingPreconditions_DcmDspStartRoutineOutSignal_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_RequestData_ArrayType
#define RTE_TYPE_Dcm_ASR42_RequestData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_ASR42_RequestData_ArrayType[512];
#endif
#ifndef RTE_TYPE_Dcm_ASR42_Uint8PtrDataType
#define RTE_TYPE_Dcm_ASR42_Uint8PtrDataType
typedef P2VAR(uint8, TYPEDEF, RTE_APPL_DATA) Dcm_ASR42_Uint8PtrDataType;
#endif
#ifndef RTE_TYPE_Dcm_ConfirmationStatusType
#define RTE_TYPE_Dcm_ConfirmationStatusType
typedef VAR(uint8, TYPEDEF) Dcm_ConfirmationStatusType;
#endif
#ifndef RTE_TYPE_Dcm_DataDID_0236_ProgrammingDataElockEcuData_ArrayType
#define RTE_TYPE_Dcm_DataDID_0236_ProgrammingDataElockEcuData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_0236_ProgrammingDataElockEcuData_ArrayType[59];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_023E_WSCForProgrammingElockEcuData_ArrayType
#define RTE_TYPE_Dcm_DataDID_023E_WSCForProgrammingElockEcuData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_023E_WSCForProgrammingElockEcuData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_0407_VWLogicalSoftwareBlockCounterOfProgrammingAttemptsData_ArrayType
#define RTE_TYPE_Dcm_DataDID_0407_VWLogicalSoftwareBlockCounterOfProgrammingAttemptsData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_0407_VWLogicalSoftwareBlockCounterOfProgrammingAttemptsData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_040F_VWLogicalSoftwareBlockLockValueData_ArrayType
#define RTE_TYPE_Dcm_DataDID_040F_VWLogicalSoftwareBlockLockValueData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_040F_VWLogicalSoftwareBlockLockValueData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_0410_BootloaderTPBlocksizeData_ArrayType
#define RTE_TYPE_Dcm_DataDID_0410_BootloaderTPBlocksizeData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_0410_BootloaderTPBlocksizeData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_0448_ProgrammingPreconditionsData_ArrayType
#define RTE_TYPE_Dcm_DataDID_0448_ProgrammingPreconditionsData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_0448_ProgrammingPreconditionsData_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_4024_SWSystemTimeData_ArrayType
#define RTE_TYPE_Dcm_DataDID_4024_SWSystemTimeData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_4024_SWSystemTimeData_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocksData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocksData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocksData_ArrayType[30];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F187_VWSparePartNumberData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F187_VWSparePartNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F187_VWSparePartNumberData_ArrayType[11];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F189_VWApplicationSoftwareVersionNumberData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F189_VWApplicationSoftwareVersionNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F189_VWApplicationSoftwareVersionNumberData_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F18C_ECUSerialNumberData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F18C_ECUSerialNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F18C_ECUSerialNumberData_ArrayType[20];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F191_VWECUHardwareNumberData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F191_VWECUHardwareNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F191_VWECUHardwareNumberData_ArrayType[11];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F197_VWSystemNameOrEngineTypeData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F197_VWSystemNameOrEngineTypeData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F197_VWSystemNameOrEngineTypeData_ArrayType[13];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F19E_ASAMODXFileIdentifierData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F19E_ASAMODXFileIdentifierData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F19E_ASAMODXFileIdentifierData_ArrayType[24];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F1A2_ASAMODXFileVersionData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F1A2_ASAMODXFileVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F1A2_ASAMODXFileVersionData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F1A3_VWECUHardwareVersionNumberData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F1A3_VWECUHardwareVersionNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F1A3_VWECUHardwareVersionNumberData_ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F1AB_VWLogicalSoftwareBlockVersionData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F1AB_VWLogicalSoftwareBlockVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F1AB_VWLogicalSoftwareBlockVersionData_ArrayType[12];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F1B4_TechnicalSpecificationsVersionData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F1B4_TechnicalSpecificationsVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F1B4_TechnicalSpecificationsVersionData_ArrayType[26];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F1D5_FDSProjectData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F1D5_FDSProjectData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F1D5_FDSProjectData_ArrayType[7];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F1DF_ECUProgrammingInformationData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F1DF_ECUProgrammingInformationData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F1DF_ECUProgrammingInformationData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD00_HWVersionData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD00_HWVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD00_HWVersionData_ArrayType[10];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD01_SWVersionData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD01_SWVersionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD01_SWVersionData_ArrayType[12];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD03_AEETraceabilityNumberData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD03_AEETraceabilityNumberData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD03_AEETraceabilityNumberData_ArrayType[12];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD08_ResetCauseData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD08_ResetCauseData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD08_ResetCauseData_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD09_LastWarmResetParamData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD09_LastWarmResetParamData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD09_LastWarmResetParamData_ArrayType[8];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD0F_BatteryMeasureData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD0F_BatteryMeasureData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD0F_BatteryMeasureData_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD10_ECUTemperatureData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD10_ECUTemperatureData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD10_ECUTemperatureData_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD62_EccOccurenceNbData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD62_EccOccurenceNbData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD62_EccOccurenceNbData_ArrayType[16];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD8B_ECUManufacturingDateData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD8B_ECUManufacturingDateData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD8B_ECUManufacturingDateData_ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FD8C_AssemblySerialNumber_ArrayType
#define RTE_TYPE_Dcm_DataDID_FD8C_AssemblySerialNumber_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FD8C_AssemblySerialNumber_ArrayType[20];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE0_EcsVariantData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE0_EcsVariantData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE0_EcsVariantData_ArrayType[4];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE1_EcsParametersData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE1_EcsParametersData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE1_EcsParametersData_ArrayType[49];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE2_AccOffsetData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE2_AccOffsetData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE2_AccOffsetData_ArrayType[6];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE3_EcsProfilesData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE3_EcsProfilesData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE3_EcsProfilesData_ArrayType[48];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE4_EcsStepsData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE4_EcsStepsData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE4_EcsStepsData_ArrayType[56];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE5_EcsAccLowPassData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE5_EcsAccLowPassData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE5_EcsAccLowPassData_ArrayType[3];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE7_AlgoOutputDelayData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE7_AlgoOutputDelayData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE7_AlgoOutputDelayData_ArrayType[2];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDE9_SensitivityLutData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDE9_SensitivityLutData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDE9_SensitivityLutData_ArrayType[20];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDEA_SensitivityOptData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDEA_SensitivityOptData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDEA_SensitivityOptData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FDFF_MeasurementFrameConfDataRam_ArrayType
#define RTE_TYPE_Dcm_DataDID_FDFF_MeasurementFrameConfDataRam_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FDFF_MeasurementFrameConfDataRam_ArrayType[75];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FE00_AllEventStatusesRead_ArrayType
#define RTE_TYPE_Dcm_DataDID_FE00_AllEventStatusesRead_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FE00_AllEventStatusesRead_ArrayType[69];
#endif
#ifndef RTE_TYPE_Dcm_DataDID_FEFF_MeasurementFramesConfData_ArrayType
#define RTE_TYPE_Dcm_DataDID_FEFF_MeasurementFramesConfData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_FEFF_MeasurementFramesConfData_ArrayType[5];
#endif
#ifndef RTE_TYPE_Dcm_NegativeResponseCodeType
#define RTE_TYPE_Dcm_NegativeResponseCodeType
typedef VAR(uint8, TYPEDEF) Dcm_NegativeResponseCodeType;
#endif
#ifndef RTE_TYPE_Dcm_OpStatusType
#define RTE_TYPE_Dcm_OpStatusType
typedef VAR(uint8, TYPEDEF) Dcm_OpStatusType;
#endif
#ifndef RTE_TYPE_Dcm_ProtocolType
#define RTE_TYPE_Dcm_ProtocolType
typedef VAR(uint8, TYPEDEF) Dcm_ProtocolType;
#endif
#ifndef RTE_TYPE_Dcm_RequestData_ArrayType
#define RTE_TYPE_Dcm_RequestData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_RequestData_ArrayType[512];
#endif
#ifndef RTE_TYPE_Dcm_SecKeyDcmDspSecurityAlv_ArrayType
#define RTE_TYPE_Dcm_SecKeyDcmDspSecurityAlv_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_SecKeyDcmDspSecurityAlv_ArrayType[8];
#endif
#ifndef RTE_TYPE_Dcm_SecSeedDcmDspSecurityAlv_ArrayType
#define RTE_TYPE_Dcm_SecSeedDcmDspSecurityAlv_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_SecSeedDcmDspSecurityAlv_ArrayType[8];
#endif
#ifndef RTE_TYPE_Dcm_SecLevelType
#define RTE_TYPE_Dcm_SecLevelType
typedef VAR(uint8, TYPEDEF) Dcm_SecLevelType;
#endif
#ifndef RTE_TYPE_Dcm_SesCtrlType
#define RTE_TYPE_Dcm_SesCtrlType
typedef VAR(uint8, TYPEDEF) Dcm_SesCtrlType;
#endif
#ifndef RTE_TYPE_Dcm_DataDID_F186_ActiveDiagnosticSessionData_ArrayType
#define RTE_TYPE_Dcm_DataDID_F186_ActiveDiagnosticSessionData_ArrayType
typedef VAR(uint8, TYPEDEF) Dcm_DataDID_F186_ActiveDiagnosticSessionData_ArrayType[1];
#endif
#ifndef RTE_TYPE_Dcm_DidSupportedType
#define RTE_TYPE_Dcm_DidSupportedType
typedef VAR(uint8, TYPEDEF) Dcm_DidSupportedType;
#endif
#ifndef RTE_TYPE_Dcm_Uint8PtrDataType
#define RTE_TYPE_Dcm_Uint8PtrDataType
typedef P2VAR(uint8, TYPEDEF, RTE_APPL_DATA) Dcm_Uint8PtrDataType;
#endif
#ifndef RTE_TYPE_au8MergedBuckleStatusType
#define RTE_TYPE_au8MergedBuckleStatusType
typedef VAR(unsigned char, TYPEDEF) au8MergedBuckleStatusType[6];
#endif
#ifndef RTE_TYPE_s16AccelerationSI_Unit_Type
#define RTE_TYPE_s16AccelerationSI_Unit_Type
typedef VAR(sint16, TYPEDEF) s16AccelerationSI_Unit_Type;
#endif
#ifndef RTE_TYPE_REC_3D_AccelMtrPerSecSqdType
#define RTE_TYPE_REC_3D_AccelMtrPerSecSqdType
typedef struct
{
  VAR(s16AccelerationSI_Unit_Type, TYPEDEF) s16Ax;
  VAR(s16AccelerationSI_Unit_Type, TYPEDEF) s16Ay;
  VAR(s16AccelerationSI_Unit_Type, TYPEDEF) s16Az;
} REC_3D_AccelMtrPerSecSqdType;
#endif
#ifndef RTE_TYPE_s16AccelerationType
#define RTE_TYPE_s16AccelerationType
typedef VAR(sint16, TYPEDEF) s16AccelerationType;
#endif
#ifndef RTE_TYPE_REC_3D_AccelerationType
#define RTE_TYPE_REC_3D_AccelerationType
typedef struct
{
  VAR(s16AccelerationType, TYPEDEF) s16Ax;
  VAR(s16AccelerationType, TYPEDEF) s16Ay;
  VAR(s16AccelerationType, TYPEDEF) s16Az;
} REC_3D_AccelerationType;
#endif
#ifndef RTE_TYPE_u16BallPositionType
#define RTE_TYPE_u16BallPositionType
typedef VAR(uint16, TYPEDEF) u16BallPositionType;
#endif
#ifndef RTE_TYPE_u8EcsTriggerType
#define RTE_TYPE_u8EcsTriggerType
typedef VAR(uint8, TYPEDEF) u8EcsTriggerType;
#endif
#ifndef RTE_TYPE_u8eCSDiagReqType
#define RTE_TYPE_u8eCSDiagReqType
typedef VAR(uint8, TYPEDEF) u8eCSDiagReqType;
#endif
#ifndef RTE_TYPE_UInt32
#define RTE_TYPE_UInt32
typedef VAR(uint32, TYPEDEF) UInt32;
#endif
#ifndef RTE_TYPE_UInt8
#define RTE_TYPE_UInt8
typedef VAR(uint8, TYPEDEF) UInt8;
#endif
#ifndef RTE_TYPE_stAbsoluteSystemTimeType
#define RTE_TYPE_stAbsoluteSystemTimeType
typedef struct
{
  VAR(UInt32, TYPEDEF) u32SystemTimeInSec;
  VAR(UInt8, TYPEDEF) u8SystemTimeOffset;
} stAbsoluteSystemTimeType;
#endif
#ifndef RTE_TYPE_u8FollowingProfileType
#define RTE_TYPE_u8FollowingProfileType
typedef VAR(uint8, TYPEDEF) u8FollowingProfileType;
#endif
#ifndef RTE_TYPE_au8FollowingProfileType
#define RTE_TYPE_au8FollowingProfileType
typedef VAR(u8FollowingProfileType, TYPEDEF) au8FollowingProfileType[4];
#endif
#ifndef RTE_TYPE_u8LastStepType
#define RTE_TYPE_u8LastStepType
typedef VAR(uint8, TYPEDEF) u8LastStepType;
#endif
#ifndef RTE_TYPE_au8LastStepType
#define RTE_TYPE_au8LastStepType
typedef VAR(u8LastStepType, TYPEDEF) au8LastStepType[4];
#endif
#ifndef RTE_TYPE_REC_stProfileCfgType
#define RTE_TYPE_REC_stProfileCfgType
typedef struct
{
  VAR(au8FollowingProfileType, TYPEDEF) au8FollowingProfile;
  VAR(au8LastStepType, TYPEDEF) au8LastStep;
} REC_stProfileCfgType;
#endif
#ifndef RTE_TYPE_au32SolenoidmATargetType
#define RTE_TYPE_au32SolenoidmATargetType
typedef VAR(unsigned int, TYPEDEF) au32SolenoidmATargetType[6];
#endif
#ifndef RTE_TYPE_u8CurrentStepType
#define RTE_TYPE_u8CurrentStepType
typedef VAR(uint8, TYPEDEF) u8CurrentStepType;
#endif
#ifndef RTE_TYPE_au8CurrentStepType
#define RTE_TYPE_au8CurrentStepType
typedef VAR(u8CurrentStepType, TYPEDEF) au8CurrentStepType[6];
#endif
#ifndef RTE_TYPE_au8SolenoidOCStatusType
#define RTE_TYPE_au8SolenoidOCStatusType
typedef VAR(unsigned char, TYPEDEF) au8SolenoidOCStatusType[6];
#endif
#ifndef RTE_TYPE_au8SolenoidOvervoltageStatusType
#define RTE_TYPE_au8SolenoidOvervoltageStatusType
typedef VAR(unsigned char, TYPEDEF) au8SolenoidOvervoltageStatusType[6];
#endif
#ifndef RTE_TYPE_au8SolenoidShortToGndStatusType
#define RTE_TYPE_au8SolenoidShortToGndStatusType
typedef VAR(unsigned char, TYPEDEF) au8SolenoidShortToGndStatusType[6];
#endif
#ifndef RTE_TYPE_au8SolenoidShortToVccStatusType
#define RTE_TYPE_au8SolenoidShortToVccStatusType
typedef VAR(unsigned char, TYPEDEF) au8SolenoidShortToVccStatusType[6];
#endif
#ifndef RTE_TYPE_au8eCSDiagReqType
#define RTE_TYPE_au8eCSDiagReqType
typedef VAR(unsigned char, TYPEDEF) au8eCSDiagReqType[6];
#endif
#ifndef RTE_TYPE_u32ResetCauseType
#define RTE_TYPE_u32ResetCauseType
typedef VAR(uint32, TYPEDEF) u32ResetCauseType;
#endif
#ifndef RTE_TYPE_u32ResetReasonNotificationType
#define RTE_TYPE_u32ResetReasonNotificationType
typedef VAR(uint32, TYPEDEF) u32ResetReasonNotificationType;
#endif
#ifndef RTE_TYPE_u8OSErrorType
#define RTE_TYPE_u8OSErrorType
typedef VAR(uint8, TYPEDEF) u8OSErrorType;
#endif
#ifndef RTE_TYPE_u8OSTaskIDType
#define RTE_TYPE_u8OSTaskIDType
typedef VAR(uint8, TYPEDEF) u8OSTaskIDType;
#endif
#ifndef RTE_TYPE_u16PwmDutyCycleType
#define RTE_TYPE_u16PwmDutyCycleType
typedef VAR(uint16, TYPEDEF) u16PwmDutyCycleType;
#endif
#ifndef RTE_TYPE_u8PwmChannelType
#define RTE_TYPE_u8PwmChannelType
typedef VAR(uint8, TYPEDEF) u8PwmChannelType;
#endif
#ifndef RTE_TYPE_u16NvmBlockLengthType
#define RTE_TYPE_u16NvmBlockLengthType
typedef VAR(uint16, TYPEDEF) u16NvmBlockLengthType;
#endif
#ifndef RTE_TYPE_au8BuckleStatusType
#define RTE_TYPE_au8BuckleStatusType
typedef VAR(unsigned char, TYPEDEF) au8BuckleStatusType[2];
#endif
#ifndef RTE_TYPE_au8SeatOccupancySensorType
#define RTE_TYPE_au8SeatOccupancySensorType
typedef VAR(unsigned char, TYPEDEF) au8SeatOccupancySensorType[2];
#endif
#ifndef RTE_TYPE_au8SolenoidUnlockConfirmationType
#define RTE_TYPE_au8SolenoidUnlockConfirmationType
typedef VAR(unsigned char, TYPEDEF) au8SolenoidUnlockConfirmationType[6];
#endif
#ifndef RTE_TYPE_REC_CanDataOut64_Type
#define RTE_TYPE_REC_CanDataOut64_Type
typedef struct
{
  VAR(UInt64, TYPEDEF) u64Byte_0_7;
  VAR(UInt64, TYPEDEF) u64Byte_8_15;
  VAR(UInt64, TYPEDEF) u64Byte_16_23;
  VAR(UInt64, TYPEDEF) u64Byte_24_31;
  VAR(UInt64, TYPEDEF) u64Byte_32_39;
  VAR(UInt64, TYPEDEF) u64Byte_40_47;
  VAR(UInt64, TYPEDEF) u64Byte_48_55;
  VAR(UInt64, TYPEDEF) u64Byte_56_63;
} REC_CanDataOut64_Type;
#endif
#ifndef RTE_TYPE_u8CAN_ByteType
#define RTE_TYPE_u8CAN_ByteType
typedef VAR(uint8, TYPEDEF) u8CAN_ByteType;
#endif
#ifndef RTE_TYPE_REC_GliwaDataIn_Type
#define RTE_TYPE_REC_GliwaDataIn_Type
typedef struct
{
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte0;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte1;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte2;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte3;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte4;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte5;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte6;
  VAR(u8CAN_ByteType, TYPEDEF) u8Byte7;
} REC_GliwaDataIn_Type;
#endif
#ifndef RTE_TYPE_au16PwmType
#define RTE_TYPE_au16PwmType
typedef VAR(unsigned short, TYPEDEF) au16PwmType[6];
#endif
#ifndef RTE_TYPE_u8FsmStateType
#define RTE_TYPE_u8FsmStateType
typedef VAR(uint8, TYPEDEF) u8FsmStateType;
#endif
#ifndef RTE_TYPE_au8FsmStateType
#define RTE_TYPE_au8FsmStateType
typedef VAR(u8FsmStateType, TYPEDEF) au8FsmStateType[6];
#endif
#ifndef RTE_TYPE_au8SolenoidBackupsType
#define RTE_TYPE_au8SolenoidBackupsType
typedef VAR(unsigned char, TYPEDEF) au8SolenoidBackupsType[6];
#endif
#ifndef RTE_TYPE_u8SolenoidProfileType
#define RTE_TYPE_u8SolenoidProfileType
typedef VAR(uint8, TYPEDEF) u8SolenoidProfileType;
#endif
#ifndef RTE_TYPE_au8SolenoidProfileType
#define RTE_TYPE_au8SolenoidProfileType
typedef VAR(u8SolenoidProfileType, TYPEDEF) au8SolenoidProfileType[6];
#endif
#ifndef RTE_TYPE_u8DioIfChannelType
#define RTE_TYPE_u8DioIfChannelType
typedef VAR(uint8, TYPEDEF) u8DioIfChannelType;
#endif
#ifndef RTE_TYPE_u8DioIfLvlType
#define RTE_TYPE_u8DioIfLvlType
typedef VAR(uint8, TYPEDEF) u8DioIfLvlType;
#endif
#ifndef RTE_TYPE_aau16HistoricalAdcSamplesType
#define RTE_TYPE_aau16HistoricalAdcSamplesType
typedef VAR(unsigned short, TYPEDEF) aau16HistoricalAdcSamplesType[6][6];
#endif
#ifndef RTE_TYPE_u16AdcValueLsbType
#define RTE_TYPE_u16AdcValueLsbType
typedef VAR(uint16, TYPEDEF) u16AdcValueLsbType;
#endif
#ifndef RTE_TYPE_u8AdcChannelIDType
#define RTE_TYPE_u8AdcChannelIDType
typedef VAR(uint8, TYPEDEF) u8AdcChannelIDType;
#endif
#ifndef RTE_TYPE_u8AutoTestIdType
#define RTE_TYPE_u8AutoTestIdType
typedef VAR(uint8, TYPEDEF) u8AutoTestIdType;
#endif
#ifndef RTE_TYPE_u8TestResultType
#define RTE_TYPE_u8TestResultType
typedef VAR(uint8, TYPEDEF) u8TestResultType;
#endif
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_ACC;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_ATM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_AdcIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_BswMIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_CIL;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_DIA;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_DcmIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_DemIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_DioIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_EFX;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_EIM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_EcuMIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_FSM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_IoHwAb;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_LPM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_MIC;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_McuIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_NVP;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_NmIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_NvmIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_OsIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_PwmIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_RCM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_SAD;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_SBC;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_STM;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_SpiIf;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_T1;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_eCS;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Dcm;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_Dem;
typedef struct
{
  VAR(uint8, TYPEDEF) _dummy;
} Rte_CDS_NvM;

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
