<?xml version="1.0" encoding="UTF-8"?>
<?module PduR?>

<xgen xmlns="http://www.elektrobit.com/2013/xgen" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <module name="PduR">
        <configuration class="PreCompile">
            <?artifact type="types-h" directory="include" file="PduR_CfgTypes.h" generate="yes"?>

            <parameter name="relocatable-enable">
                <boolean-value>false</boolean-value>
            </parameter>

            <type name="PduR_GateTpSessionIndexType">
              <reference type="uint16">
                <compiler-abstraction>
                  <var memory-class="TYPEDEF"/>
                </compiler-abstraction>
              </reference>
            </type><type name="PduR_RefToRAM">
    <reference type="uint16">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_BufTpIndexType">
    <reference type="uint16">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_PduIdType">
    <reference type="uint16">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_RefToModuleAPI">
    <reference type="uint16">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_AbstractRoutingTableEntry">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabUpTpType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabUpTpConfigType">
    <struct>
        <member name="RTabTxRef" type="PduR_RTabUpTpType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabRxRef" type="PduR_RTabUpTpType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabTxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="RTabRxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabLoTpType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabLoTpConfigType">
    <struct>
        <member name="RTabRxRef" type="PduR_RTabLoTpType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabTxRef" type="PduR_RTabLoTpType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabRxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="RTabTxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabUpIfTxType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabUpIfTxConfigType">
    <struct>
        <member name="RTabTxRef" type="PduR_RTabUpIfTxType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabTxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabLoIfType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_RTabLoIfConfigType">
    <struct>
        <member name="RTabRxRef" type="PduR_RTabLoIfType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabTxRef" type="PduR_RTabLoIfType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="RTabRxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="RTabTxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_GateTpQueueIndexType">
    <reference type="uint8">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_TpThresholdType">
    <reference type="uint16">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_GTabTpRxType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="SessionQueueMemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TpThreshold" type="PduR_TpThresholdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="MoreEntries" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="SessionQueueDepth" type="PduR_GateTpQueueIndexType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_GTabTpConfigType">
    <struct>
        <member name="GTabRxRef" type="PduR_GTabTpRxType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="GTabRxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_GTabIfRxType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="BufferId" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_GTabIfConfigType">
    <struct>
        <member name="GTabRxRef" type="PduR_GTabIfRxType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="GTabRxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_MTabUpTpTxType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="UprLyrTxPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="SourceModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="MoreEntries" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_MTabUpTpConfigType">
    <struct>
        <member name="MTabTxRef" type="PduR_MTabUpTpTxType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="MTabTxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_MTabUpIfTxType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="SourceModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="UprLyrTxPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TotalNumDests" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TxConfEnabled" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_MTabUpIfConfigType">
    <struct>
        <member name="MTabTxRef" type="PduR_MTabUpIfTxType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="MTabTxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_MTabLoIfRxType">
    <struct>
        <member name="TargetPduId" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="TargetModuleAPIRef" type="PduR_RefToModuleAPI">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="MoreEntries" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_MTabLoIfConfigType">
    <struct>
        <member name="MTabRxRef" type="PduR_MTabLoIfRxType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="MTabRxCount" type="PduR_PduIdType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_PduLengthType">
    <reference type="uint16">
        <compiler-abstraction>
            <var memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>
<type name="PduR_BufTpConfigType">
    <struct>
        <member name="MemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Length" type="PduR_PduLengthType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_BufTfDynPyldConfigType">
    <struct>
        <member name="DefaultRef" type="uint8">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="MemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="UsedSduLengthPtr" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Length" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Depth" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_BufDfDynPyldConfigType">
    <struct>
        <member name="MemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="UsedSduLengthPtr" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Length" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Depth" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_BufSbConfigType">
    <struct>
        <member name="DefaultRef" type="uint8">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="MemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Length" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_BufTfConfigType">
    <struct>
        <member name="DefaultRef" type="uint8">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="MemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Length" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Depth" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_BufDfConfigType">
    <struct>
        <member name="MemRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Length" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="Depth" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_PBConfigType">
    <struct>
        <member name="PduR_PlatformSignature" type="uint32">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_PublicInfoSignature" type="uint32">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_CfgSignature" type="uint32">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_LcfgSignature" type="uint32">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDefaultRef" type="uint8">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufSbConfigRef" type="PduR_BufSbConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDfConfigRef" type="PduR_BufDfConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTfConfigRef" type="PduR_BufTfConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufSbDynPyldConfigRef" type="PduR_BufSbConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDfDynPyldConfigRef" type="PduR_BufDfDynPyldConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTfDynPyldConfigRef" type="PduR_BufTfDynPyldConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTpConfigRef" type="PduR_BufTpConfigType">
            <compiler-abstraction>
                <ref2cfg/>
            </compiler-abstraction>
        </member>
        <member name="PduR_MTabLoIfConfig" type="PduR_MTabLoIfConfigType">
            <compiler-abstraction>
                <const memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_MTabUpIfConfig" type="PduR_MTabUpIfConfigType">
            <compiler-abstraction>
                <const memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_MTabUpTpConfig" type="PduR_MTabUpTpConfigType">
            <compiler-abstraction>
                <const memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_GTabIfConfig" type="PduR_GTabIfConfigType">
            <compiler-abstraction>
                <const memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_GTabTpConfig" type="PduR_GTabTpConfigType">
            <compiler-abstraction>
                <const memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="1" name="PduR_RTabLoIfConfig" type="PduR_RTabLoIfConfigType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="2" name="PduR_RTabUpIfTxConfig" type="PduR_RTabUpIfTxConfigType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="1" name="PduR_RTabLoTpConfig" type="PduR_RTabLoTpConfigType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="1" name="PduR_RTabUpTpConfig" type="PduR_RTabUpTpConfigType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_ConfigurationId" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufSbCount" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDfCount" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTfCount" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufSbDynPyldCount" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDfDynPyldCount" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTfDynPyldCount" type="uint16">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTpCount" type="PduR_BufTpIndexType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_MultiTpTxSessionInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_MultiIfTxInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufSbDynPyldInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDfInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufDfDynPyldInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTfInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_BufTfDynPyldInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_GateTpSessionInfoRef" type="PduR_RefToRAM">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member name="PduR_MultiTpTxRPathsMax" type="uint8">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>

        </configuration>
        <configuration class="PostBuild">
            <?artifact type="postbuild-h" directory="include" file="PduR_PBcfg.h" generate="yes"?>
            <?artifact type="postbuild-c" directory="src" file="PduR_PBcfg.c" generate="yes"?>

            <parameter name="postbuild-configuration-name.PduR_ConfigLayout">
                <symbolic-value>PduRRoutingTables</symbolic-value>
            </parameter><type name="PduR_ConfigLayoutType">
    <struct>
        <member name="PduR_RootConfig" type="PduR_PBConfigType">
            <compiler-abstraction>
                <const memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="4" name="PduR_RTabLoIfRx" type="PduR_RTabLoIfType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="5" name="PduR_RTabLoIfTx" type="PduR_RTabLoIfType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="5" name="PduR_RTabUpIfTx" type="PduR_RTabUpIfTxType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="4" name="PduR_RTabLoTpRx" type="PduR_RTabLoTpType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="4" name="PduR_RTabLoTpTx" type="PduR_RTabLoTpType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="4" name="PduR_RTabUpTpTx" type="PduR_RTabUpTpType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
        <member count="4" name="PduR_RTabUpTpRx" type="PduR_RTabUpTpType">
            <compiler-abstraction>
                <var memory-class="TYPEDEF"/>
            </compiler-abstraction>
        </member>
    </struct>
</type>
<type name="PduR_ConstConfigLayoutType">
    <reference type="PduR_ConfigLayoutType">
        <compiler-abstraction>
            <const memory-class="TYPEDEF"/>
        </compiler-abstraction>
    </reference>
</type>

            <memory-section name="SEC_CONFIG_DATA_UNSPECIFIED"><instance name="PduR_ConfigLayout" type="PduR_ConstConfigLayoutType">
    <parameter name="postbuild-configuration-name">
        <parameter reference="postbuild-configuration-name.PduR_ConfigLayout"/>
    </parameter>
    <compiler-abstraction>
        <var memory-class="PDUR_APPL_CONST"/>
    </compiler-abstraction>
    <field>
        <field>
            <int>2147485970</int>
        </field>
        <field>
            <int>3287354825</int>
        </field>
        <field>
            <int>4179949832</int>
        </field>
        <field>
            <int>3958107115</int>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <ref/>
        </field>
        <field>
            <field>
                <ref/>
            </field>
            <field>
                <int>0</int>
            </field>
        </field>
        <field>
            <field>
                <ref/>
            </field>
            <field>
                <int>0</int>
            </field>
        </field>
        <field>
            <field>
                <ref/>
            </field>
            <field>
                <int>0</int>
            </field>
        </field>
        <field>
            <field>
                <ref/>
            </field>
            <field>
                <int>0</int>
            </field>
        </field>
        <field>
            <field>
                <ref/>
            </field>
            <field>
                <int>0</int>
            </field>
        </field>
        <field>
            <field comment="CanIf">
                <field>
                    <ref>
                        <struct-field name="PduR_RTabLoIfRx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <ref>
                        <struct-field name="PduR_RTabLoIfTx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <int>4</int>
                </field>
                <field>
                    <int>5</int>
                </field>
            </field>
        </field>
        <field>
            <field comment="Com">
                <field>
                    <ref>
                        <struct-field name="PduR_RTabUpIfTx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <int>5</int>
                </field>
            </field>
            <field comment="Dcm">
                <field>
                    <ref/>
                </field>
                <field>
                    <int>0</int>
                </field>
            </field>
        </field>
        <field>
            <field comment="CanTp">
                <field>
                    <ref>
                        <struct-field name="PduR_RTabLoTpRx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <ref>
                        <struct-field name="PduR_RTabLoTpTx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <int>4</int>
                </field>
                <field>
                    <int>4</int>
                </field>
            </field>
        </field>
        <field>
            <field comment="Dcm">
                <field>
                    <ref>
                        <struct-field name="PduR_RTabUpTpTx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <ref>
                        <struct-field name="PduR_RTabUpTpRx"/>
                        <array-field index="0"/>
                    </ref>
                </field>
                <field>
                    <int>4</int>
                </field>
                <field>
                    <int>4</int>
                </field>
            </field>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>0</int>
        </field>
        <field>
            <int>4</int>
        </field>
    </field>
    <field>
        <field comment="Routing path:'ipdu_Airbag_01_64R', calling module:'CanIf-LO-IF', PDU ID:0">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'ipdu_Airbag_02_1312R', calling module:'CanIf-LO-IF', PDU ID:1">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'ipdu_Airbag_eCS_01_184112401R', calling module:'CanIf-LO-IF', PDU ID:2">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_Gliwa_In_300R', calling module:'CanIf-LO-IF', PDU ID:3">
            <field>
                <int>3</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
    </field>
    <field>
        <field comment="Routing path:'IPdu_Dev_Out_0_256T', calling module:'CanIf-LO-IF', PDU ID:0">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_MFData_1988T', calling module:'CanIf-LO-IF', PDU ID:1">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'eCS_01_XIX_Airbag_SUBCANFD_184112400T', calling module:'CanIf-LO-IF', PDU ID:2">
            <field>
                <int>4</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_Gliwa_Out_200T', calling module:'CanIf-LO-IF', PDU ID:3">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_MFData_Logger_1989T', calling module:'CanIf-LO-IF', PDU ID:4">
            <field>
                <int>3</int>
            </field>
            <field comment="TargetModuleAPIRef: Com">
                <int>0</int>
            </field>
        </field>
    </field>
    <field>
        <field comment="Routing path:'IPdu_Dev_Out_0_256T', calling module:'Com-UP-IF', PDU ID:0">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: CanIf">
                <int>2</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_MFData_1988T', calling module:'Com-UP-IF', PDU ID:1">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: CanIf">
                <int>2</int>
            </field>
        </field>
        <field comment="Routing path:'eCS_01_XIX_Airbag_SUBCANFD_184112400T', calling module:'Com-UP-IF', PDU ID:2">
            <field>
                <int>11</int>
            </field>
            <field comment="TargetModuleAPIRef: CanIf">
                <int>2</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_Gliwa_Out_200T', calling module:'Com-UP-IF', PDU ID:3">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: CanIf">
                <int>2</int>
            </field>
        </field>
        <field comment="Routing path:'IPdu_MFData_Logger_1989T', calling module:'Com-UP-IF', PDU ID:4">
            <field>
                <int>12</int>
            </field>
            <field comment="TargetModuleAPIRef: CanIf">
                <int>2</int>
            </field>
        </field>
    </field>
    <field>
        <field comment="Routing path:'DIA_FD_Request', calling module:'CanTp-LO-TP', PDU ID:0">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
        <field comment="Routing path:'DIA_Request', calling module:'CanTp-LO-TP', PDU ID:1">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
        <field comment="Routing path:'Diag_FD_Request', calling module:'CanTp-LO-TP', PDU ID:2">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
        <field comment="Routing path:'OBDC_SSN_Request', calling module:'CanTp-LO-TP', PDU ID:3">
            <field>
                <int>3</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
    </field>
    <field>
        <field comment="Routing path:'DIA_FD_Response', calling module:'CanTp-LO-TP', PDU ID:0">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
        <field comment="Routing path:'DIA_Response', calling module:'CanTp-LO-TP', PDU ID:1">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
        <field comment="Routing path:'Diag_FD_Response', calling module:'CanTp-LO-TP', PDU ID:2">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
        <field comment="Routing path:'OBDC_SSN_Response', calling module:'CanTp-LO-TP', PDU ID:3">
            <field>
                <int>3</int>
            </field>
            <field comment="TargetModuleAPIRef: Dcm">
                <int>1</int>
            </field>
        </field>
    </field>
    <field>
        <field comment="Routing path:'DIA_FD_Response', calling module:'Dcm-UP-TP', PDU ID:0">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'DIA_Response', calling module:'Dcm-UP-TP', PDU ID:1">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'Diag_FD_Response', calling module:'Dcm-UP-TP', PDU ID:2">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'OBDC_SSN_Response', calling module:'Dcm-UP-TP', PDU ID:3">
            <field>
                <int>3</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
    </field>
    <field>
        <field comment="Routing path:'DIA_FD_Request', calling module:'Dcm-UP-TP', PDU ID:0">
            <field>
                <int>1</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'DIA_Request', calling module:'Dcm-UP-TP', PDU ID:1">
            <field>
                <int>0</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'Diag_FD_Request', calling module:'Dcm-UP-TP', PDU ID:2">
            <field>
                <int>2</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
        <field comment="Routing path:'OBDC_SSN_Request', calling module:'Dcm-UP-TP', PDU ID:3">
            <field>
                <int>3</int>
            </field>
            <field comment="TargetModuleAPIRef: CanTp">
                <int>0</int>
            </field>
        </field>
    </field>
</instance>

            </memory-section>
        </configuration>
    </module>

    <xi:include href="Base.xgen" xpointer="element(/1/1)" />
</xgen>
