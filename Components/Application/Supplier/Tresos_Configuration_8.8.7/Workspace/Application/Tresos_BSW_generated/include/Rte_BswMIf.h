#ifndef RTE_BSWMIF_H
#define RTE_BSWMIF_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.9.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2023 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte component declarations for component type BswMIf
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.9.3
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Intern.h>
#include <Rte_Main.h>
#include <Rte_BswMIf_Type.h>
#include <Rte_BswMIf_Hook.h>
#include <Rte_Components_Shared.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE /* if included by software component */
#ifndef RTE_APPLICATION_HEADER_FILE_H /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif
#if (!defined(RTE_RUNNABLEAPI_BswMIf_runMainFunction)) && (!defined(RTE_RUNNABLEAPI_BswM_CB_NfyNvMJobEnd)) && (!defined(RTE_RUNNABLEAPI_BswM_Cyclic_10msTimer)) && (!defined(RTE_RUNNABLEAPI_BswM_HWResetNotification)) && (!defined(RTE_RUNNABLEAPI_BswM_JumpToFBLNotification)) && (!defined(RTE_RUNNABLEAPI_BswM_OnDisableTxPdu)) && (!defined(RTE_RUNNABLEAPI_BswM_OnEnableTxPdu)) && (!defined(RTE_RUNNABLEAPI_BswM_OnGoOffOneA)) && (!defined(RTE_RUNNABLEAPI_BswM_OnLowPwrFromPostRun)) && (!defined(RTE_RUNNABLEAPI_BswM_OnPostRunFromRun)) && (!defined(RTE_RUNNABLEAPI_BswM_OnRunFromLowPwrBusAvailable)) && (!defined(RTE_RUNNABLEAPI_BswM_OnRunFromLowPwrPassengerDetected)) && (!defined(RTE_RUNNABLEAPI_BswM_OnRunFromPostRunBusAvailable)) && (!defined(RTE_RUNNABLEAPI_BswM_OnRunFromPostRunPassengerDetected)) && (!defined(RTE_RUNNABLEAPI_BswM_OnRunFromSafeState)) && (!defined(RTE_RUNNABLEAPI_BswM_OnRunFromWakeup)) && (!defined(RTE_RUNNABLEAPI_BswM_OnSafeStateFromPostRun)) && (!defined(RTE_RUNNABLEAPI_BswM_OnStartComEffective)) && (!defined(RTE_RUNNABLEAPI_BswM_OnStartupTwoA)) && (!defined(RTE_RUNNABLEAPI_BswM_OnStartupTwoB)) && (!defined(RTE_RUNNABLEAPI_BswM_OnWakeupExpired)) && (!defined(RTE_RUNNABLEAPI_BswM_OnWakeupValidation)) && (!defined(RTE_RUNNABLEAPI_BswM_On_Prep_Shutdown)) && (!defined(RTE_RUNNABLEAPI_BswM_ProceedReset)) && (!defined(RTE_RUNNABLEAPI_BswM_SWResetNotification)) && (!defined(RTE_RUNNABLEAPI_BswM_SetEcuStateTransitionStatus)) && (!defined(RTE_RUNNABLEAPI_BswM_UpdatePassangerOccupancyStatus)) && (!defined(RTE_RUNNABLEAPI_OsTask_Bsw_ReadWrite_AllProcess))
#define RTE_RUNNABLEAPI_BswMIf_runMainFunction
#define RTE_RUNNABLEAPI_BswM_CB_NfyNvMJobEnd
#define RTE_RUNNABLEAPI_BswM_Cyclic_10msTimer
#define RTE_RUNNABLEAPI_BswM_HWResetNotification
#define RTE_RUNNABLEAPI_BswM_JumpToFBLNotification
#define RTE_RUNNABLEAPI_BswM_OnDisableTxPdu
#define RTE_RUNNABLEAPI_BswM_OnEnableTxPdu
#define RTE_RUNNABLEAPI_BswM_OnGoOffOneA
#define RTE_RUNNABLEAPI_BswM_OnLowPwrFromPostRun
#define RTE_RUNNABLEAPI_BswM_OnPostRunFromRun
#define RTE_RUNNABLEAPI_BswM_OnRunFromLowPwrBusAvailable
#define RTE_RUNNABLEAPI_BswM_OnRunFromLowPwrPassengerDetected
#define RTE_RUNNABLEAPI_BswM_OnRunFromPostRunBusAvailable
#define RTE_RUNNABLEAPI_BswM_OnRunFromPostRunPassengerDetected
#define RTE_RUNNABLEAPI_BswM_OnRunFromSafeState
#define RTE_RUNNABLEAPI_BswM_OnRunFromWakeup
#define RTE_RUNNABLEAPI_BswM_OnSafeStateFromPostRun
#define RTE_RUNNABLEAPI_BswM_OnStartComEffective
#define RTE_RUNNABLEAPI_BswM_OnStartupTwoA
#define RTE_RUNNABLEAPI_BswM_OnStartupTwoB
#define RTE_RUNNABLEAPI_BswM_OnWakeupExpired
#define RTE_RUNNABLEAPI_BswM_OnWakeupValidation
#define RTE_RUNNABLEAPI_BswM_On_Prep_Shutdown
#define RTE_RUNNABLEAPI_BswM_ProceedReset
#define RTE_RUNNABLEAPI_BswM_SWResetNotification
#define RTE_RUNNABLEAPI_BswM_SetEcuStateTransitionStatus
#define RTE_RUNNABLEAPI_BswM_UpdatePassangerOccupancyStatus
#define RTE_RUNNABLEAPI_OsTask_Bsw_ReadWrite_AllProcess
#endif
#endif
/* ------------------[API mapping]-------------------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#if defined(RTE_RUNNABLEAPI_BswMIf_runMainFunction)
#define Rte_Write_psrBswMIfServices_u8BlockRestoreStatus(data) (Rte_ReceiveBuffer__FSM_prrBswMIfServices_u8BlockRestoreStatus_value = (data)/* RTE.Review.VariableAssignment.Justification: Destination of assignment only writes to a Rte local or global variable. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Call_pclNvmIfServices_GetNvmBlockStatus(u16BlockId, pu8BlockStatus) (NvmIf_GetNvmBlockStatus(u16BlockId, pu8BlockStatus)/*
Review instructions/justifications for parameter #2 with name 'pu8BlockStatus' and passed argument 'pu8BlockStatus':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#160: Verify that the pointer pu8BlockStatus always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#189: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *pu8BlockStatus. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Call_pclNvmIfServices_RestorePRAMBlockDefaults(u16BlockId) (NvmIf_RestorePRAMBlockDefaults(u16BlockId)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Call_pclNvmIfServices_SetRamBlockStatus(u16BlockId, u8BlockChanged) (NvmIf_SetRamBlockStatus(u16BlockId, u8BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Call_pclCILGetEcuState_updateCurrentEcuState(u8CurrentEcuState) (CIL_updateCurrentEcuState(u8CurrentEcuState)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Trigger_ptrpAsrOsServicesBswMIf_BswMIf_runMainFunction() (Rte_TriggerHook_BswMIf_ptrpAsrOsServicesBswMIf_BswMIf_runMainFunction_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrOsServicesBswMIf_BswMIf_runMainFunction_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_CB_NfyNvMJobEnd)
#define Rte_Trigger_ptrpAsrNvMServicesBswMIf_BswM_CB_NfyNvMJobEnd() (Rte_TriggerHook_BswMIf_ptrpAsrNvMServicesBswMIf_BswM_CB_NfyNvMJobEnd_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrNvMServicesBswMIf_BswM_CB_NfyNvMJobEnd_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_Cyclic_10msTimer)
#define Rte_Trigger_ptrpAsrGptServicesBswMIf_BswM_Cyclic_10msTimer() (Rte_TriggerHook_BswMIf_ptrpAsrGptServicesBswMIf_BswM_Cyclic_10msTimer_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrGptServicesBswMIf_BswM_Cyclic_10msTimer_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(RTE_RUNNABLEAPI_BswM_HWResetNotification)) || (defined(RTE_RUNNABLEAPI_BswM_JumpToFBLNotification)) || (defined(RTE_RUNNABLEAPI_BswM_SWResetNotification))
#define Rte_Call_pclNotifyResetCause_NotifyResetCause(u32ResetCauseNotification) (RCM_NotifyResetCause(u32ResetCauseNotification)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_HWResetNotification)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_HWResetNotification() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_HWResetNotification_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_HWResetNotification_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_JumpToFBLNotification)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_JumpToFBLNotification() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_JumpToFBLNotification_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_JumpToFBLNotification_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnDisableTxPdu)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnDisableTxPdu() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnDisableTxPdu_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnDisableTxPdu_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnEnableTxPdu)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnEnableTxPdu() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnEnableTxPdu_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnEnableTxPdu_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnGoOffOneA)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnGoOffOneA() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnGoOffOneA_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnGoOffOneA_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnLowPwrFromPostRun)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnLowPwrFromPostRun() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnLowPwrFromPostRun_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnLowPwrFromPostRun_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnPostRunFromRun)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnPostRunFromRun() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnPostRunFromRun_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnPostRunFromRun_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnRunFromLowPwrBusAvailable)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromLowPwrBusAvailable() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromLowPwrBusAvailable_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromLowPwrBusAvailable_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnRunFromLowPwrPassengerDetected)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromLowPwrPassengerDetected() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromLowPwrPassengerDetected_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromLowPwrPassengerDetected_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnRunFromPostRunBusAvailable)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromPostRunBusAvailable() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromPostRunBusAvailable_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromPostRunBusAvailable_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnRunFromPostRunPassengerDetected)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromPostRunPassengerDetected() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromPostRunPassengerDetected_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromPostRunPassengerDetected_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(RTE_RUNNABLEAPI_BswM_OnRunFromSafeState)) || (defined(RTE_RUNNABLEAPI_BswM_OnSafeStateFromPostRun))
#define Rte_Write_psrFsmSolenoidReqBswMIf_au8DiagReq(data) Rte_Write_BswMIf_psrFsmSolenoidReqBswMIf_au8DiagReq(data)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Write_psrFsmSolenoidReqBswMIf_au8DiagReqComplement(data) Rte_Write_BswMIf_psrFsmSolenoidReqBswMIf_au8DiagReqComplement(data)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnRunFromSafeState)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromSafeState() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromSafeState_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromSafeState_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnRunFromWakeup)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromWakeup() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromWakeup_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnRunFromWakeup_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnSafeStateFromPostRun)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnSafeStateFromPostRun() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnSafeStateFromPostRun_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnSafeStateFromPostRun_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnStartComEffective)
#define Rte_Call_pclDemSetOpCycle_SetOperationCycleState(CycleState) Dem_SetOperationCycleState(0U, CycleState)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnStartComEffective() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnStartComEffective_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnStartComEffective_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnStartupTwoA)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnStartupTwoA() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnStartupTwoA_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnStartupTwoA_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnStartupTwoB)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnStartupTwoB() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnStartupTwoB_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnStartupTwoB_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnWakeupExpired)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnWakeupExpired() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnWakeupExpired_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnWakeupExpired_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_OnWakeupValidation)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_OnWakeupValidation() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnWakeupValidation_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_OnWakeupValidation_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_On_Prep_Shutdown)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_On_Prep_Shutdown() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_On_Prep_Shutdown_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_On_Prep_Shutdown_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_ProceedReset)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_ProceedReset() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_ProceedReset_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_ProceedReset_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_SWResetNotification)
#define Rte_Trigger_ptrpAsrBswMServicesBswMIf_BswM_SWResetNotification() (Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_SWResetNotification_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrBswMServicesBswMIf_BswM_SWResetNotification_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_BswM_SetEcuStateTransitionStatus)
#define Rte_Trigger_ptrpNmIfServicesBswMIf_BswM_SetEcuStateTransitionStatus() Rte_Trigger_BswMIf_ptrpNmIfServicesBswMIf_BswM_SetEcuStateTransitionStatus()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#if defined(RTE_RUNNABLEAPI_OsTask_Bsw_ReadWrite_AllProcess)
#define Rte_Trigger_ptrpAsrOsServicesBswMIf_OsTask_Bsw_ReadWrite_AllProcess() (Rte_TriggerHook_BswMIf_ptrpAsrOsServicesBswMIf_OsTask_Bsw_ReadWrite_AllProcess_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_BswMIf_ptrpAsrOsServicesBswMIf_OsTask_Bsw_ReadWrite_AllProcess_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#endif

/* ------------------[port handle API mapping]-------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#endif

#define RTE_E_Dem_ASR42_OperationCycle_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#ifndef RTE_CORE /* if included by software component */
#define Rte_InitValue_psrBswMIfServices_u8BlockRestoreStatus 85U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif

/* ==================[Types]================================================== */
#ifndef RTE_CORE /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_BswMIf, TYPEDEF, RTE_CONST) Rte_Instance;
#endif

/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_CONST_8
#include <Rte_MemMap.h>
extern CONST(Rte_CDS_BswMIf, RTE_CONST) Rte_Instance_BswMIf;
#define RTE_STOP_SEC_CONST_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_CONST_32
#include <Rte_MemMap.h>
extern CONSTP2CONST(Rte_CDS_BswMIf, RTE_CONST, RTE_CONST) Rte_Inst_BswMIf;
#define RTE_STOP_SEC_CONST_32
#include <Rte_MemMap.h>

/* ==================[Declaration of functions with external linkage]========= */
/* ------------------[declaration of runnable entities]----------------------- */
#define BswMIf_START_SEC_CODE
#include <BswMIf_MemMap.h>
extern FUNC(void, RTE_CODE) BswMIf_runMainFunction (void);

extern FUNC(void, RTE_CODE) BswM_CB_NfyNvMJobEnd_0 (void);

extern FUNC(void, RTE_CODE) BswM_Cyclic_10msTimer (void);

extern FUNC(void, RTE_CODE) BswM_HWResetNotification (void);

extern FUNC(void, RTE_CODE) BswM_JumpToFBLNotification (void);

extern FUNC(void, RTE_CODE) BswM_OnDisableTxPdu (void);

extern FUNC(void, RTE_CODE) BswM_OnEnableTxPdu (void);

extern FUNC(void, RTE_CODE) BswM_OnGoOffOneA (void);

extern FUNC(void, RTE_CODE) BswM_OnLowPwrFromPostRun (void);

extern FUNC(void, RTE_CODE) BswM_OnPostRunFromRun (void);

extern FUNC(void, RTE_CODE) BswM_OnRunFromLowPwrBusAvailable (void);

extern FUNC(void, RTE_CODE) BswM_OnRunFromLowPwrPassengerDetected (void);

extern FUNC(void, RTE_CODE) BswM_OnRunFromPostRunBusAvailable (void);

extern FUNC(void, RTE_CODE) BswM_OnRunFromPostRunPassengerDetected (void);

#define BswMIf_STOP_SEC_CODE
#include <BswMIf_MemMap.h>
#define BswMIf_START_SEC_CODE_ASIL_A
#include <BswMIf_MemMap.h>
extern FUNC(void, RTE_CODE) BswM_OnRunFromSafeState (void);

#define BswMIf_STOP_SEC_CODE_ASIL_A
#include <BswMIf_MemMap.h>
#define BswMIf_START_SEC_CODE
#include <BswMIf_MemMap.h>
extern FUNC(void, RTE_CODE) BswM_OnRunFromWakeup (void);

#define BswMIf_STOP_SEC_CODE
#include <BswMIf_MemMap.h>
#define BswMIf_START_SEC_CODE_ASIL_A
#include <BswMIf_MemMap.h>
extern FUNC(void, RTE_CODE) BswM_OnSafeStateFromPostRun (void);

#define BswMIf_STOP_SEC_CODE_ASIL_A
#include <BswMIf_MemMap.h>
#define BswMIf_START_SEC_CODE
#include <BswMIf_MemMap.h>
extern FUNC(void, RTE_CODE) BswM_OnStartComEffective (void);

extern FUNC(void, RTE_CODE) BswM_OnStartupTwoA (void);

extern FUNC(void, RTE_CODE) BswM_OnStartupTwoB (void);

extern FUNC(void, RTE_CODE) BswM_OnWakeupExpired (void);

extern FUNC(void, RTE_CODE) BswM_OnWakeupValidation (void);

extern FUNC(void, RTE_CODE) BswM_On_Prep_Shutdown (void);

extern FUNC(void, RTE_CODE) BswM_ProceedReset (void);

extern FUNC(void, RTE_CODE) BswM_SWResetNotification (void);

extern FUNC(void, RTE_CODE) BswM_SetEcuStateTransitionStatus (uint8 u8TransitionStatus);

extern FUNC(void, RTE_CODE) BswM_UpdatePassangerOccupancyStatus (void);

extern FUNC(void, RTE_CODE) OsTask_Bsw_ReadWrite_AllProcess_0 (void);

#define BswMIf_STOP_SEC_CODE
#include <BswMIf_MemMap.h>

/* ------------------[declaration of API functions provided by Rte]----------- */
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>
#if (defined(RTE_CORE)) || (defined(RTE_RUNNABLEAPI_BswM_OnRunFromSafeState)) || (defined(RTE_RUNNABLEAPI_BswM_OnSafeStateFromPostRun))
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_BswMIf_psrFsmSolenoidReqBswMIf_au8DiagReq (P2CONST(au8eCSDiagReqType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_BswMIf_psrFsmSolenoidReqBswMIf_au8DiagReq (P2CONST(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_BswMIf_psrFsmSolenoidReqBswMIf_au8DiagReqComplement (P2CONST(au8eCSDiagReqType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Write_BswMIf_psrFsmSolenoidReqBswMIf_au8DiagReqComplement (P2CONST(unsigned char, AUTOMATIC, RTE_APPL_DATA) data);
#endif
#endif
#if (defined(RTE_CORE)) || (defined(RTE_RUNNABLEAPI_BswM_SetEcuStateTransitionStatus))
extern FUNC(void, RTE_CODE) Rte_Trigger_BswMIf_ptrpNmIfServicesBswMIf_BswM_SetEcuStateTransitionStatus (void);
#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/* ------------------[declaration of API functions provided by other Appl]---- */
#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>
#ifndef RTE_CORE /* if included by software component */
extern FUNC(void, RTE_CODE) NvmIf_GetNvmBlockStatus (NvM_ASR42_BlockIdType u16BlockId, P2VAR(NvM_ASR42_RequestResultType, AUTOMATIC, RTE_APPL_DATA) pu8BlockStatus);
extern FUNC(void, RTE_CODE) NvmIf_RestorePRAMBlockDefaults (NvM_ASR42_BlockIdType u16BlockId);
extern FUNC(void, RTE_CODE) NvmIf_SetRamBlockStatus (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);
extern FUNC(void, RTE_CODE) CIL_updateCurrentEcuState (uint8 u8CurrentEcuState);
extern FUNC(void, RTE_CODE) RCM_NotifyResetCause (u32ResetReasonNotificationType u32ResetCauseNotification);
extern FUNC(Std_ReturnType, RTE_CODE) Dem_SetOperationCycleState (Dem_OperationCycleIdType pdav0, Dem_ASR42_OperationCycleStateType CycleState);
#endif

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
