#ifndef RTE_DEM_H
#define RTE_DEM_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.9.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2023 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte component declarations for component type Dem
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.9.3
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Intern.h>
#include <Rte_Main.h>
#include <Rte_Dem_Type.h>
#include <Rte_Dem_Hook.h>
#include <Rte_Components_Shared.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE /* if included by software component */
#ifndef RTE_APPLICATION_HEADER_FILE_H /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif
#if (!defined(RTE_RUNNABLEAPI_RE_GetDTCOfEvent)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventFreezeFrameData)) && (!defined(RTE_RUNNABLEAPI_RE_CddIfClearDTC)) && (!defined(RTE_RUNNABLEAPI_RE_SetEventStatus)) && (!defined(RTE_RUNNABLEAPI_RE_ResetEventStatus)) && (!defined(RTE_RUNNABLEAPI_RE_PrestoreFreezeFrame)) && (!defined(RTE_RUNNABLEAPI_RE_ClearPrestoredFreezeFrame)) && (!defined(RTE_RUNNABLEAPI_RE_ResetEventDebounceStatus)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventStatus)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventFailed)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventTested)) && (!defined(RTE_RUNNABLEAPI_RE_GetFaultDetectionCounter)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventExtendedDataRecord)) && (!defined(RTE_RUNNABLEAPI_RE_GetDebouncingOfEvent)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventFreezeFrameDataEx)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventExtendedDataRecordEx)) && (!defined(RTE_RUNNABLEAPI_RE_SetOperationCycleState)) && (!defined(RTE_RUNNABLEAPI_RE_SetCycleQualified)) && (!defined(RTE_RUNNABLEAPI_RE_GetEventMemoryOverflow)) && (!defined(RTE_RUNNABLEAPI_RE_GetNumberOfEventMemoryEntries)) && (!defined(RTE_RUNNABLEAPI_RE_MainFunction))
#define RTE_RUNNABLEAPI_RE_GetDTCOfEvent
#define RTE_RUNNABLEAPI_RE_GetEventFreezeFrameData
#define RTE_RUNNABLEAPI_RE_CddIfClearDTC
#define RTE_RUNNABLEAPI_RE_SetEventStatus
#define RTE_RUNNABLEAPI_RE_ResetEventStatus
#define RTE_RUNNABLEAPI_RE_PrestoreFreezeFrame
#define RTE_RUNNABLEAPI_RE_ClearPrestoredFreezeFrame
#define RTE_RUNNABLEAPI_RE_ResetEventDebounceStatus
#define RTE_RUNNABLEAPI_RE_GetEventStatus
#define RTE_RUNNABLEAPI_RE_GetEventFailed
#define RTE_RUNNABLEAPI_RE_GetEventTested
#define RTE_RUNNABLEAPI_RE_GetFaultDetectionCounter
#define RTE_RUNNABLEAPI_RE_GetEventExtendedDataRecord
#define RTE_RUNNABLEAPI_RE_GetDebouncingOfEvent
#define RTE_RUNNABLEAPI_RE_GetEventFreezeFrameDataEx
#define RTE_RUNNABLEAPI_RE_GetEventExtendedDataRecordEx
#define RTE_RUNNABLEAPI_RE_SetOperationCycleState
#define RTE_RUNNABLEAPI_RE_SetCycleQualified
#define RTE_RUNNABLEAPI_RE_GetEventMemoryOverflow
#define RTE_RUNNABLEAPI_RE_GetNumberOfEventMemoryEntries
#define RTE_RUNNABLEAPI_RE_MainFunction
#endif
#endif
/* ------------------[API mapping]-------------------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#endif

/* ------------------[port handle API mapping]-------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#endif

#define RTE_E_Dem_ASR42_DiagnosticInfo_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_DiagnosticInfo_DEM_E_NO_DTC_AVAILABLE 2U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_DiagnosticInfo_DEM_E_NODATAAVAILABLE 48U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_DiagnosticInfo_DEM_E_WRONG_RECORDNUMBER 49U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_DiagnosticInfo_DEM_E_WRONG_BUFFERSIZE 21U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_DiagnosticInfo_DEM_E_WRONG_DIDNUMBER 50U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_DiagnosticMonitor_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_GeneralDiagnosticInfo_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_GeneralDiagnosticInfo_DEM_E_NO_DTC_AVAILABLE 2U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_GeneralDiagnosticInfo_DEM_E_NODATAAVAILABLE 48U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_GeneralDiagnosticInfo_DEM_E_WRONG_RECORDNUMBER 49U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_GeneralDiagnosticInfo_DEM_E_WRONG_DIDNUMBER 50U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_GeneralDiagnosticInfo_DEM_E_WRONG_BUFFERSIZE 21U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_OperationCycle_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_Dem_ASR42_EvMemOverflowIndication_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticInfo_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticInfo_DEM_E_NO_DTC_AVAILABLE 2U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticInfo_DEM_E_NODATAAVAILABLE 48U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticInfo_DEM_E_WRONG_RECORDNUMBER 49U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticInfo_DEM_E_WRONG_DIDNUMBER 50U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticInfo_DEM_E_WRONG_BUFFERSIZE 21U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_DiagnosticMonitor_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_GeneralDiagnosticInfo_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_GeneralDiagnosticInfo_DEM_E_NO_DTC_AVAILABLE 2U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_GeneralDiagnosticInfo_DEM_E_NODATAAVAILABLE 48U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_GeneralDiagnosticInfo_DEM_E_WRONG_RECORDNUMBER 49U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_GeneralDiagnosticInfo_DEM_E_WRONG_BUFFERSIZE 21U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_GeneralDiagnosticInfo_DEM_E_WRONG_DIDNUMBER 50U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_OperationCycle_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_EvMemOverflowIndication_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_CddIf_DEM_CLEAR_WRONG_DTC 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_CddIf_DEM_CLEAR_WRONG_DTCORIGIN 2U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_CddIf_DEM_CLEAR_FAILED 3U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_CddIf_DEM_CLEAR_PENDING 4U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_CddIf_DEM_CLEAR_BUSY 5U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define RTE_E_CddIf_DEM_CLEAR_MEMORY_ERROR 6U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#ifndef RTE_CORE /* if included by software component */
#endif

/* ==================[Types]================================================== */
#ifndef RTE_CORE /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_Dem, TYPEDEF, RTE_CONST) Rte_Instance;
#endif

/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_CONST_8
#include <Rte_MemMap.h>
extern CONST(Rte_CDS_Dem, RTE_CONST) Rte_Instance_Dem;
#define RTE_STOP_SEC_CONST_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_CONST_32
#include <Rte_MemMap.h>
extern CONSTP2CONST(Rte_CDS_Dem, RTE_CONST, RTE_CONST) Rte_Inst_Dem;
#define RTE_STOP_SEC_CONST_32
#include <Rte_MemMap.h>

/* ==================[Declaration of functions with external linkage]========= */
/* ------------------[declaration of runnable entities]----------------------- */
#define Dem_START_SEC_CODE
#include <Dem_MemMap.h>
extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetDTCOfEvent (Dem_EventIdType EventId, Dem_DTCFormatType DTCFormat, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) DTCOfEvent);

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Dem_ASR42_GetEventFreezeFrameData (Dem_EventIdType EventId, uint8 RecordNumber, boolean ReportTotalRecord, uint16 DataId, P2VAR(Dem_MaxDataValueType, AUTOMATIC, RTE_APPL_DATA) DestBuffer);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Dem_ASR42_GetEventFreezeFrameData (Dem_EventIdType EventId, uint8 RecordNumber, boolean ReportTotalRecord, uint16 DataId, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer);
#endif

extern FUNC(Std_ReturnType, RTE_CODE) Dem_ASR42_ClearDTC (uint32 DTC, Dem_DTCFormatType DTCFormat, Dem_DTCOriginType DTCOrigin);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_SetEventStatus (Dem_EventIdType EventId, Dem_EventStatusType EventStatus);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_ResetEventStatus (Dem_EventIdType EventId);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_PrestoreFreezeFrame (Dem_EventIdType EventId);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_ClearPrestoredFreezeFrame (Dem_EventIdType EventId);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_ResetEventDebounceStatus (Dem_EventIdType EventId, Dem_DebounceResetStatusType DebounceResetStatus);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventStatus (Dem_EventIdType EventId, P2VAR(Dem_EventStatusExtendedType, AUTOMATIC, RTE_APPL_DATA) EventStatusExtended);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventFailed (Dem_EventIdType EventId, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) EventFailed);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventTested (Dem_EventIdType EventId, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) EventTested);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetFaultDetectionCounter (Dem_EventIdType EventId, P2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) FaultDetectionCounter);

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventExtendedDataRecord (Dem_EventIdType EventId, uint8 RecordNumber, P2VAR(Dem_MaxDataValueType, AUTOMATIC, RTE_APPL_DATA) DestBuffer);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventExtendedDataRecord (Dem_EventIdType EventId, uint8 RecordNumber, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer);
#endif

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetDebouncingOfEvent (Dem_EventIdType EventId, P2VAR(Dem_DebouncingStateType, AUTOMATIC, RTE_APPL_DATA) DebouncingState);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventFreezeFrameDataEx (Dem_EventIdType EventId, uint8 RecordNumber, uint16 DataId, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) BufSize);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventExtendedDataRecordEx (Dem_EventIdType EventId, uint8 RecordNumber, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) BufSize);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_SetOperationCycleState (Dem_OperationCycleIdType OperationCycleId, Dem_OperationCycleStateType CycleState);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_SetCycleQualified (Dem_OperationCycleIdType OperationCycleId);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetEventMemoryOverflow (Dem_DTCOriginType DTCOrigin, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);

extern FUNC(Std_ReturnType, RTE_CODE) Dem_GetNumberOfEventMemoryEntries (Dem_DTCOriginType DTCOrigin, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) NumberOfEventMemoryEntries);

#define Dem_STOP_SEC_CODE
#include <Dem_MemMap.h>

/* ------------------[declaration of API functions provided by Rte]----------- */
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/* ------------------[declaration of API functions provided by other Appl]---- */

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
