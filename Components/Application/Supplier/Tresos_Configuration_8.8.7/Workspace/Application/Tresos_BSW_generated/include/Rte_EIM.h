#ifndef RTE_EIM_H
#define RTE_EIM_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.9.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2023 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte component declarations for component type EIM
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.9.3
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Intern.h>
#include <Rte_Main.h>
#include <Rte_EIM_Type.h>
#include <Rte_EIM_Hook.h>
#include <Rte_Components_Shared.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE /* if included by software component */
#ifndef RTE_APPLICATION_HEADER_FILE_H /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif
#if (!defined(RTE_RUNNABLEAPI_EIM_AppHandler)) && (!defined(RTE_RUNNABLEAPI_EIM_ManageAecStatus))
#define RTE_RUNNABLEAPI_EIM_AppHandler
#define RTE_RUNNABLEAPI_EIM_ManageAecStatus
#endif
#endif
/* ------------------[API mapping]-------------------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#if defined(RTE_RUNNABLEAPI_EIM_ManageAecStatus)
#define Rte_Read_prrFSMSolenoidProfile_au8SelectedProfile(data) Rte_Read_EIM_prrFSMSolenoidProfile_au8SelectedProfile(data)/*
Review instructions/justifications for parameter #1 with name 'data' and passed argument 'data':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#219: Verify that the pointer data always points to a au8SolenoidProfileType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#292: Verify that the called function does not write more than sizeof(au8SolenoidProfileType) bytes to data. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclDemDiagMonitor_SetEventStatus(EventStatus) Dem_SetEventStatus(2U, EventStatus)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#endif

/* ------------------[port handle API mapping]-------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#endif

#define RTE_E_Dem_ASR42_DiagnosticMonitor_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#ifndef RTE_CORE /* if included by software component */
#endif

/* ==================[Types]================================================== */
#ifndef RTE_CORE /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_EIM, TYPEDEF, RTE_CONST) Rte_Instance;
#endif

/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_CONST_8
#include <Rte_MemMap.h>
extern CONST(Rte_CDS_EIM, RTE_CONST) Rte_Instance_EIM;
#define RTE_STOP_SEC_CONST_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_CONST_32
#include <Rte_MemMap.h>
extern CONSTP2CONST(Rte_CDS_EIM, RTE_CONST, RTE_CONST) Rte_Inst_EIM;
#define RTE_STOP_SEC_CONST_32
#include <Rte_MemMap.h>

/* ==================[Declaration of functions with external linkage]========= */
/* ------------------[declaration of runnable entities]----------------------- */
#define EIM_START_SEC_CODE
#include <EIM_MemMap.h>
extern FUNC(void, RTE_CODE) EIM_AppHandler (void);

extern FUNC(void, RTE_CODE) EIM_ManageAecStatus (void);

#define EIM_STOP_SEC_CODE
#include <EIM_MemMap.h>

/* ------------------[declaration of API functions provided by Rte]----------- */
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>
#if (defined(RTE_CORE)) || (defined(RTE_RUNNABLEAPI_EIM_ManageAecStatus))
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_EIM_prrFSMSolenoidProfile_au8SelectedProfile (P2VAR(au8SolenoidProfileType, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Read_EIM_prrFSMSolenoidProfile_au8SelectedProfile (P2VAR(u8SolenoidProfileType, AUTOMATIC, RTE_APPL_DATA) data);
#endif
#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/* ------------------[declaration of API functions provided by other Appl]---- */
#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>
#ifndef RTE_CORE /* if included by software component */
extern FUNC(Std_ReturnType, RTE_CODE) Dem_SetEventStatus (Dem_ASR42_EventIdType pdav0, Dem_ASR42_EventStatusType EventStatus);
#endif

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
