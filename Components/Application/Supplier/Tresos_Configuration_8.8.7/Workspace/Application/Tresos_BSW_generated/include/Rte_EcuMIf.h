#ifndef RTE_ECUMIF_H
#define RTE_ECUMIF_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.9.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2023 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte component declarations for component type EcuMIf
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.9.3
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Intern.h>
#include <Rte_Main.h>
#include <Rte_EcuMIf_Type.h>
#include <Rte_EcuMIf_Hook.h>
#include <Rte_Components_Shared.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE /* if included by software component */
#ifndef RTE_APPLICATION_HEADER_FILE_H /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif
#if (!defined(RTE_RUNNABLEAPI_Can_CheckWakeup)) && (!defined(RTE_RUNNABLEAPI_EcuM_AL_DriverInitOne)) && (!defined(RTE_RUNNABLEAPI_EcuM_AL_Reset)) && (!defined(RTE_RUNNABLEAPI_EcuM_AL_SetProgrammableInterrupts)) && (!defined(RTE_RUNNABLEAPI_EcuM_AL_SwitchOff)) && (!defined(RTE_RUNNABLEAPI_EcuM_CheckRamHash)) && (!defined(RTE_RUNNABLEAPI_EcuM_CheckValidation)) && (!defined(RTE_RUNNABLEAPI_EcuM_CheckWakeup)) && (!defined(RTE_RUNNABLEAPI_EcuM_DefaultInitListOne)) && (!defined(RTE_RUNNABLEAPI_EcuM_DeterminePbConfiguration)) && (!defined(RTE_RUNNABLEAPI_EcuM_DisableWakeupSources)) && (!defined(RTE_RUNNABLEAPI_EcuM_EnableWakeupSources)) && (!defined(RTE_RUNNABLEAPI_EcuM_ErrorHook)) && (!defined(RTE_RUNNABLEAPI_EcuM_GenerateRamHash)) && (!defined(RTE_RUNNABLEAPI_EcuM_OnGoOffOne)) && (!defined(RTE_RUNNABLEAPI_EcuM_OnGoOffTwo)) && (!defined(RTE_RUNNABLEAPI_EcuM_PostHalt)) && (!defined(RTE_RUNNABLEAPI_EcuM_PreHalt)) && (!defined(RTE_RUNNABLEAPI_EcuM_SleepActivity)) && (!defined(RTE_RUNNABLEAPI_EcuM_StartWakeupSources)) && (!defined(RTE_RUNNABLEAPI_EcuM_StopWakeupSources))
#define RTE_RUNNABLEAPI_Can_CheckWakeup
#define RTE_RUNNABLEAPI_EcuM_AL_DriverInitOne
#define RTE_RUNNABLEAPI_EcuM_AL_Reset
#define RTE_RUNNABLEAPI_EcuM_AL_SetProgrammableInterrupts
#define RTE_RUNNABLEAPI_EcuM_AL_SwitchOff
#define RTE_RUNNABLEAPI_EcuM_CheckRamHash
#define RTE_RUNNABLEAPI_EcuM_CheckValidation
#define RTE_RUNNABLEAPI_EcuM_CheckWakeup
#define RTE_RUNNABLEAPI_EcuM_DefaultInitListOne
#define RTE_RUNNABLEAPI_EcuM_DeterminePbConfiguration
#define RTE_RUNNABLEAPI_EcuM_DisableWakeupSources
#define RTE_RUNNABLEAPI_EcuM_EnableWakeupSources
#define RTE_RUNNABLEAPI_EcuM_ErrorHook
#define RTE_RUNNABLEAPI_EcuM_GenerateRamHash
#define RTE_RUNNABLEAPI_EcuM_OnGoOffOne
#define RTE_RUNNABLEAPI_EcuM_OnGoOffTwo
#define RTE_RUNNABLEAPI_EcuM_PostHalt
#define RTE_RUNNABLEAPI_EcuM_PreHalt
#define RTE_RUNNABLEAPI_EcuM_SleepActivity
#define RTE_RUNNABLEAPI_EcuM_StartWakeupSources
#define RTE_RUNNABLEAPI_EcuM_StopWakeupSources
#endif
#endif
/* ------------------[API mapping]-------------------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#if defined(RTE_RUNNABLEAPI_Can_CheckWakeup)
#define Rte_Trigger_ptrpAsrCanServicesEcuMIf_Can_CheckWakeup() (Rte_TriggerHook_EcuMIf_ptrpAsrCanServicesEcuMIf_Can_CheckWakeup_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrCanServicesEcuMIf_Can_CheckWakeup_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_AL_DriverInitOne)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_DriverInitOne() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_DriverInitOne_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_DriverInitOne_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_AL_Reset)
#define Rte_Call_pclSbcServices_SBC_Reset() (SBC_Reset()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_Reset() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_Reset_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_Reset_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_AL_SetProgrammableInterrupts)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_SetProgrammableInterrupts() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_SetProgrammableInterrupts_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_SetProgrammableInterrupts_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_AL_SwitchOff)
#define Rte_Call_pclNotifyResetCause_NotifyResetCause(u32ResetCauseNotification) (RCM_NotifyResetCause(u32ResetCauseNotification)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Call_pclSbcServices_SBC_Shutdown() (SBC_Shutdown()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, RTE_E_OK/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_SwitchOff() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_SwitchOff_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_AL_SwitchOff_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_CheckRamHash)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckRamHash() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckRamHash_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckRamHash_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_CheckValidation)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckValidation() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckValidation_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckValidation_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_CheckWakeup)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckWakeup() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckWakeup_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_CheckWakeup_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_DefaultInitListOne)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_DriverInitListOne() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_DriverInitListOne_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_DriverInitListOne_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_DeterminePbConfiguration)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_DeterminePbConfiguration() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_DeterminePbConfiguration_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_DeterminePbConfiguration_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_DisableWakeupSources)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_DisableWakeupSources() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_DisableWakeupSources_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_DisableWakeupSources_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_EnableWakeupSources)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_EnableWakeupSources() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_EnableWakeupSources_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_EnableWakeupSources_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_ErrorHook)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_ErrorHook() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_ErrorHook_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_ErrorHook_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_GenerateRamHash)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_GenerateRamHash() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_GenerateRamHash_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_GenerateRamHash_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_OnGoOffOne)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_OnGoOffOne() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_OnGoOffOne_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_OnGoOffOne_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_OnGoOffTwo)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_OnGoOffTwo() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_OnGoOffTwo_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_OnGoOffTwo_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_PostHalt)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_PostHalt() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_PostHalt_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_PostHalt_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_PreHalt)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_PreHalt() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_PreHalt_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_PreHalt_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_SleepActivity)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_SleepActivity() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_SleepActivity_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_SleepActivity_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_StartWakeupSources)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_StartWakeupSources() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_StartWakeupSources_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_StartWakeupSources_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if defined(RTE_RUNNABLEAPI_EcuM_StopWakeupSources)
#define Rte_Trigger_ptrpAsrEcuMServicesEcuMIf_EcuM_StopWakeupSources() (Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_StopWakeupSources_Start()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. */, Rte_TriggerHook_EcuMIf_ptrpAsrEcuMServicesEcuMIf_EcuM_StopWakeupSources_Return()/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#endif

/* ------------------[port handle API mapping]-------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#endif

#ifndef RTE_CORE /* if included by software component */
#endif

/* ==================[Types]================================================== */
#ifndef RTE_CORE /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_EcuMIf, TYPEDEF, RTE_CONST) Rte_Instance;
#endif

/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_CONST_8
#include <Rte_MemMap.h>
extern CONST(Rte_CDS_EcuMIf, RTE_CONST) Rte_Instance_EcuMIf;
#define RTE_STOP_SEC_CONST_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_CONST_32
#include <Rte_MemMap.h>
extern CONSTP2CONST(Rte_CDS_EcuMIf, RTE_CONST, RTE_CONST) Rte_Inst_EcuMIf;
#define RTE_STOP_SEC_CONST_32
#include <Rte_MemMap.h>

/* ==================[Declaration of functions with external linkage]========= */
/* ------------------[declaration of runnable entities]----------------------- */
#define EcuMIf_START_SEC_CODE
#include <EcuMIf_MemMap.h>
extern FUNC(void, RTE_CODE) Can_CheckWakeup_symb (void);

extern FUNC(void, RTE_CODE) EcuM_AL_DriverInitOne_symb (void);

extern FUNC(void, RTE_CODE) EcuM_AL_Reset_symb (void);

extern FUNC(void, RTE_CODE) EcuM_AL_SetProgrammableInterrupts_symb (void);

extern FUNC(void, RTE_CODE) EcuM_AL_SwitchOff_symb (void);

extern FUNC(void, RTE_CODE) EcuM_CheckRamHash_symb (void);

extern FUNC(void, RTE_CODE) EcuM_CheckValidation_symb (void);

extern FUNC(void, RTE_CODE) EcuM_CheckWakeup_symb (void);

extern FUNC(void, RTE_CODE) EcuM_DefaultInitListOne_0_symb (void);

extern FUNC(void, RTE_CODE) EcuM_DeterminePbConfiguration_symb (void);

extern FUNC(void, RTE_CODE) EcuM_DisableWakeupSources_symb (void);

extern FUNC(void, RTE_CODE) EcuM_EnableWakeupSources_symb (void);

extern FUNC(void, RTE_CODE) EcuM_ErrorHook_symb (void);

extern FUNC(void, RTE_CODE) EcuM_GenerateRamHash_symb (void);

extern FUNC(void, RTE_CODE) EcuM_OnGoOffOne_symb (void);

extern FUNC(void, RTE_CODE) EcuM_OnGoOffTwo_symb (void);

extern FUNC(void, RTE_CODE) EcuM_PostHalt_symb (void);

extern FUNC(void, RTE_CODE) EcuM_PreHalt_symb (void);

extern FUNC(void, RTE_CODE) EcuM_SleepActivity_symb (void);

extern FUNC(void, RTE_CODE) EcuM_StartWakeupSources_symb (void);

extern FUNC(void, RTE_CODE) EcuM_StopWakeupSources_symb (void);

#define EcuMIf_STOP_SEC_CODE
#include <EcuMIf_MemMap.h>

/* ------------------[declaration of API functions provided by Rte]----------- */
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/* ------------------[declaration of API functions provided by other Appl]---- */
#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>
#ifndef RTE_CORE /* if included by software component */
extern FUNC(void, RTE_CODE) SBC_Reset (void);
extern FUNC(void, RTE_CODE) RCM_NotifyResetCause (u32ResetReasonNotificationType u32ResetCauseNotification);
extern FUNC(void, RTE_CODE) SBC_Shutdown (void);
#endif

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
