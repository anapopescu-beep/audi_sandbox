#ifndef RTE_MIC_HOOK_H
#define RTE_MIC_HOOK_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.9.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2023 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte hook declarations for the software component type MIC
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.9.3
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Cfg.h>
#include <Rte_Type.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE
#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE 0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#endif
#if (defined(Rte_CallHook_MIC_pclResetCause_GetResetCause_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclResetCause_GetResetCause_Start
#endif
#if defined(Rte_CallHook_MIC_pclResetCause_GetResetCause_Start)
#undef Rte_CallHook_MIC_pclResetCause_GetResetCause_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclResetCause_GetResetCause_Start (P2VAR(u32ResetCauseType, AUTOMATIC, RTE_APPL_DATA) pu32ResetCause);
#else
#define Rte_CallHook_MIC_pclResetCause_GetResetCause_Start(pu32ResetCause) ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclResetCause_GetResetCause_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclResetCause_GetResetCause_Return
#endif
#if defined(Rte_CallHook_MIC_pclResetCause_GetResetCause_Return)
#undef Rte_CallHook_MIC_pclResetCause_GetResetCause_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclResetCause_GetResetCause_Return (P2VAR(u32ResetCauseType, AUTOMATIC, RTE_APPL_DATA) pu32ResetCause);
#else
#define Rte_CallHook_MIC_pclResetCause_GetResetCause_Return(pu32ResetCause) ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Start
#endif
#if defined(Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Start)
#undef Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Start (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);
#else
#define Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Start(u16BlockId, u8BlockChanged) ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Return
#endif
#if defined(Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Return)
#undef Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Return (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);
#else
#define Rte_CallHook_MIC_pclNvmIfServices_SetRamBlockStatus_Return(u16BlockId, u8BlockChanged) ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Start
#endif
#if defined(Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Start)
#undef Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Start (u32ResetReasonNotificationType u32ResetCauseNotification);
#else
#define Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Start(u32ResetCauseNotification) ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Return
#endif
#if defined(Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Return)
#undef Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Return (u32ResetReasonNotificationType u32ResetCauseNotification);
#else
#define Rte_CallHook_MIC_pclResetCauseNotification_NotifyResetCause_Return(u32ResetCauseNotification) ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start
#endif
#if defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start (void);
#else
#define Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return
#endif
#if defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return (void);
#else
#define Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_BusFaultException_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Start
#endif
#if defined(Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Start)
#undef Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Start
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Start (void);
#else
#define Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Return
#endif
#if defined(Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Return)
#undef Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Return
extern FUNC(void, RTE_APPL_CODE) Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Return (void);
#else
#define Rte_CallHook_MIC_pclSbcServices_SBC_Reset_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start
#endif
#if defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start (void);
#else
#define Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return
#endif
#if defined(Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return (void);
#else
#define Rte_TriggerHook_MIC_p_ptrrMicServicesOsIf_MIC_HardFaultException_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start
#endif
#if defined(Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start (void);
#else
#define Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return
#endif
#if defined(Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return)
#undef Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return
extern FUNC(void, RTE_APPL_CODE) Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return (void);
#else
#define Rte_TriggerHook_MIC_p_ptrrMicServicesBswMIf_MIC_Init_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Start
#endif
#if defined(Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Start)
#undef Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Start (void);
#else
#define Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Return
#endif
#if defined(Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Return)
#undef Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Return (void);
#else
#define Rte_Runnable_MIC_MIC_Autotest_RunEepromMemoryCorruption_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Start
#endif
#if defined(Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Start)
#undef Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Start (void);
#else
#define Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Return
#endif
#if defined(Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Return)
#undef Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Return (void);
#else
#define Rte_Runnable_MIC_MIC_Autotest_RunPFlashMemoryCorruption_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Start
#endif
#if defined(Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Start)
#undef Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Start (void);
#else
#define Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Return
#endif
#if defined(Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Return)
#undef Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Return (void);
#else
#define Rte_Runnable_MIC_MIC_Autotest_RunRamMemoryCorruption_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_BusFaultException_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_BusFaultException_Start
#endif
#if defined(Rte_Runnable_MIC_MIC_BusFaultException_Start)
#undef Rte_Runnable_MIC_MIC_BusFaultException_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_BusFaultException_Start (void);
#else
#define Rte_Runnable_MIC_MIC_BusFaultException_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_BusFaultException_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_BusFaultException_Return
#endif
#if defined(Rte_Runnable_MIC_MIC_BusFaultException_Return)
#undef Rte_Runnable_MIC_MIC_BusFaultException_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_BusFaultException_Return (void);
#else
#define Rte_Runnable_MIC_MIC_BusFaultException_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_HardFaultException_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_HardFaultException_Start
#endif
#if defined(Rte_Runnable_MIC_MIC_HardFaultException_Start)
#undef Rte_Runnable_MIC_MIC_HardFaultException_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_HardFaultException_Start (void);
#else
#define Rte_Runnable_MIC_MIC_HardFaultException_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_HardFaultException_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_HardFaultException_Return
#endif
#if defined(Rte_Runnable_MIC_MIC_HardFaultException_Return)
#undef Rte_Runnable_MIC_MIC_HardFaultException_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_HardFaultException_Return (void);
#else
#define Rte_Runnable_MIC_MIC_HardFaultException_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Init_Start)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Init_Start
#endif
#if defined(Rte_Runnable_MIC_MIC_Init_Start)
#undef Rte_Runnable_MIC_MIC_Init_Start
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Init_Start (void);
#else
#define Rte_Runnable_MIC_MIC_Init_Start() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif
#if (defined(Rte_Runnable_MIC_MIC_Init_Return)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_MIC_MIC_Init_Return
#endif
#if defined(Rte_Runnable_MIC_MIC_Init_Return)
#undef Rte_Runnable_MIC_MIC_Init_Return
extern FUNC(void, RTE_APPL_CODE) Rte_Runnable_MIC_MIC_Init_Return (void);
#else
#define Rte_Runnable_MIC_MIC_Init_Return() ((void)0/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
