#ifndef RTE_NVMIF_H
#define RTE_NVMIF_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.9.3
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2023 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte component declarations for component type NvmIf
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.9.3
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Intern.h>
#include <Rte_Main.h>
#include <Rte_NvmIf_Type.h>
#include <Rte_NvmIf_Hook.h>
#include <Rte_Components_Shared.h>

/* ==================[Macros]================================================= */
#ifndef RTE_CORE /* if included by software component */
#ifndef RTE_APPLICATION_HEADER_FILE_H /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif
#if (!defined(RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId)) && (!defined(RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults)) && (!defined(RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress)) && (!defined(RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock))
#define RTE_RUNNABLEAPI_NvmIf_Autotest_RunEepromMemoryNotProgrammed
#define RTE_RUNNABLEAPI_NvmIf_GetNvmBlockLength
#define RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus
#define RTE_RUNNABLEAPI_NvmIf_GetRamAddressByBlockId
#define RTE_RUNNABLEAPI_NvmIf_ReadBlockByAddress
#define RTE_RUNNABLEAPI_NvmIf_RestorePRAMBlockDefaults
#define RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus
#define RTE_RUNNABLEAPI_NvmIf_WriteBlockByAddress
#define RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock
#endif
#endif
/* ------------------[API mapping]-------------------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#if defined(RTE_RUNNABLEAPI_NvmIf_GetNvmBlockStatus)
#define Rte_Call_pclNvmService_AeeTraceabilityNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(10U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#252: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#362: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AssemblySerialNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(11U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#253: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#363: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSteps_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(44U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#254: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#364: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsVariant_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(13U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#255: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#365: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_HwPartNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(9U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#256: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#366: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_LockUnlockECU_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(7U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#257: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#367: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_AutotestEnableParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(6U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#258: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#368: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_AutotestParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(29U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#259: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#369: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_DemDefault_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(2U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#260: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#370: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_EccCounters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(3U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#261: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#371: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_MeasFrameCfg_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(8U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#262: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#372: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_ProcessMode_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(12U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#263: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#373: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAccLowPass_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(18U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#264: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#374: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_WarmResetCounters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(4U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#265: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#375: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_EcuTempCalibration_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(23U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#266: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#376: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AlvNvmVersion_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(24U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#267: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#377: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AccAngleCalibration_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(26U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#268: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#378: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSensitivityOPT_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(22U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#269: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#379: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EolCounters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(27U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#270: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#380: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_PhysicalMeasurements_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(30U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#271: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#381: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_SolenoidParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(31U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#272: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#382: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcuStateTimingParam_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(33U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#273: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#383: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemSparePartNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(34U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#274: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#384: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAccOffsets_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(15U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#275: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#385: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemHardwareNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(35U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#276: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#386: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemSystemName_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(36U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#277: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#387: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemFlashBootloader_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(37U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#278: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#388: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemOdxIdentifier_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(38U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#279: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#389: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemOdxVersion_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(39U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#280: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#390: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemEcuSerialNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(40U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#281: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#391: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemLogicalBlockVersion_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(41U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#282: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#392: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemHardwareVersionNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(42U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#283: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#393: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemAppSwVersionNumber_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(43U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#284: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#394: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAlgoOutputDelay_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(20U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#285: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#395: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsParameters_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(45U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#286: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#396: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_MeasFrameRamCfg_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(25U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#287: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#397: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsProfiles_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(32U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#288: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#398: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_SBSLastState_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(19U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#289: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#399: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSensitivityLUT_GetErrorStatus(RequestResultPtr) NvM_ASR42_Rte_GetErrorStatus(21U, RequestResultPtr)/*
Review instructions/justifications for parameter #2 with name 'RequestResultPtr' and passed argument 'RequestResultPtr':
- RTE.Review.WriteAccess.PointerTypeAndNotNull#290: Verify that the pointer RequestResultPtr always points to a NvM_ASR42_RequestResultType type and is never NULL.
- RTE.Review.FunctionCall.OutInoutArg#400: Verify that the called function does not write more than sizeof(NvM_ASR42_RequestResultType) bytes to *RequestResultPtr. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#if defined(RTE_RUNNABLEAPI_NvmIf_SetRamBlockStatus)
#define Rte_Call_pclNvmService_AeeTraceabilityNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(10U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AssemblySerialNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(11U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSteps_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(44U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsVariant_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(13U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_HwPartNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(9U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_LockUnlockECU_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(7U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_AutotestEnableParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(6U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_AutotestParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(29U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_DemDefault_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(2U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_EccCounters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(3U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_MeasFrameCfg_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(8U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_ProcessMode_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(12U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAccLowPass_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(18U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_WarmResetCounters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(4U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_EcuTempCalibration_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(23U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AlvNvmVersion_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(24U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AccAngleCalibration_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(26U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSensitivityOPT_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(22U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EolCounters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(27U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_PhysicalMeasurements_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(30U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_SolenoidParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(31U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcuStateTimingParam_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(33U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemSparePartNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(34U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAccOffsets_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(15U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemHardwareNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(35U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemSystemName_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(36U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemFlashBootloader_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(37U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemOdxIdentifier_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(38U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemOdxVersion_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(39U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemEcuSerialNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(40U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemLogicalBlockVersion_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(41U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemHardwareVersionNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(42U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemAppSwVersionNumber_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(43U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAlgoOutputDelay_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(20U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsParameters_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(45U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_MeasFrameRamCfg_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(25U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsProfiles_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(32U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_SBSLastState_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(19U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSensitivityLUT_SetRamBlockStatus(BlockChanged) NvM_ASR42_Rte_SetRamBlockStatus(21U, BlockChanged)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#if defined(RTE_RUNNABLEAPI_NvmIf_WriteNvmBlock)
#define Rte_Call_pclNvmService_AeeTraceabilityNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(10U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AssemblySerialNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(11U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSteps_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(44U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsVariant_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(13U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_HwPartNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(9U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_LockUnlockECU_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(7U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_AutotestEnableParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(6U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_AutotestParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(29U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_DemDefault_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(2U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_EccCounters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(3U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_MeasFrameCfg_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(8U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_ProcessMode_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(12U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAccLowPass_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(18U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_WarmResetCounters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(4U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_EcuTempCalibration_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(23U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AlvNvmVersion_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(24U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_AccAngleCalibration_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(26U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSensitivityOPT_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(22U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EolCounters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(27U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_PhysicalMeasurements_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(30U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_SolenoidParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(31U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcuStateTimingParam_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(33U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemSparePartNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(34U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAccOffsets_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(15U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemHardwareNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(35U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemSystemName_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(36U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemFlashBootloader_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(37U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemOdxIdentifier_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(38U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemOdxVersion_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(39U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemEcuSerialNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(40U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemLogicalBlockVersion_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(41U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemHardwareVersionNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(42U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_OemAppSwVersionNumber_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(43U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsAlgoOutputDelay_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(20U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsParameters_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(45U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmServices_MeasFrameRamCfg_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(25U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsProfiles_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(32U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_SBSLastState_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(19U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#define Rte_Call_pclNvmService_EcsSensitivityLUT_WriteBlock(SrcPtr) NvM_ASR42_Rte_WriteBlock(21U, SrcPtr)/* RTE.Review.FunctionCall.ReadOnly.Justification: Called function has no or only IN arguments. *//* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#endif
#endif

/* ------------------[port handle API mapping]-------------------------------- */
#ifndef RTE_CORE /* if included by software component */
#endif

#define RTE_E_NvM_ASR42_Service_E_NOT_OK 1U/* RTE.Review.PreprocessorMacro.ReadOnly.Justification: The value/identifier returned by the preprocessor macro is read-only and cannot be modified by the user. */
#ifndef RTE_CORE /* if included by software component */
#endif

/* ==================[Types]================================================== */
#ifndef RTE_CORE /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_NvmIf, TYPEDEF, RTE_CONST) Rte_Instance;
#endif

/* ==================[Definition of variables with external linkage]========== */
#define RTE_START_SEC_CONST_8
#include <Rte_MemMap.h>
extern CONST(Rte_CDS_NvmIf, RTE_CONST) Rte_Instance_NvmIf;
#define RTE_STOP_SEC_CONST_8
#include <Rte_MemMap.h>
#define RTE_START_SEC_CONST_32
#include <Rte_MemMap.h>
extern CONSTP2CONST(Rte_CDS_NvmIf, RTE_CONST, RTE_CONST) Rte_Inst_NvmIf;
#define RTE_STOP_SEC_CONST_32
#include <Rte_MemMap.h>

/* ==================[Declaration of functions with external linkage]========= */
/* ------------------[declaration of runnable entities]----------------------- */
#define NvmIf_START_SEC_CODE_ASIL_A
#include <NvmIf_MemMap.h>
extern FUNC(void, RTE_CODE) NvmIf_Autotest_RunEepromMemoryNotProgrammed (P2VAR(u8TestResultType, AUTOMATIC, RTE_APPL_DATA) pu8TestResult);

#define NvmIf_STOP_SEC_CODE_ASIL_A
#include <NvmIf_MemMap.h>
#define NvmIf_START_SEC_CODE
#include <NvmIf_MemMap.h>
extern FUNC(void, RTE_CODE) NvmIf_GetNvmBlockLength (NvM_ASR42_BlockIdType u16BlockId, P2VAR(u16NvmBlockLengthType, AUTOMATIC, RTE_APPL_DATA) pu16BlockLength);

extern FUNC(void, RTE_CODE) NvmIf_GetNvmBlockStatus (NvM_ASR42_BlockIdType u16BlockId, P2VAR(NvM_ASR42_RequestResultType, AUTOMATIC, RTE_APPL_DATA) pu8BlockStatus);

extern FUNC(void, RTE_CODE) NvmIf_GetRamAddressByBlockId (NvM_ASR42_BlockIdType u16BlockId, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) pu32BlockRamAddress);

extern FUNC(void, RTE_CODE) NvmIf_ReadBlockByAddress (uint32 u32DestAddress, P2VAR(NvM_ASR42_DstPtrType, AUTOMATIC, RTE_APPL_DATA) pvData);

extern FUNC(void, RTE_CODE) NvmIf_RestorePRAMBlockDefaults (NvM_ASR42_BlockIdType u16BlockId);

extern FUNC(void, RTE_CODE) NvmIf_SetRamBlockStatus (NvM_ASR42_BlockIdType u16BlockId, uint8 u8BlockChanged);

extern FUNC(void, RTE_CODE) NvmIf_WriteBlockByAddress (uint32 u32DestAddress, P2VAR(NvM_ASR42_DstPtrType, AUTOMATIC, RTE_APPL_DATA) pvData);

extern FUNC(void, RTE_CODE) NvmIf_WriteNvmBlock (NvM_ASR42_BlockIdType u16BlockId, P2VAR(NvM_SrcPtrType, AUTOMATIC, RTE_APPL_DATA) pvNvM_SrcPtr);

#define NvmIf_STOP_SEC_CODE
#include <NvmIf_MemMap.h>

/* ------------------[declaration of API functions provided by Rte]----------- */
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>

/* ------------------[declaration of API functions provided by other Appl]---- */
#define RTE_START_SEC_APPL_CODE
#include <Rte_MemMap.h>
#ifndef RTE_CORE /* if included by software component */
extern FUNC(Std_ReturnType, RTE_CODE) NvM_ASR42_Rte_GetErrorStatus (NvM_ASR42_BlockIdType pdav0, P2VAR(NvM_ASR42_RequestResultType, AUTOMATIC, RTE_APPL_DATA) RequestResultPtr);
extern FUNC(Std_ReturnType, RTE_CODE) NvM_ASR42_Rte_SetRamBlockStatus (NvM_ASR42_BlockIdType pdav0, boolean BlockChanged);
extern FUNC(Std_ReturnType, RTE_CODE) NvM_ASR42_Rte_WriteBlock (NvM_ASR42_BlockIdType pdav0, NvM_ASR42_SrcPtrType SrcPtr);
#endif

#define RTE_STOP_SEC_APPL_CODE
#include <Rte_MemMap.h>

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
