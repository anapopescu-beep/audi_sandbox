
/******************************************************************************

AUTOLIV ELECTRONIC document.

-------------------------------------

Copyright Autoliv Inc. All rights reserved.

 *******************************************************************************
C-File Template Version:
 ******************************************************************************/
/*
$Revision: 1.1 $
$ProjectName: e:/MKSProjects/SBE/eCS/AUDI_MCC/Phase_01/View_Development/Components/Bootmanager/Autoliv/BmUsr/Design/project.pj $
 */
/*!****************************************************************************

@details
   Bootmanager module for - checking the presence and the validity of the bootloader updater component
                          - checking the presence and the validity of the application component

 ******************************************************************************/
/******************************************************************************
EXTERNAL DEPENDENCIES
 ******************************************************************************/
#include <Platform_Types.h>
#include <common.h>

/******************************************************************************
MODULE DEFINES
 ******************************************************************************/
/**
 *\brief
 *       Bootloader flag address.
 *
 */
#define BTL_ADDR_FLAG                ((uint8) 0x1FFF0u  )
/**
 *\brief
 *      Application address.
 *
 */
#define APP_START_ADDR              ((uint8) 0x00020004)
/**
 *\brief
 *      Bootloader address.
 *
 */
#define BOOTLOADER_ADDR             ((uint8) 0x00001004)

/******************************************************************************
MODULE TYPES
 ******************************************************************************/
/**
 *\brief
 *       Type definition of void address.
 *
 */
typedef void (*ptAPPL_START_ADDR)(void);
/**
 *\brief
 *       16-size array used for size of pattern array.
 *
 */
typedef unsigned short aucPattern[16u];

/******************************************************************************
DECLARATION OF LOCAL FUNCTIONS
 ******************************************************************************/

/******************************************************************************
DEFINITION OF LOCAL VARIABLES
 ******************************************************************************/
/**
 *\brief
 *       Variable used for the address of the application to jump to.
 *
 */
LOCAL ptAPPL_START_ADDR pAPPL_START_ADDR;
/**
 *\brief
 *       Variable used for the address of the bootloader to jump to.
 *
 */
LOCAL ptAPPL_START_ADDR pBTL_START_ADDR ;
/******************************************************************************
DEFINITION OF EXPORTED VARIABLES
 ******************************************************************************/

/******************************************************************************
DEFINITION OF LOCAL CONSTANT DATA
 ******************************************************************************/
/**
 *\brief
 *      Bootloader pattern used to check bootloader validity.
 *
 */
LOCAL const uint8 kaucPattern[sizeof(aucPattern)] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x52, 0x4F, 0x47, 0x52, 0x41, 0x4d, 0x4d};

/******************************************************************************
DEFINITION OF EXPORTED CONSTANT DATA
 ******************************************************************************/

/******************************************************************************
MODULE FUNCTION-LIKE MACROS
 ******************************************************************************/

/******************************************************************************
DEFINITION OF LOCAL FUNCTION
 ******************************************************************************/

/******************************************************************************
DEFINITION OF APIs
 ******************************************************************************/

/*!****************************************************************************

 ******************************************************************************/

/**
 *\brief
 *      Function used to jump to application program or to bootloader.
 *\param
 *      None.
 *\return
 *      None.
 *\dynamiaspectcaller
 *      None.
 *\dynamicaspectdescription
 *      None.
 *\constrains
 *      None.
 */

int main()
{
	uint8  u8Index = 0u;
	uint8* pucAddr = (uint8*)BTL_ADDR_FLAG;
	uint32 u32AppAddress;

	/* Check if the pattern is found */
	for(u8Index = 0u; u8Index < sizeof(aucPattern); u8Index++)
	{
		/* If the pattern isn't found jump to application */
		if((pucAddr[u8Index]) != kaucPattern[u8Index])
		{
			/* Jump to application */
			u32AppAddress = *(uint32*)APP_START_ADDR;

			/* Get the address of the application to jump in */
			pAPPL_START_ADDR = (ptAPPL_START_ADDR)(u32AppAddress);

			/* Jump in application */
			pAPPL_START_ADDR();

		}
	}

	/* Jump to bootloader*/
	u32AppAddress = *(uint32*)BOOTLOADER_ADDR;

	/* Get the address of the bootloader to jump in */
	pBTL_START_ADDR = (ptAPPL_START_ADDR)(u32AppAddress);

	/* Jump to bootloader */
	pBTL_START_ADDR();

	while(1)
	{
	}

	return 0;
}

/******************************************************************************
End Of File
 *****************************************************************************/


