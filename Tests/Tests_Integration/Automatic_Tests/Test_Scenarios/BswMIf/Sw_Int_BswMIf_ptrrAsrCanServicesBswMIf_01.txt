					Autoliv Electronics Document
Nightly test: No
Test type: Requirement-Based
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_BswMIf_ptrrCanServicesBswMIf_Can_SetControllerMode_BswM_OnStartupTwoA, ARCH_SW_BswMIf_ptrrCanServicesBswMIf_Can_EnableControllerInterrupts_BswM_OnStartupTwoA
ARCH_SW_BswMIf_ptrrCanServicesBswMIf_Can_SetControllerMode_BswM_OnStartupTwoA: The Can_SetControllerMode runnable shall be called in the BswM_OnStartupTwoA runnable in order to put the CAN controller in START State.
ARCH_SW_BswMIf_ptrrCanServicesBswMIf_Can_EnableControllerInterrupts_BswM_OnStartupTwoA: The Can_EnableControllerInterrupts runnable shall be called in the BswM_OnStartupTwoA runnable in order to enable CAN interrupts.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

Action: ARCH_SW_BswMIf_ptrrCanServicesBswMIf_Can_SetControllerMode_BswM_OnStartupTwoA

	Step 2: Set a BP in function BswM_OnStartupTwoA to call Can_SetControllerMode function 
		Expected result:  BP was set

	Step 3: Set a BP in function Can_SetControllerMode in order to put the CAN controller in START State 
		Expected result:  BP was set

	Step 4: Set a BP in function BswM_OnStartupTwoA for check the interface 
		Expected result:  BP was set

Action: ARCH_SW_BswMIf_ptrrCanServicesBswMIf_Can_EnableControllerInterrupts_BswM_OnStartupTwoA

	Step 5: Set a BP in function BswM_OnStartupTwoA to call Can_EnableControllerInterrupts function 
		Expected result:  BP was set

	Step 6: Set a BP in function Can_EnableControllerInterrupts in order to enable CAN interrupts 
		Expected result:  BP was set

	Step 7: Set a BP in function BswM_OnStartupTwoA for check the interface 
		Expected result:  BP was set

Postcondition

	Step 8: Return ECU to default values
