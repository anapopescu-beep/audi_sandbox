					Autoliv Electronics Document
Nightly test: No
Test type: Requirement-Based
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_OnStartComEffective, ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_On_Prep_Shutdown, ARCH_SW_BswMIf_ptrrRcmServicesBswMIf_RCM_runGetResetCause_BswM_OnStartupTwoB, ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_GoDown_BswM_ProceedReset
ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_OnStartComEffective: The EcuM_ClearWakeupEvent runnable shall be called in the BswM_OnStartComEffective runnable in order to acknowledge wake validation information
ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_On_Prep_Shutdown: The EcuM_ClearWakeupEvent runnable shall be called in the BswM_On_Prep_Shutdown runnable in order to acknowledge wake validation information
ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ValidateWakeupEvent_BswM_OnStartupTwoB: The EcuM_ValidateWakeupEvent runnable shall be called in the BswM_OnStartupTwoB runnable in order to validate wakeup event
ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_GoDown_BswM_ProceedReset: The EcuM_GoDown runnable shall be called in the BswM_ProceedReset runnable in order to prepare for a power off/reset
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

Action: ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_OnStartComEffective

	Step 2: Set a BP in function BswM_OnStartComEffective call EcuM_ClearWakeupEvent function 
		Expected result:  BP was set

	Step 3: Set a BP in function EcuM_ClearWakeupEvent in order to acknowledge wake validation information 
		Expected result:  BP was set

	Step 4: Set a BP in function BswM_OnStartComEffective for check the interface 
		Expected result:  BP was set

Action: ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_On_Prep_Shutdown

	Step 5: Send diagnostic request in order to do soft Reset

	Step 6: Set a BP in function BswM_ProceedReset in order to call BswM_On_Prep_Shutdown 
		Expected result:  BP was set

	Step 7: Set a BP in EcuM_ClearWakeupEvent in order to acknowledge wake validation information 
		Expected result:  BP was set

	Step 8: Set a BP in function BswM_CB_NfyNvMJobEnd for check the interface 
		Expected result:  BP was set

Action: ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ValidateWakeupEvent_BswM_OnStartupTwoB

	Step 9: Set a BP in function BswM_OnStartupTwoB in order change Detected Reset Reason value to be ~0 
		Expected result:  BP was set

	Step 10: Change value for Detected Reset Reason to be ~0 
		Expected result:  Succesfully changed

	Step 11: Set a BP in function BswM_OnStartupTwoB in order call EcuM_ValidateWakeupEvent 
		Expected result:  BP was set

	Step 12: Set a BP in function EcuM_ValidateWakeupEvent in order to validate wakeup event 
		Expected result:  BP was set

	Step 13: Set a BP in function BswM_OnStartupTwoA for check the interface 
		Expected result:  BP was set

Action: ARCH_SW_BswMIf_ptrrEcuMServicesBswMIf_EcuM_ClearWakeupEvent_BswM_On_Prep_Shutdown

	Step 14: Send diagnostic request in order to do Hard Reset

	Step 15: Set a BP in function EcuM_GoDown in order to call EcuM_GoDown and to prepare for a power off/reset 
		Expected result:  BP was set

	Step 16: Set a BP in EcuM_GoDown in order to prepare for a power off/reset 
		Expected result:  BP was set

	Step 17: Set a BP in function Dem_Init for check if the reset was executed 
		Expected result:  BP was set

Postcondition

	Step 18: Return ECU to default values
