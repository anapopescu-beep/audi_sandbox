					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_CIL_P_CAN_CanDataOut_Frame_0
ARCH_SW_CIL_P_CAN_CanDataOut_Frame_0: The runnable shall write all the content of the CAN signals belonging to the eCS Dev Frame - The runnable shall read from the Application the followig data and send them on the CAN bus: - NVP_u32eCSVariant - Acceleration on X,Y,Z axis in g - eCS Algorithm Decision - Ball Position in mm - Selected Profile[for each solenoid] - Acceleration on X,Y,Z axis in m/s^2 - Selected step [for each solenoid] - Solenoid state [for each solenoid] - Solenoid confirmation status [for each solenoid] - Buckle Status [for each solenoid] - Lock Execution Counter [for each solenoid] - Unlock Execution Counter [for each solenoid] - Unlock Confirmed Execution Counter [for each solenoid] - Warm reset counter
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

Action: ARCH_SW_CIL_P_CAN_CanDataOut_Frame_0

	Step 2: Start DevKit_01 Frame 
		Expected result:  Frame started.

	Step 3: Send request for Supplier session

	Step 4: Send request for  Supplier Security Access

	Step 5: Send request for press ECUUnlock button

	Step 6: Send request for Activate measurement frame

	Step 7: Set a breakpoint in function CIL_runAppliToCAN at the execution for the current time slot 
		Expected result:  BP reached.

	Step 8: Set a breakpoint in function cil_ManagePeriodicData_TimeSlot02 at the 2th timeslot 
		Expected result:  BP reached.

	Step 9: Run the debugger 2 times, in order to reach the 2th timeslot.

	Step 10: Set a breakpoint in function cil_ManagePeriodicData_TimeSlot02 after RTE Call Get Acceleration in m/s^2 
		Expected result:  BP reached.

	Step 11: Read st 3 Axis Accel for x in m/s^2 value. 
		Expected result:  st 3 Axis Accel value succesfully read

	Step 12: Read st 3 Axis Accel for y in m/s^2 value. 
		Expected result:  st 3 Axis Accel value succesfully read

	Step 13: Read st 3 Axis Accel for z in m/s^2 value. 
		Expected result:  st 3 Axis Accel value succesfully read

	Step 14: Check that signal Accel_Ax was set  
		Expected result:  Signal is set

	Step 15: Check that signal Accel_Ay was set  
		Expected result:  Signal is set

	Step 16: Check that signal Accel_Az was set  
		Expected result:  Signal is set

Postcondition

	Step 17: Return ECU to default values
