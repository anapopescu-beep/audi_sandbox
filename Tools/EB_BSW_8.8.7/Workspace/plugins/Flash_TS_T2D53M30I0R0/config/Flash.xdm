<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T2D53M30I0R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Flash" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>30.0.2</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2020-07-08T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="RELEASE" value="asc:4.0"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="30"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="General" type="IDENTIFIABLE">
                <v:var name="CustomWrapperUsing" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                If enabled, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).&lt;/li&gt;
                                If disabled, the custom callback wrapper actions will not be called.
                                (Standard AUTOSAR API are used).
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive Software"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:52d00b4f-174c-453b-8884-271b69712345"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="Init" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                             This container contains the Flash Wrapper Initialization proprieties.
                             &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="Init"/>
                <v:ctr name="Configurations" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt;
                                  Can not be editable because not applied to the Initialization operation
                                  &lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="CopyROMToRAM" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                          &lt;ul&gt;
                                          &lt;li&gt;
                                          If enabled, the driver will copy the low layer APIs from ROM to RAM.&lt;/li&gt;
                                          If disabled, no copy action will be done by the driver.
                                          In this case a mechanism shall ensure this ROM to RAM copy.
                                          &lt;/li&gt;
                                          &lt;/ul&gt;
                                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive Software"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="UpperLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the upper layer Flash driver interfaces for the initialization.
                                eFlashStatus FLASH_Init(void);
                                Can not be editable.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                  <v:var name="UpperLayer_Init_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the upper layer Initialization API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="Flash_Init"/>
                  </v:var>
                  <v:var name="UpperLayer_Init_RoutineTypeReturn" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Initialization API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="eFlashStatus"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="LowerLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="LowerLayer_Init_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the lower Initialization API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Init_RoutineTypeReturn" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Init_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s first argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Init_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s second argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Init_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s third argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Init_RoutineTypeArg4" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s fourth argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Init_RoutineTypeArg5" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s fifth argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="ArgsWrapper" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
								This container enable to define the wrapping argument links between the Upper and Lower layer.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                </v:ctr>
                <v:ctr name="CustomWrapperInit" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                               (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" 
                        expr="as:modconf(&apos;Flash&apos;)/General/CustomWrapperUsing=&apos;true&apos;"/>
                  <v:var name="FLW_CustomWrapperInit_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the custom lower Initialization API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
              </v:ctr>
              <v:ctr name="Erase" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                             This container contains the Flash Wrapper Erase proprieties.
                             &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="Erase"/>
                <v:ctr name="Configurations" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the Flash Wrapper configurations for the Erase.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="EraseCriticalSectionMngt" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  If enabled, the critical section management will be done by the Flash driver before the low layer erasing operations.
                                  This feature ensure that no interruption will happen all along the low layer erasing operation.
                                  In case of the critical section management is managed by the low layer erasing, this feature can be disabled. (Blind window will be reduced).
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive Software"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:52d00b4f-174c-453b-8884-271b69712345"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="EraseMode" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Define the erasing type of management.
                                   Synchrone (Blocker): The erasing operations will be done in one step. (High Real time consumption).
                                   Asynchrone (Slicer): The erasing operations will be splitted in several slice. (Less Real time consumption).
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="DEFAULT" value="Asynchrone"/>
                    <a:da name="RANGE">
                      <a:v>Synchrone</a:v>
                      <a:v>Asynchrone</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="UpperLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the upper layer Flash driver interfaces for the Erase.
                                eFlashStatus FLASH_Erase(uint32 uAddr, uint32 uwLen);
                                Can not be editable.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                  <v:var name="UpperLayer_Erase_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the upper layer erase API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="Flash_Erase"/>
                  </v:var>
                  <v:var name="UpperLayer_Erase_RoutineTypeReturn" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Erase API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="eFlashStatus"/>
                  </v:var>
                  <v:var name="UpperLayer_Erase_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Erase API&apos;s first argument. 
								   This argument represents the sector address to erase.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint32"/>
                  </v:var>
                  <v:var name="UpperLayer_Erase_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Erase API&apos;s second argument.
								   This argument represents the length to erase.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint32"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="LowerLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="LowerLayer_Erase_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Erase API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Erase_RoutineTypeReturn" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Name of the lower Erase API.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Erase_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Initialization API&apos;s first argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Erase_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Initialization API&apos;s second argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Erase_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Initialization API&apos;s third argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Erase_RoutineTypeArg4" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Initialization API&apos;s fourth argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Erase_RoutineTypeArg5" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Initialization API&apos;s fifth argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="ArgsWrapper" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
								This container enable to define the wrapping argument links between the Upper and Lower layer.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="UpperLayer_Erase_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Erase API&apos;s first argument. 
								   This argument represents the sector address to erase.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Erase_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="UpperLayer_Erase_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC" value=""/>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Erase_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Erase_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="CustomWrapperErase" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                               (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" 
                        expr="as:modconf(&apos;Flash&apos;)/General/CustomWrapperUsing=&apos;true&apos;"/>
                  <v:var name="FLW_CustomWrapperErase_RoutineName" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the custom lower Erase API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
              </v:ctr>
              <v:ctr name="Write" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                             This container contains the Flash Wrapper Write proprieties.
                             &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="Write"/>
                <v:ctr name="Configurations" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the Flash Wrapper configurations for the Write.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="WriteCriticalSectionMngt" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  If enabled, the critical section management will be done by the Flash driver before the low layer writing operations.
                                  This feature ensure that no interruption will happen all along the low layer writing operation.
                                  In case of the critical section management is managed by the low layer writing, this feature can be disabled. (Blind window will be reduced).
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive Software"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:52d00b4f-174c-453b-8884-271b69712345"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="WriteMode" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Define the programming type of management.
                                   Synchrone (Blocker): The writting operations will be done in one step. (High Real time consumption).
                                   Asynchrone (Slicer): The writting operations will be splitted in several slice. (Less Real time consumption).
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="DEFAULT" value="Asynchrone"/>
                    <a:da name="RANGE">
                      <a:v>Synchrone</a:v>
                      <a:v>Asynchrone</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="FlashPageSize" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Define the number of bytes to write per page
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="32"/>
                  </v:var>
                  <v:var name="FlashPagePaddingValue" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Define the padding value which will be applied on the page progamming
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="255"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="UpperLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the upper layer Flash driver interfaces for the Erase.
                                eFlashStatus FLASH_Write(uint32 uAddr, uint32 uwLen, uint8* aubData);
                                Can not be editable.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                  <v:var name="UpperLayer_Write_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the upper layer write API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="FLASH_Write"/>
                  </v:var>
                  <v:var name="UpperLayer_Write_RoutineTypeReturn" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Write API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="eFlashStatus"/>
                  </v:var>
                  <v:var name="UpperLayer_Write_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s first argument.
								   This argument represents the page address to write.								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint32"/>
                  </v:var>
                  <v:var name="UpperLayer_Write_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s second argument.
								   This argument represents the length of data to write.								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint32"/>
                  </v:var>
                  <v:var name="UpperLayer_Write_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s third argument.
								   This argument represents the pointer of data to write								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint8*"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="LowerLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="LowerLayer_Write_RoutineName" type="STRING">
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Write_RoutineTypeReturn" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Write_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s first argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Write_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s second argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Write_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s third argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Write_RoutineTypeArg4" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s fourth argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Write_RoutineTypeArg5" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Initialization API&apos;s fifth argument.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="ArgsWrapper" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
								This container enable to define the wrapping argument links between the Upper and Lower layer.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="UpperLayer_Write_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s first argument.
								   This argument represents the page address to write.								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Write_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="UpperLayer_Write_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s second argument.
								   This argument represents the length of data to write.								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Write_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="UpperLayer_Write_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Write API&apos;s third argument.
								   This argument represents the pointer of data to write								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Write_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Write_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="CustomWrapperWrite" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                               (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" 
                        expr="as:modconf(&apos;Flash&apos;)/General/CustomWrapperUsing=&apos;true&apos;"/>
                  <v:var name="FLW_CustomWrapperWrite_RoutineName" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the custom lower Write API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
              </v:ctr>
              <v:ctr name="Read" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                             This container contains the Flash Wrapper Read proprieties.
                             &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="Read"/>
                <v:ctr name="Configurations" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the Flash Wrapper configurations for the Read.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="ReadMode" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                     Define the reading type of management.
                                     Synchrone (Blocker): The reading operations will be done in one step. (High Real time consumption).
                                     Asynchrone (Slicer): The reading operations will be splitted in several slice. (Less Real time consumption).
                                     &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="DEFAULT" value="Synchrone"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>Synchrone</a:v>
                      <a:v>Asynchrone</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="UpperLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Define the upper layer Flash driver interfaces for the Read.
                                eFlashStatus FLASH_Read(uint32 uAddr, uint32 uwLen, uint8* aubData);
                                Can not be editable.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                  <v:var name="UpperLayer_Read_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the upper layer Read API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="Flash_Read"/>
                  </v:var>
                  <v:var name="UpperLayer_Read_RoutineTypeReturn" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="eFlashStatus"/>
                  </v:var>
                  <v:var name="UpperLayer_Read_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s first argument.
								   This argument represents the start address to read.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint32"/>
                  </v:var>
                  <v:var name="UpperLayer_Read_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s second argument.
								   This argument represents the length of data to read.								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint32"/>
                  </v:var>
                  <v:var name="UpperLayer_Read_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s third argument.
                                   This argument represents the pointer of data where the read data will be stored.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="uint8*"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="LowerLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
                                Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON).
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="LowerLayer_Read_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the lower Read API&apos;s return.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Read_RoutineTypeReturn" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Name of the lower Read API.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Read_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Read API&apos;s first argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Read_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Read API&apos;s second argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Read_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Read API&apos;s third argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Read_RoutineTypeArg4" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Read API&apos;s fourth argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Read_RoutineTypeArg5" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                  Type of the lower Read API&apos;s fifth argument.
                                  &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="ArgsWrapper" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;
								This container enable to define the wrapping argument links between the Upper and Lower layer.
                                &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="UpperLayer_Read_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s first argument.
								   This argument represents the start address to read.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Read_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="UpperLayer_Read_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s second argument.
								   This argument represents the length of data to read.								   
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Read_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="UpperLayer_Read_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Type of the upper layer Read API&apos;s third argument.
                                   This argument represents the pointer of data where the read data will be stored.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>LowerLayer_Read_RoutineTypeArg1</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg2</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg3</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg4</a:v>
                      <a:v>LowerLayer_Read_RoutineTypeArg5</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:ctr name="CustomWrapperRead" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                &lt;ul&gt;
                                &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                               (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" 
                        expr="as:modconf(&apos;Flash&apos;)/General/CustomWrapperUsing=&apos;true&apos;"/>
                  <v:var name="FLW_CustomWrapperRead_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                   Name of the custom lower Read API.
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
              </v:ctr>
              <v:ctr name="Main" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                                   This container contains the Flash Wrapper Main function proprieties.
                                   &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="Main"/>
                <v:ctr name="Configurations" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                      &lt;ul&gt;
                                      &lt;li&gt;
                                      Define the Flash Wrapper configurations for the Main.
                                      &lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                  </a:a>
                </v:ctr>
                <v:ctr name="UpperLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                      &lt;ul&gt;
                                      &lt;li&gt;
                                      Define the upper layer Flash driver interfaces for the Main function.
                                      void FLASH_MainFunction(void);
                                      Can not be editable.
                                      &lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                  <v:var name="UpperLayer_Main_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Name of the upper layer Main API.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="FLASH_MainFunction"/>
                  </v:var>
                  <v:var name="UpperLayer_Main_RoutineTypeReturn" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the upper layer Main API&apos;s return.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="void"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="LowerLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                      &lt;ul&gt;
                                      &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                      (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).
                                      &lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="LowerLayer_Main_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Name of the lower Main API.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Main_RoutineTypeReturn" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower Main API&apos;s return.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Main_RoutineTypeArg1" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower Main API&apos;s first argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Main_RoutineTypeArg2" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower Main API&apos;s second argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Main_RoutineTypeArg3" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower Main API&apos;s third argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Main_RoutineTypeArg4" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower Main API&apos;s fourth argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_Main_RoutineTypeArg5" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                 Type of the lower Main API&apos;s fifth argument.
                                 &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="ArgsWrapper" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
							      	         This container enable to define the wrapping argument links between the Upper and Lower layer.
                               &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                </v:ctr>
              </v:ctr>
              <v:ctr name="JobStatus" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                                   This container contains the Flash Wrapper Job Status function proprieties.
                                   &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="JobStatus"/>
                <v:ctr name="Configurations" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                      &lt;ul&gt;
                                      &lt;li&gt;
                                      Define the Flash Wrapper configurations for the Job Status.
                                      &lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                  </a:a>
                </v:ctr>
                <v:ctr name="UpperLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                      &lt;ul&gt;
                                      &lt;li&gt;
                                      Define the upper layer Flash driver interfaces for the JobStatus function.
                                      void FLASH_GetJobStatus(void);
                                      Can not be editable.
                                      &lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                  <v:var name="UpperLayer_JobStatus_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Name of the upper layer JobStatus API.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="FLASH_GetJobStatus"/>
                  </v:var>
                  <v:var name="UpperLayer_JobStatus_RoutineTypeReturn" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the upper layer JobStatus API&apos;s return.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="void"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="LowerLayer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                      &lt;ul&gt;
                                      &lt;li&gt;Enabled by checked the &quot;CustomWrapperUsing&quot;, the custom callback wrapper actions will be called. Special actions can be done inside the dedicated APIs.
                                      (Non Standard AUTOSAR API are used, intended to be used with the FlsLoader from INFINEON.).
                                      &lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="LowerLayer_JobStatus_RoutineName" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Name of the lower JobStatus API.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_JobStatus_RoutineTypeReturn" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower JobStatus API&apos;s return.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_JobStatus_RoutineTypeArg1" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower JobStatus API&apos;s first argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_JobStatus_RoutineTypeArg2" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower JobStatus API&apos;s second argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_JobStatus_RoutineTypeArg3" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower JobStatus API&apos;s third argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_JobStatus_RoutineTypeArg4" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                         Type of the lower JobStatus API&apos;s fourth argument.
                                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="LowerLayer_JobStatus_RoutineTypeArg5" 
                         type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                                 Type of the lower JobStatus API&apos;s fifth argument.
                                 &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="ArgsWrapper" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
							      	         This container enable to define the wrapping argument links between the Upper and Lower layer.
                               &lt;/html&gt;</a:v>
                  </a:a>
                  <a:da name="ENABLE" type="XPath" expr="false"/>
                </v:ctr>
              </v:ctr>
              <v:ctr name="Include" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                             &lt;ul&gt;
                             &lt;li&gt;
                             Define the files to include for the Flash wrapper.
                             &lt;/li&gt;
                             &lt;/ul&gt;
                             &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="Include"/>
                <v:lst name="Include">
                  <v:var name="Include" type="STRING">
                    <a:a name="DESC" 
                         value="EN: A list of additional header files included by the generated MemMap.h. The files are included in the configured order."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive Software"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="e6f6a2d8-289a-402f-aaff-f26468e12345"/>
                  </v:var>
                </v:lst>
              </v:ctr>
              <v:ctr name="FlashSectors" type="IDENTIFIABLE">
                <v:lst name="FlashSectors" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>Start_Address</a:v>
                    <a:v>Length</a:v>
                    <a:v>Sector_Size</a:v>
                    <a:v>Programmable</a:v>
                  </a:a>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="FlashSectorsTable" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN:&lt;html&gt; 
                                   This container the description of the sectors.&quot;
                                   &lt;/html&gt;</a:v>
                    </a:a>
                    <v:var name="Start_Address" type="INTEGER">
                      <a:a name="DEFAULT_RADIX" value="HEX"/>
                      <a:a name="DESC">
                        <a:v>EN:&lt;html&gt; 
                                      Contains the Flash Start_Address in hexadecimal
                                      &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="ORIGIN" value="EB"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    </v:var>
                    <v:var name="Length" type="INTEGER">
                      <a:a name="DEFAULT_RADIX" value="HEX"/>
                      <a:a name="DESC">
                        <a:v>EN:&lt;html&gt; 
                                      Contains the Length range memory in hexadecimal
                                      &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="ORIGIN" value="EB"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    </v:var>
                    <v:var name="Sector_Size" type="INTEGER">
                      <a:a name="DEFAULT_RADIX" value="HEX"/>
                      <a:a name="DESC">
                        <a:v>EN:&lt;html&gt; 
                                      Contains the sector Length in hexadecimal
                                      &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="ORIGIN" value="EB"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    </v:var>
                    <v:var name="Programmable" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>EN: &lt;html&gt; 
                                      Specify if the sector is programmable or not
                                      &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="ORIGIN" value="EB"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                             &lt;html&gt;
                             Additional published parameters not covered by CommonPublishedInformation container.
                             &lt;/html&gt;</a:v>
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                                &lt;html&gt;
                                Specifies whether or not the Flash can use the PbcfgM module for post-build support.
                                &lt;/html&gt;</a:v>
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Flash can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
