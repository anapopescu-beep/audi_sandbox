<?xml version='1.0'?>
<datamodel version="5.0"
           xmlns="http://www.tresos.de/_projects/DataModel2/12/root.xsd"
           xmlns:a="http://www.tresos.de/_projects/DataModel2/12/attribute.xsd"
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd"
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    Crypto.xdm
*   @version 1.0.1
*
*   @brief   AUTOSAR Crypto - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and Crypto Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : RTD AUTOSAR 4.4
*   Platform             : CORTEXM
*   Peripheral           : Crypto
*   Dependencies         : none
*
*   Autosar Version      : 4.4.0
*   Autosar Revision     : ASR_REL_4_4_REV_0000
*   Autosar Conf.Variant :
*   SW Version           : 1.0.1
*   Build Version        : S32K1_RTD_1_0_1_D2202_ASR_REL_4_4_REV_0000_20220224
*
*   (c) Copyright 2020-2022 NXP Semiconductors
*   All Rights Reserved.
*
*   NXP Confidential. This software is owned or controlled by NXP and may only be
*   used strictly in accordance with the applicable license terms. By expressly
*   accepting such terms or by downloading, installing, activating and/or otherwise
*   using the software, you are agreeing that you have read, and that you agree to
*   comply with and are bound by, such license terms. If you do not agree to be
*   bound by the applicable license terms, then you may not retain, install,
*   activate or otherwise use the software.
====================================================================================================
-->

  <d:ctr type="AUTOSAR" factory="autosar"
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd"
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd"
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
    <!-- @implements Crypto_Object -->
      <d:ctr name="TS_T40D2M10I1R0" type="AR-PACKAGE">
        <a:a name="UUID" value="ECUC:35cab853-b883-496d-98d6-c2226b4d6856"/>
            <d:lst type="ELEMENTS">
              <d:chc name="Crypto" type="AR-ELEMENT" value="MODULE-DEF">
                <v:ctr type="MODULE-DEF">
                        <a:a name="RELEASE" value="asc:4.4"/>
                    <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                        <ad:ADMIN-DATA>
                            <ad:DOC-REVISIONS>
                            <ad:DOC-REVISION>
                            <ad:REVISION-LABEL>4.4.0</ad:REVISION-LABEL>
                            <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                            </ad:DOC-REVISION>
                        </ad:DOC-REVISIONS>
                    </ad:ADMIN-DATA>
                    </a:a>
                    <a:a name="DESC" value="EN: Configuration of the Crypto (CryptoDriver) module"/>
                    <a:a name="LOWER-MULTIPLICITY" value="0"/>
                    <a:a name="POSTBUILDVARIANTSUPPORT" value="false"/>
                    <a:a name="UPPER-MULTIPLICITY" value="*"/>
                    <a:a name="UUID" value="ECUC:1e8f8d52-ca03-d4f1-21e2-21367143d9d5"/>

                    <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                        <a:a name="DESC" value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Post Build Variant Used"/>
                        <a:a name="ORIGIN" value="EB"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="READONLY" value="true"/>
                    </v:var>
                    <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                        <a:a name="LABEL" value="Config Variant"/>
                        <a:a name="UUID" value="ECUC:1a6b36f0-eb4c-46d6-87b5-9360aa3b226c"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[EN:
                                    <html><p>
                                        VariantPreCompile: Only precompile time configuration parameters.<br>
                                        The files Crypto_Cfg.h and Crypto_Cfg.c are used.<br>
                                    </p></html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:da name="DEFAULT" value="VariantPreCompile"/>
                        <a:da name="RANGE">
                            <a:v>VariantPreCompile</a:v>
                        </a:da>
                    </v:var>

                    <!-- @implements CryptoDriverObjects_Object -->
                    <v:ctr name="CryptoDriverObjects" type="IDENTIFIABLE">
                        <a:a name="DESC" value="EN: Container for CRYPTO Objects, there can be maximum 2 Crypto Driver
                                   Objects configured: one for symmetric primitives and one for asymmetric primitives."/>
                        <a:a name="UUID" value="ECUC:1a1b756a-02a3d-3cf7-436f-5827bb56e618"/>

                        <v:lst name="CryptoDriverObject" type="MAP">
                            <a:da name="MIN" value="1"/>

                            <!-- @implements CryptoDriverObject_Object -->
                            <v:ctr name="CryptoDriverObject" type="IDENTIFIABLE">
                                <a:a name="DESC" value="EN: Configuration of a CryptoDriverObject"/>
                                <a:a name="UUID" value="ECUC:1f3e21d8-4e16-439c-a782-bf560503fb5c"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>

                                <!-- @implements CryptoDriverObjectId_Object -->
                                <v:var name="CryptoDriverObjectId" type="INTEGER">
                                    <a:a name="DESC" value="EN: Identifier of the Crypto Driver Object. The Crypto Driver Object offers different crypto primitives."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                    <a:a name="UUID" value="ECUC:124a14e8-b0e9-c04c-dcce-eec074c10faf"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="text:uniq(../../*/CryptoDriverObjectId, .)" false="Duplicated value, CryptoDriverObjectId must be unique."/>
                                        <a:tst expr="(node:value(.) > num:i(count(../../*/.)) - 1)" true="CryptoDriverObjectId is out of range. Maximum value is given by the number of items in the list minus 1."/>
                                    </a:da>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                    <a:da name="DEFAULT" type="XPath" expr="num:i(node:fallback(node:current()/../@index, num:i(0)))" />
                                </v:var>
                                <!-- @implements CryptoQueueSize_Object -->
                                <v:var name="CryptoQueueSize" type="INTEGER">
                                    <a:a name="DESC" value="EN: Size of the queue in the Crypto Driver. Defines the maximum number of jobs in the Crypto Driver Object queue. If it is set to 0, queueing is disabled in the Crypto Driver Object.
                                                            Note: The node value will be used as the element number when declaring an array variable for the QUEUE feature. So the maximum value depends on the memory space of each platform."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a6ec78cd-1a48-44c4-1013-16ad126e1923"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                    <a:da name="DEFAULT" value="0"/>
                                </v:var>
                                <!-- @implements CryptoPrimitiveRef_Object -->
                                <v:lst name="CryptoPrimitiveRef">
                                    <a:da name="MIN" value="1"/>

                                    <v:ref name="CryptoPrimitiveRef" type="REFERENCE">
                                        <a:a name="DESC" value="EN: Refers to primitive in the CRYPTO."/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="UUID" value="ECUC:81edadac-11b4-4eea-1aa6-2da3e02c4c9f"/>
                                        <a:da name="REF"
                                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoPrimitives/CryptoPrimitive"/>
                                        <a:da name="RANGE" type="XPath">
                                            <a:tst expr="node:paths(../../CryptoPrimitive/*)"/> <!-- Select for reference only the options available inside the CryptoPrimitives -->
                                        </a:da>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="text:uniq(../*, .)" false="Duplicated value, 'CryptoPrimitiveRef' must be unique!"/>
                                            <a:tst expr="node:refvalid(.)" false="The configured node does not exist or may not be referenced."/>
                                        </a:da>
                                    </v:ref>
                                </v:lst>

                                <v:lst name="CryptoDriverObjectEcucPartitionRef">
                                    <v:ref name="CryptoDriverObjectEcucPartitionRef" type="REFERENCE">
                                        <a:a name="DESC">
                                          <a:v>EN: Maps the Crypto Driver Object to zero a multiple ECUC partitions. The ECUC partitions referenced are a subset of the ECUC partitions where the Crypto Driver Object is mapped to.</a:v>
                                          <a:v>EN: Tags: atp.Status=draft</a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="ECU"/>
                                        <a:a name="UUID" value="ECUC:14cc88hh-619e-4019-a793-3535990384ad"/>
                                        <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="count(text:grep(../../../../../CryptoGeneral/CryptoEcucPartitionRef/*,.))>0"
                                                false="The ECUC partition must be one of the partitions defined in the CryptoEcucPartitionRef."/>
                                        </a:da>
                                    </v:ref>
                                </v:lst>
                            </v:ctr>
                        </v:lst>
                    </v:ctr>

                    <!-- @implements CryptoGeneral_Object -->
                    <v:ctr name="CryptoGeneral" type="IDENTIFIABLE">
                        <a:a name="DESC" value="EN: Container for common configuration options"/>
                        <a:a name="UUID" value="ECUC:22ae2270-3711-410d-108a-8aedfedf64e6"/>

                        <!-- @implements CryptoDevErrorDetect_Object -->
                        <v:var name="CryptoDevErrorDetect" type="BOOLEAN">
                            <a:a name="DESC" value="EN: Switches the development error detection and notification on or off."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:1a0fef6b-ff21-1fa8-b2db-0ac159b82c59"/>
                            <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <!-- @implements CryptoVersionInfoApi_Object -->
                        <v:var name="CryptoVersionInfoApi" type="BOOLEAN">
                            <a:a name="DESC" value="EN: Pre-processor switch to enable and disable availability of the API Crypto_GetVersionInfo()."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:1c156a69-253a-a6b7-ae2a-b353923b722b"/>
                            <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <!-- @implements CryptoInstanceId_Object -->
                        <v:var name="CryptoInstanceId" type="INTEGER">
                          <a:a name="DESC" value="EN: Instance ID of the Crypto driver. This ID is used to discern several crypto drivers in case more than one driver is used in the same ECU."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:1e5e98b2-25e7-3e3d-b1fc-d43ba3722b81"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=255"/>
                                <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <!-- @implements CryptoMainFunctionPeriod_Object -->
                        <v:var name="CryptoMainFunctionPeriod" type="FLOAT">
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="DESC" value="EN: Specifies the period of main function Crypto_MainFunction in seconds."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:17196c6e-2bbd-a28d-ca75-fb2584f18fc1"/>
                            <a:da name="DEFAULT" value="0.01"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;99999999"/>
                                <a:tst expr="&gt;0.0"/>
                            </a:da>
                        </v:var>
                        <v:var name="CryptoMulticoreSupport" type="BOOLEAN">
                            <a:a name="LABEL" value="Crypto Multicore Support"/>
                            <a:a name="EDITABLE" type="XPath" expr="ecu:get('Crypto.Multicore') = 'STD_ON'"/>
                            <a:a name="DESC">
                                <a:v><![CDATA[EN:
                                    <html>
                                        Vendor specific: Enables/Disables Multicore Support.
                                    </html>
                                ]]></a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:dde77254-fdc0-4af6-a0ae-3963c88e9c98"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:da name="INVALID" type="XPath">
                                <a:tst expr="(node:value(.) = 'false') and (num:i(count(../CryptoEcucPartitionRef/*)) &gt; 0)" true="When Crypto Multicore Support is disabled, no CryptoEcucPartitionRef should be configured."/>
                                <a:tst expr="(node:value(.) = 'true')  and (num:i(count(../CryptoEcucPartitionRef/*)) &lt; 1)" true="When Crypto Multicore Support is enabled, at least one CryptoEcucPartitionRef need be configured."/>
                            </a:da>
                        </v:var>
                        <v:var name="CsecIpDevErrorDetect" type="BOOLEAN">
                            <a:a name="LABEL" value="CSEc Ip DevErrorDetect"/>
                            <a:a name="DESC" value="EN: Vendor specific: Switches the CSEc Ip layer development error detection on or off."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:1a0fef6b-ff21-1fa8-b2db-0ac159b82c69"/>
                            <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="CryptoTimeoutMethod" type="ENUMERATION">
                            <a:a name="LABEL" value="Timeout Counter Type"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html><p>
                                            Vendor specific: Counter type used in timeout detection for CSEc service request.<br>
                                            Based on selected counter type the timeout value will be interpreted as follows:<br>
                                            OSIF_COUNTER_DUMMY  - Ticks.<br>
                                            OSIF_COUNTER_SYSTEM - Microseconds.<br>
                                            OSIF_COUNTER_CUSTOM - Defined by user implementation of timing services<br>
                                            Note: If OSIF_COUNTER_SYSTEM or OSIF_COUNTER_CUSTOM are selected make sure the corresponding timer is enabled in OsIf General configuration.
                                        </p></html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:2b1fef6b-ff21-1fa8-b2db-0ac159b82c69"/>
                            <a:da name="DEFAULT" value="OSIF_COUNTER_DUMMY"/>
<!--
    Note: Elektrobit Automotive GmbH modified the original code provided
        by the third party supplier. The modification is provided for
        convenience.
        Please use the modification on your discretion and account, or
        use the unmodified files provided with this distribution. 
  Please see for the reasons in the file ImportantNotes.txt for tag

ASCFREESCL-1155 - Change Base module name to BaseNXP-->
                            <a:da name="INVALID" type="XPath">
                                <a:tst expr="node:refs('ASPathDataOfSchema:/TS_T40D2M10I1R0/BaseNXP/OsIfGeneral/OsIfUseCustomTimer') = 'false' and node:fallback(.,'OSIF_COUNTER_DUMMY') = 'OSIF_COUNTER_CUSTOM'" true="Custom Timer is not enabled in OsIf (OsIfGeneral/OsIfUseCustomTimer checkbox)"/>
                                <a:tst expr="node:refs('ASPathDataOfSchema:/TS_T40D2M10I1R0/BaseNXP/OsIfGeneral/OsIfUseSystemTimer') = 'false' and node:fallback(.,'OSIF_COUNTER_DUMMY') = 'OSIF_COUNTER_SYSTEM'" true="System Timer is not enabled in OsIf (OsIfGeneral/OsIfUseSystemTimer checkbox)"/>
                            </a:da>
                            <a:da name="RANGE">
                                <a:v>OSIF_COUNTER_DUMMY</a:v>
                                <a:v>OSIF_COUNTER_SYSTEM</a:v>
                                <a:v>OSIF_COUNTER_CUSTOM</a:v>
                            </a:da>
                        </v:var>
                        <v:var name="CsecTimeoutDuration" type="INTEGER">
                            <a:a name="LABEL" value="Csec Timeout"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html><p>
                                            Vendor specific: Timeout duration defines the waiting period for CSEc to respond to a synchronous request initiated by Crypto driver.<br>
                                            Based on selected counter type (Timeout Counter Type) the measuring unit will be determined as shown below:<br>
                                            OSIF_COUNTER_DUMMY  - Csec Timeout is interpreted as ticks.<br>
                                            OSIF_COUNTER_SYSTEM - Csec Timeout is interpreted as microseconds.<br>
                                            OSIF_COUNTER_CUSTOM - Csec Timeout is interpreted as defined by user implementation of timing services<br>
                                        </p></html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:89cf6b41-1e18-4786-9376-e471db9a4f66"/>
                            <a:da name="DEFAULT" value="1000000000"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=4294967295"/>
                                <a:tst expr="&gt;0"/>
                            </a:da>
                        </v:var>
                        <v:var name="CryptoJobKeyManagement" type="BOOLEAN">
                            <a:a name="LABEL" value="Enable Job Key Management Support"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html><p>
                                            Vendor specific: Switch for enabling/disabling the support in Crypto driver for the Crypto_ProcessJob() service to process key management related primitives.
                                                             The key management services that can be processed by Cypto_ProcessJob() when this switch is enabled are:
                                            <ul>
                                                <li>RandomSeed</li>
                                                <li>KeyGenerate</li>
                                                <li>KeyDerive</li>
                                                <li>KeyExchangeCalcPubVal</li>
                                                <li>KeyExchangeCalcSecret</li>
                                                <li>CertificateParse</li>
                                                <li>CertificateVerify</li>
                                                <li>KeySetValid</li>
                                             </ul>
                                            </p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:2b0fef6b-ff21-1fa8-b2db-0ac159b82c59"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:a name="EDITABLE" type="XPath" expr="node:exists(../../CryptoKeys)"/>
                        </v:var>
                        <v:var name="CryptoEnableRedirection" type="BOOLEAN">
                            <a:a name="LABEL" value="Enable redirection support"/>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html><p>
                                                Vendor specific: The input and/or output data of a job can be re-directed to a key element.
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:af010ef6c-e42e-48af-82d8-5ac85f682c5f"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:a name="EDITABLE" type="XPath" expr="false"/>
                        </v:var>
                        <!--  @implements CryptoEnableUserModeSupport_Object  -->
                        <v:var name="CryptoEnableUserModeSupport" type="BOOLEAN">
                            <a:a name="LABEL" value="Enable User Mode Support"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:<html>
                                        Vendor specific: When this parameter is enabled, the Crypto module will adapt to run from User Mode, with the following measures:<p/>
                                        Using 'call trusted function' stubs for all internal function calls that access registers requiring supervisor mode.<p/>
                                        for more information, please see chapter User Mode Support in IM <p/>
                                    </html>]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:2d37b26f-6ab3-4635-b20b-b616fg579f1c"/>
                            <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="CryptoAlternateJobKeyMapping" type="BOOLEAN">
                            <a:a name="LABEL" value="Enable Alternate Mapping of Crypto Job Key"/>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html><p>
                                            Vendor specific: Switch for enabling/disabling the support in Crypto driver for reading the key related information of Csm jobs from an alternate location.<br><br>
                                            When enabled, the Crypto driver will read the key related information of Csm jobs from an alternate location which is the cryptoKeyId member of the Crypto_JobType structure. The presence of the cryptoKeyId member in the Crypto_JobType structure is not reqeusted by Autosar 4.4. Because of this reason, care must be taken to enable this boolean only if the CSM layer that is part of the same crypto stack with the current Crypto driver declares the cryptoKeyId as member of Crypto_JobType structure.<br><br>
                                            When disabled, the Crypto driver will read the key related information of Csm jobs from the cryIfKeyId member of Crypto_JobPrimitiveInfoType substructure of the Crypto_JobType structure, following the specification of Autosar 4.4 standard.<br>
                                        </p></html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:bb010ef6c-e42e-48af-82d8-5ac85f682c51"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:a name="EDITABLE" type="XPath" expr="node:exists(../../CryptoKeys)"/>
                        </v:var>
                        <v:var name="CryptoAsyncJobProcessMethod" type="ENUMERATION">
                            <a:a name="LABEL" value="Asynchronous Process Method"/>
                            <a:a name="DESC" value="EN: Vendor specific: Selects one of the process methods for asynchronous jobs."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="UUID" value="ECUC:3acf241f-a1e0-1932-3f05-1b161c464317"/>
                            <a:da name="DEFAULT" value="POLLING"/>
                            <a:da name="RANGE">
                                <a:v>INTERRUPT</a:v>
                                <a:v>POLLING</a:v>
                            </a:da>
                        </v:var>
                        <v:var name="CryptoUpdateNvramBlobHandler" type="FUNCTION-NAME">
                            <a:a name="LABEL" value="Update Nvram Blob Handler"/>
                            <a:a name="EDITABLE" type="XPath" expr="node:exists(../../CryptoKeyElements) = 'true'"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html><p>
                                            Vendor specific: Crypto driver works with 2 blobs of information that should be kept persistent across resets. One blob contains information about key validity flags, while the second contains information about lengths of key elements and actual values of the ones marked as persistent. There are 2 cases for handling this information:
                                            <ol>
                                                <li>The blobs are stored inside Crypto driver.</li>
                                                <li>The blobs are stored in the upper layer.</li>
                                             </ol>
                                            </p>
                                            <p>1. In order to use this option, do not enable the optional attribute 'Update Nvram Blob Handler'.
                                            <br>Given the fact that Crypto driver has no support for working with non volatile memory, in this case the information in the blobs will not be persistent across resets.</p>
                                            <p>2. In order to use this option, please enable the optional attribute 'Update Nvram Blob Handler' and set it's value to a valid C function name.
                                            <br>When using this option, the upper layer will have to:</p>
                                            <ul>
                                                <li>Declare a variable: uint8 Crypto_au8NvramBlob0[CRYPTO_SIZEOF_NVRAM_BLOB_0];</li>
                                                <li>Declare a variable: uint8 Crypto_au8NvramBlob1[CRYPTO_SIZEOF_NVRAM_BLOB_1];</li>
                                                <li>Implement in the code the body of a function having:
                                                    <ul>
                                                        <li>The name given in the attribute 'Update Nvram Blob Handler'.</li>
                                                        <li>The following prototype: Std_ReturnType <Function name>(uint32 u32BlobId, uint32 u32BlobLength)</li>
                                                     </ul>
                                                </li>
                                                <li>Add code in the body of the function above that will save in non volatile memory the content of either Crypto_au8NvramBlob0[] or Crypto_au8NvramBlob1[] arrays, depending on the value of the u32BlobId received parameter, CRYPTO_NVRAM_BLOB_0_ID for the keyValid blob or CRYPTO_NVRAM_BLOB_1_ID for persistent Crypto Key Elements. The function should return E_OK if the Nvram save operation was successful and E_NOT_OK otherwise.</li>
                                             </ul>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:0811922f-0a7a-45c8-a83d-46c8b88425e2"/>
                            <a:da name="DEFAULT" value="Crypto_UpdateNvramBlob"/>
                            <a:da name="INVALID" type="XPath">
                                <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                             (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                             (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                             (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                             (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                   true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                            </a:da>
                        </v:var>

                        <v:lst name="CryptoEcucPartitionRef">
                            <v:ref name="CryptoEcucPartitionRef" type="REFERENCE">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                        <html>
                                        <p>Maps the Crypto driver to zero a multiple ECUC partitions to make the modules API available in this partition.</p>
                                        </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="ECU"/>
                                <a:a name="UUID" value="ECUC:d25b8f2d-8e45-474a-a99a-0ff567bb5a9b"/>
                                <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:uniq(../*,.)" false="Duplicated CryptoEcucPartitionRef, each partition reference must be unique!"/>
                                </a:da>
                            </v:ref>
                        </v:lst>

                        <a:da name="INVALID" type="XPath">
                            <a:tst expr="(
                                     ( node:exists(../CryptoKeyElements) and node:exists(../CryptoKeyTypes) and node:exists(../CryptoKeys) )
                                     )
                                     or
                                     (
                                     (not(node:exists(../CryptoKeyElements)) and not( node:exists(../CryptoKeyTypes) ) and not(node:exists(../CryptoKeys) ) )
                                      )"
                                false="Containers CryptoKeys, CryptoKeyTypes and CryptoKeyElements must be simultaneously enabled or disabled."/>
                            <a:tst expr="node:exists(./CryptoUpdateNvramBlobHandler) and not(node:exists(../CryptoKeys))"
                                true="Attribute 'Update Nvram Blob Handler' can only be enabled when containers CryptoKeys, CryptoKeyTypes and CryptoKeyElements are simultaneously enabled."/>
                        </a:da>
                    </v:ctr>

                    <!-- @implements CryptoKeyElements_Object -->
                    <v:ctr name="CryptoKeyElements" type="IDENTIFIABLE">
                        <a:a name="DESC" value="EN: Container for Crypto key elements"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" value="ECUC:12e782b3-2472-35c3-ab7c-af0d09a76f7c"/>

                        <v:lst name="CryptoKeyElement" type="MAP">
                            <a:da name="MIN" value="1"/>

                            <!-- @implements CryptoKeyElement_Object -->
                            <v:ctr name="CryptoKeyElement" type="IDENTIFIABLE">
                                <a:a name="DESC" value="EN: Configuration of a CryptoKeyElement"/>
                                <a:a name="UUID" value="ECUC:4f141b28-1b14-ac92-307a-af95a3ab604b"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>

                                <!-- @implements CryptoKeyElementAllowPartialAccess_Object -->
                                <v:var name="CryptoKeyElementAllowPartialAccess" type="BOOLEAN">
                                    <a:a name="DESC" value="EN: Enable or disable writing and reading the key element with data smaller than the size of the element."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:f546ad2f-2663-ccdc-c688-c056e29c4f51"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>
                                <!-- @implements CryptoKeyElementFormat_Object -->
                                <v:var name="CryptoKeyElementFormat" type="ENUMERATION">
                                    <a:a name="DESC" value="EN: Defines the format for the key element. This is the format used to provide or extract the key data from the driver."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:4f151295-ba3b-562c-a95f-634a72bd71f4"/>
                                    <a:da name="RANGE">
                                        <a:v>CRYPTO_KE_FORMAT_BIN_SHEKEYS</a:v>
                                        <a:v>CRYPTO_KE_FORMAT_BIN_OCTET</a:v>
                                    </a:da>
                                    <a:da name="DEFAULT" value="CRYPTO_KE_FORMAT_BIN_SHEKEYS"/>
                                </v:var>
                                <!-- @implements CryptoKeyElementId_Object -->
                                <v:var name="CryptoKeyElementId" type="INTEGER">
                                    <a:a name="DESC" value="EN: Identifier of the CRYPTO key element."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                    <a:a name="UUID" value="ECUC:a2b13c50-2cf0-680d-a7f4-aa61605e57eb"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="node:value(../UseCsecKey) = 'false' and node:value(.) = 1"
                                               true="Crypto Key Elements with CryptoKeyElementId set to 1 (KeyMaterial) can only be stored inside CSEc, so the checkbox 'Use CSEc Key' should be checked."/>
                                        <a:tst expr="node:value(../UseCsecKey) = 'true' and node:value(.) != 1"
                                               true="Only Crypto Key Elements with CryptoKeyElementId set to 1 (KeyMaterial)can be stored inside CSEc, so the checkbox 'Use CSEc Key' should be unchecked."/>
                                    </a:da>
                                    <a:da name="DEFAULT" value="1"/>
                                </v:var>
                                <!-- @implements CryptoKeyElementInitValue_Object -->
                                <v:var name="CryptoKeyElementInitValue" type="STRING">
                                    <a:a name="EDITABLE" type="XPath" expr="node:value(../UseCsecKey) = 'false'"/>
                                    <a:a name="DESC" value="EN: Value which will be used to fill the element during initialization. This node is a hexadecimal string. Please use an even number of 0-9 a-f A-F characters, without spaces. If this field is configured, it should have a number of bytes smaller or equal to CryptoKeyElementSize field."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:67b3490e-235a-4b88-be20-a306c57fd0b9"/>
                                    <a:da name="DEFAULT" value=""/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                               (text:match(normalize-space(.),'^[0-9a-fA-F]*$')) and
                                               (num:i(string-length(node:current())) &lt; ((2 * num:i(node:value(../CryptoKeyElementSize)))) + 1) and
                                               (num:i(string-length(node:current())) mod 2 = 0)
                                              )"
                                                false="This node is a hexadecimal string. Please use an even number of 0-9 a-f A-F characters, without spaces. If this field is configured, it should have a number of bytes smaller or equal to CryptoKeyElementSize field."/>
                                        <a:tst expr="(node:value(../UseCsecKey) = 'true') and (num:i(string-length(../CryptoKeyElementInitValue)) > 0)"
                                                true="Vendor specific: When Use CSEc Key is enabled CryptoKeyElementInitValue must be empty."/>
                                    </a:da>
                                </v:var>
                                <!-- @implements CryptoKeyElementPersist_Object -->
                                <v:var name="CryptoKeyElementPersist" type="BOOLEAN">
                                    <a:a name="EDITABLE" type="XPath" expr="node:value(../UseCsecKey) = 'false'"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html><p>
                                                    Enables or disables the storage of the key element value in the non-volatile memory. This functionality behaves like described below:
                                                    <ul>
                                                        <li>If the checkbox 'Use CSEc key' is checked, the value in the checkbox 'CryptoKeyElementPersist' is ignored and the key element value will be stored inside CSEc.</li>
                                                        <li>If the checkbox 'Use CSEc key' is not checked, the value in the checkbox 'CryptoKeyElementPersist' is considered and:</li>
                                                        <ul>
                                                            <li>If the checkbox 'CryptoKeyElementPersist' is checked, the key element will be persistent, stored in a Crypto driver blob.</li>
                                                            <li>If the checkbox 'CryptoKeyElementPersist' is not checked, the key element will be non-persistent, stored in an internal Crypto driver RAM buffer.</li>
                                                        </ul>
                                                     </ul>
                                                    </p>
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:ffe529e1-83f5-ada2-5253-6d657b86c37e"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>
                                <!-- @implements CryptoKeyElementReadAccess_Object -->
                                <v:var name="CryptoKeyElementReadAccess" type="ENUMERATION">
                                    <a:a name="DESC" value="EN: Define the reading access rights of the key element."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:afe552f0-72a8-9627-3c61-27a0c5f1598e"/>
                                    <a:da name="DEFAULT" value="CRYPTO_RA_ENCRYPTED"/>
                                    <a:da name="RANGE">
                                        <a:v>CRYPTO_RA_ALLOWED</a:v>
                                        <a:v>CRYPTO_RA_DENIED</a:v>
                                        <a:v>CRYPTO_RA_ENCRYPTED</a:v>
                                        <a:v>CRYPTO_RA_INTERNAL_COPY</a:v>
                                    </a:da>
                                </v:var>
                                <!-- @implements CryptoKeyElementSize_Object -->
                                <v:var name="CryptoKeyElementSize" type="INTEGER">
                                    <a:a name="DESC" value="EN: Maximum size of the Crypto Key Element value, in bytes. Will be used by Crypto driver to reserve internal memory for those Crypto Key Elements that do not use a CSEc key."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2e48d0b6-3cea-b4db-a525-317aba2b4f1f"/>
                                    <a:da name="DEFAULT" value="16"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=1"/>
                                    </a:da>
                                </v:var>
                                <!-- @implements CryptoKeyElementWriteAccess_Object -->
                                <v:var name="CryptoKeyElementWriteAccess" type="ENUMERATION">
                                    <a:a name="DESC" value="EN: Defines the writing access rights of the key element"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:22f68509-a888-5612-bf42-b1d511d98213"/>
                                    <a:da name="RANGE">
                                        <a:v>CRYPTO_WA_ALLOWED</a:v>
                                        <a:v>CRYPTO_WA_DENIED</a:v>
                                        <a:v>CRYPTO_WA_ENCRYPTED</a:v>
                                        <a:v>CRYPTO_WA_INTERNAL_COPY</a:v>
                                    </a:da>
                                    <a:da name="DEFAULT" value="CRYPTO_WA_ENCRYPTED"/>
                                </v:var>
                                <!-- @implements CryptoKeyElementVirtualTargetRef_Object -->
                                <v:ref name="CryptoKeyElementVirtualTargetRef" type="REFERENCE">
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="READONLY" value="true"/>
                                    <a:a name="DESC" value="EN: Refers to a key element which will contain the actual data. If the Reference is configured, the key element will be a virtual key element. Functionality not implemented in the current release."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:f128b1ba-d5af-fef2-12f6-fd2cbbf852ae"/>
                                    <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeyElements/CryptoKeyElement"/>
                                </v:ref>
                                <v:var name="UseCsecKey" type="BOOLEAN">
                                    <a:a name="LABEL" value="Use CSEc key"/>
                                    <a:a name="DESC" value="EN: Vendor specific: Enables or disables the usage of a CSEc key."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:ffe529e2-83f5-ada2-5253-6d657b86a37e"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>
                                <v:var name="CsecKeySlot" type="ENUMERATION">
                                    <a:a name="LABEL" value="CSEc Key Slot"/>
                                    <a:a name="EDITABLE" type="XPath" expr="node:value(../UseCsecKey) = 'true'"/>
                                    <a:a name="DESC" value="EN: Vendor specific: Slot of the key inside CSEc."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:BA2FBBA7-857D-1014-84FC-E405D4ED91DA"/>
                                    <a:da name="RANGE" type="XPath">
                                        <a:tst expr="0 = 0" true="CSEC_IP_MASTER_ECU_KEY"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_BOOT_MAC_KEY"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_BOOT_MAC"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_1"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_2"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_3"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_4"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_5"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_6"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_7"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_8"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_9"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_10"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_RAM_KEY"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_11"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_12"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_13"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_14"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_15"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_16"/>
                                        <a:tst expr="0 = 0" true="CSEC_IP_KEY_17"/>
                                        <a:tst expr="ecu:get('Crypto.FlashModule') = 'FTFM'" true="CSEC_IP_KEY_18"/>
                                        <a:tst expr="ecu:get('Crypto.FlashModule') = 'FTFM'" true="CSEC_IP_KEY_19"/>
                                        <a:tst expr="ecu:get('Crypto.FlashModule') = 'FTFM'" true="CSEC_IP_KEY_20"/>
                                    </a:da>
                                    <a:da name="DEFAULT" value="CSEC_IP_MASTER_ECU_KEY"/>
                                </v:var>
                            </v:ctr>
                        </v:lst>
                    </v:ctr>

                    <!-- @implements CryptoKeyTypes_Object -->
                    <v:ctr name="CryptoKeyTypes" type="IDENTIFIABLE">
                        <a:a name="DESC" value="EN: Container for CRYPTO key types"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" value="ECUC:f4aad910-a3a3-bede-caa2-73b26564c5d6"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>

                        <v:lst name="CryptoKeyType" type="MAP">
                            <a:da name="MIN" value="1"/>

                            <!-- @implements CryptoKeyType_Object -->
                            <v:ctr name="CryptoKeyType" type="IDENTIFIABLE">
                                <a:a name="DESC" value="EN: Configuration of a CryptoKeyType"/>
                                <a:a name="UUID" value="ECUC:a0a54a5d-02b5-4370-94bf-5cgea7a083a9"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>

                                <v:lst name="CryptoKeyElementRef">
                                    <a:da name="MIN" value="1"/>

                                    <!-- @implements CryptoKeyElementRef_Object -->
                                    <v:ref name="CryptoKeyElementRef" type="REFERENCE">
                                        <a:a name="DESC" value="EN: Refers to a Crypto Key Element, which holds the data of the Crypto Key Element."/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="UUID" value="ECUC:2346dd86-a467-263a-aa0c-0ad997b5c7d2"/>
                                        <a:da name="REF"
                                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeyElements/CryptoKeyElement"/>
                                        <a:da name="RANGE" type="XPath">
                                            <a:tst expr="node:paths(../../CryptoKeyElement/*)"/>
                                        </a:da>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="node:refvalid(.)" false="The configured node does not exist or may not be referenced."/>
                                            <a:tst expr="text:uniq(text:split(node:refs(../../CryptoKeyElementRef/*)/CryptoKeyElementId),node:ref(.)/CryptoKeyElementId)"
                                                   false="A reference to a CryptoKeyElement with the same CryptoKeyElementId already exists in the reference list"/>
                                        </a:da>
                                    </v:ref>
                                </v:lst>
                            </v:ctr>
                        </v:lst>
                    </v:ctr>

                    <!-- @implements CryptoKeys_Object -->
                    <v:ctr name="CryptoKeys" type="IDENTIFIABLE">
                        <a:a name="DESC" value="EN: Container for CRYPTO keys"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" value="ECUC:f1a40c6f-c025-237f-fa5f-2930cf00860d"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <v:lst name="CryptoKey" type="MAP">
                            <a:da name="MIN" value="1"/>

                            <!-- @implements CryptoKey_Object -->
                            <v:ctr name="CryptoKey" type="IDENTIFIABLE">
                                <a:a name="DESC" value="EN: Configuration of a CryptoKey"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:1d39e0f2-fa70-1f0f-f2b9-f291a72100f5"/>

                                <!-- @implements CryptoKeyId_Object -->
                                <v:var name="CryptoKeyId" type="INTEGER">
                                    <a:a name="DESC" value="EN: Identifier of the Crypto Driver key."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                    <a:a name="UUID" value="ECUC:f2278a6b-aced-df17-e676-1f68b1a68cf6"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="text:uniq(../../*/CryptoKeyId, .)" false="Duplicated value, CryptoKeyId must be unique."/>
                                        <a:tst expr="(node:value(.) > num:i(count(../../*/.)) - 1)" true="CryptoKeyId is out of range. Maximum value is given by the number of keys in the list minus 1."/>
                                    </a:da>
                                    <a:da name="DEFAULT" type="XPath" expr="num:i(node:fallback(node:current()/../@index, num:i(0)))" />
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>
                                <!-- @implements CryptoKeyTypeRef_Object -->
                                <v:ref name="CryptoKeyTypeRef" type="REFERENCE">
                                    <a:a name="DESC" value="EN: Refers to a pointer in the CRYPTO to a CryptoKeyType. The CryptoKeyType provides the information about which key elements are contained in a CryptoKey."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:a18f7fcd-cb36-f8c7-a08e-7b1bd421bf18"/>
                                    <a:da name="REF"
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Crypto/CryptoKeyTypes/CryptoKeyType"/>
                                    <a:da name="RANGE" type="XPath">
                                        <a:tst expr="node:paths(../CryptoKeyType/*)"/> <!-- Select for reference only the options available inside the CryptoKeyType -->
                                    </a:da>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="node:refvalid(.)" false="The configured node does not exist or may not be referenced."/>
                                    </a:da>
                                </v:ref>
                            </v:ctr>
                        </v:lst>
                    </v:ctr>

                    <v:lst name="CryptoPrimitives" type="MAP">

                        <!-- @implements CryptoPrimitives_Object -->
                        <v:ctr name="CryptoPrimitives" type="IDENTIFIABLE">
                            <a:a name="DESC" value="EN: Container for CRYPTO primitives"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:108c731d-26b3-f933-ff9d-111ccf980357"/>

                            <v:lst name="CryptoPrimitive" type="MAP">

                                <!-- @implements CryptoPrimitive_Object -->
                                <v:ctr name="CryptoPrimitive" type="IDENTIFIABLE">
                                    <a:a name="DESC" value="EN: Configuration of a CryptoPrimitive"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:f11cd06f-daa9-c291-bb05-9c25d08d52f3"/>

                                    <!-- @implements CryptoPrimitiveAlgorithmFamily_Object -->
                                    <v:var name="CryptoPrimitiveAlgorithmFamily" type="ENUMERATION">
                                        <a:a name="DESC" value="EN: Determines the algorithm family used for the crypto service"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:91a3ac29-c9cf-fe7c-d722-16334b01c1f9"/>
                                        <a:da name="RANGE">
                                            <a:v>CRYPTO_ALGOFAM_NOT_SET</a:v>
                                            <a:v>CRYPTO_ALGOFAM_AES</a:v>
                                            <a:v>CRYPTO_ALGOFAM_RNG</a:v>
                                            <a:v>CRYPTO_ALGOFAM_CUSTOM</a:v>
                                        </a:da>
                                        <a:da name="DEFAULT" value="CRYPTO_ALGOFAM_AES"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(
                                                       (
                                                        (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'ENCRYPT') or
                                                        (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'DECRYPT')
                                                        )
                                                        and
                                                        (
                                                          (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_AES') and
                                                          (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_CUSTOM')
                                                        )
                                                       )"
                                              true="ENCRYPT and DECRYPT support: CRYPTO_ALGOFAM_AES, CRYPTO_ALGOFAM_CUSTOM."/>
                                            <a:tst expr="(
                                                        (
                                                          (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'MAC_GENERATE') or
                                                          (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'MAC_VERIFY')
                                                        )
                                                        and
                                                        (
                                                          (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_AES') and
                                                          (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_CUSTOM')
                                                        )
                                                       )"
                                              true="MAC_GENERATE, MAC_VERIFY support: CRYPTO_ALGOFAM_AES, CRYPTO_ALGOFAM_CUSTOM."/>
                                            <a:tst expr="(
                                                        (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'RANDOM')
                                                        and
                                                        (
                                                        (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_NOT_SET') and
                                                        (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_RNG') and
                                                        (node:fallback(., 'CRYPTO_ALGOFAM_AES') != 'CRYPTO_ALGOFAM_CUSTOM')
                                                        )
                                                       )"
                                              true="For RANDOM please choose CRYPTO_ALGOFAM_RNG, CRYPTO_ALGOFAM_NOT_SET, CRYPTO_ALGOFAM_CUSTOM"/>
                                        </a:da>
                                    </v:var>
                                    <!-- @implements CryptoPrimitiveAlgorithmMode_Object -->
                                    <v:var name="CryptoPrimitiveAlgorithmMode" type="ENUMERATION">
                                        <a:a name="DESC" value="EN: Determines the algorithm mode used for the crypto service"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:f1fbbf040-2c0b-c95a-dde3-1f9341102e40"/>
                                        <a:da name="RANGE">
                                            <a:v>CRYPTO_ALGOMODE_NOT_SET</a:v>
                                            <a:v>CRYPTO_ALGOMODE_ECB</a:v>
                                            <a:v>CRYPTO_ALGOMODE_CBC</a:v>
                                            <a:v>CRYPTO_ALGOMODE_CMAC</a:v>
                                            <a:v>CRYPTO_ALGOMODE_CTRDRBG</a:v>
                                            <a:v>CRYPTO_ALGOMODE_CUSTOM</a:v>
                                        </a:da>
                                        <a:da name="DEFAULT" value="CRYPTO_ALGOMODE_ECB"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'RANDOM')
                                                            and
                                                            (
                                                            (node:fallback(., 'CRYPTO_ALGOMODE_NOT_SET') != 'CRYPTO_ALGOMODE_CTRDRBG')
                                                            )
                                                           )"
                                                  true="For RANDOM please choose CRYPTO_ALGOMODE_CTRDRBG"/>
                                            <a:tst expr="(
                                                           (
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'ENCRYPT') or
                                                            (node:fallback(../CryptoPrimitiveService, 'DECRYPT') = 'DECRYPT')
                                                            )
                                                            and
                                                            (node:fallback(../CryptoPrimitiveAlgorithmFamily, 'CRYPTO_ALGOFAM_AES') = 'CRYPTO_ALGOFAM_AES')
                                                            and
                                                            (
                                                                (node:fallback(., 'CRYPTO_ALGOMODE_NOT_SET') != 'CRYPTO_ALGOMODE_CBC') and
                                                                (node:fallback(., 'CRYPTO_ALGOMODE_NOT_SET') != 'CRYPTO_ALGOMODE_ECB')
                                                            )
                                                           )"
                                                  true="For ENCRYPT/DECRYPT AES mode please select ECB, CBC."/>
                                            <a:tst expr="(
                                                           (
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'MAC_GENERATE') or
                                                            (node:fallback(../CryptoPrimitiveService, 'DECRYPT') = 'MAC_VERIFY')
                                                            )
                                                            and
                                                            (
                                                            (node:fallback(../CryptoPrimitiveAlgorithmFamily, 'CRYPTO_ALGOFAM_3DES') = 'CRYPTO_ALGOFAM_AES')
                                                            )
                                                            and
                                                            (
                                                                (node:fallback(., 'CRYPTO_ALGOMODE_NOT_SET') != 'CRYPTO_ALGOMODE_CMAC') and
                                                                (node:fallback(., 'CRYPTO_ALGOMODE_NOT_SET') != 'CRYPTO_ALGOMODE_CUSTOM') and
                                                                (node:fallback(., 'CRYPTO_ALGOMODE_NOT_SET') != 'CRYPTO_ALGOMODE_NOT_SET')
                                                            )
                                                           )"
                                                  true="For MAC_GENERATE or MAC_VERIFY, AES, please select: CRYPTO_ALGOMODE_CMAC, CRYPTO_ALGOMODE_CUSTOM, CRYPTO_ALGOMODE_NOT_SET as CryptoPrimitiveAlgorithmMode."/>
                                        </a:da>
                                    </v:var>
                                    <!-- @implements CryptoPrimitiveAlgorithmSecondaryFamily_Object -->
                                    <v:var name="CryptoPrimitiveAlgorithmSecondaryFamily" type="ENUMERATION">
                                        <a:a name="DESC" value="EN: Determines the algorithm secondary family used for the crypto service"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:1a685378-2161-c115-fadf-288284948e9d"/>
                                        <a:da name="RANGE">
                                            <a:v>CRYPTO_ALGOFAM_NOT_SET</a:v>
                                            <a:v>CRYPTO_ALGOFAM_AES</a:v>
                                            <a:v>CRYPTO_ALGOFAM_RNG</a:v>
                                            <a:v>CRYPTO_ALGOFAM_CUSTOM</a:v>
                                        </a:da>
                                        <a:da name="DEFAULT" value="CRYPTO_ALGOFAM_NOT_SET"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(
                                                           (
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'ENCRYPT') or
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'DECRYPT') or
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'RANDOM') or
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'MAC_GENERATE') or
                                                            (node:fallback(../CryptoPrimitiveService, 'ENCRYPT') = 'MAC_VERIFY')
                                                            )
                                                            and
                                                            (
                                                            (node:fallback(., 'CRYPTO_ALGOFAM_NOT_SET') != 'CRYPTO_ALGOFAM_NOT_SET') and
                                                            (node:fallback(., 'CRYPTO_ALGOFAM_NOT_SET') != 'CRYPTO_ALGOFAM_CUSTOM')
                                                            )
                                                           )"
                                                  true="For ENCRYPT, DECRYPT, RANDOM, MAC_GENERATE, MAC_VERIFY please choose CRYPTO_ALGOFAM_NOT_SET, CRYPTO_ALGOFAM_CUSTOM for CryptoPrimitiveAlgorithmSecondaryFamily."/>
                                        </a:da>
                                    </v:var>
                                    <!-- @implements CryptoPrimitiveService_Object -->
                                    <v:var name="CryptoPrimitiveService" type="ENUMERATION">
                                        <a:a name="DESC" value="EN: Determines the crypto service used for defining the capabilities"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:15750a2c-a208-f203-fc10-202a104e0bbe"/>
                                        <a:da name="DEFAULT" value="ENCRYPT"/>
                                        <a:da name="RANGE">
                                            <a:v>ENCRYPT</a:v>
                                            <a:v>DECRYPT</a:v>
                                            <a:v>MAC_GENERATE</a:v>
                                            <a:v>MAC_VERIFY</a:v>
                                            <a:v>RANDOM</a:v>
                                        </a:da>
                                    </v:var>
                                </v:ctr>
                            </v:lst>
                        </v:ctr>
                    </v:lst>

                    <!-- @implements CommonPublishedInformation_Object -->
                    <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                        <a:a name="LABEL" value="Common Published Information"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[EN:
                                    <html>
                                    <p>Common container, aggregated by all modules. It contains published information about vendor and versions.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="UUID" value="ECUC:9956f1f1-bff6-45ea-a7e9-ccaa70599727"/>

                        <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="AUTOSAR Major Version"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Vendor specific: Major version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:66b8f123-9bf5-4365-a866-6c1beaaa2a9f"/>
                            <a:da name="DEFAULT" value="4"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=4"/>
                                <a:tst expr="&lt;=4"/>
                            </a:da>
                        </v:var>
                        <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Vendor specific: Minor version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:d21a16d5-553c-4da2-893d-11edcc80e3f2"/>
                            <a:da name="DEFAULT" value="4"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=4"/>
                                <a:tst expr="&lt;=4"/>
                            </a:da>
                        </v:var>
                        <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Vendor specific: Patch version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:b676214d-048d-4372-9e45-1120274094e9"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=0"/>
                                <a:tst expr="&lt;=0"/>
                            </a:da>
                        </v:var>
                        <v:var name="ModuleId" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="Numeric Module ID"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Vendor specific: Module ID of this module.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:81e50058-1c3a-464f-88c2-14534833f201"/>
                            <a:da name="DEFAULT" value="114"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=114"/>
                                <a:tst expr="&lt;=114"/>
                            </a:da>
                        </v:var>
                        <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="Software Major Version"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Major version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:f7e52441-a341-495d-a311-56319dbe48ab"/>
                            <a:da name="DEFAULT" value="1"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=1"/>
                                <a:tst expr="&lt;=1"/>
                            </a:da>
                        </v:var>
                        <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="Software Minor Version"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:9023bc4f-82f2-4011-bc46-6228805c7e78"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=0"/>
                                <a:tst expr="&lt;=0"/>
                            </a:da>
                        </v:var>
                        <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="Software Patch Version"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                           </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:16c1307a-4de3-4609-82f6-7e1100f78160"/>
                            <a:da name="DEFAULT" value="1"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=1"/>
                                <a:tst expr="&lt;=1"/>
                            </a:da>
                        </v:var>
                        <v:var name="VendorApiInfix" type="STRING_LABEL">
                            <a:a name="LABEL" value="Vendor Api Infix"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                        This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                                        &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                        E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                        This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.
                                        </p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                               <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:c2017351-3b3d-4fb6-b504-7792754b1fc2"/>
                            <a:da name="DEFAULT" value=""/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:da name="READONLY" value="true"/>
                        </v:var>
                        <v:var name="VendorId" type="INTEGER_LABEL">
                            <a:a name="LABEL" value="Vendor ID"/>
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:
                                        <html>
                                        <p>Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.</p>
                                        </html>
                                    ]]>
                                </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:6e8602ce-59d0-4f63-924d-3411dd0fbe7f"/>
                            <a:da name="DEFAULT" value="43"/>
                            <a:da name="INVALID" type="Range">
                                <a:tst expr="&gt;=43"/>
                                <a:tst expr="&lt;=43"/>
                            </a:da>
                        </v:var>
                    </v:ctr>

                    <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Crypto"/>
                </v:ctr>
            </d:chc>
        <d:chc name="Crypto_EcuParameterDefinition"
             type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
        <d:ctr type="AR-ELEMENT">
          <a:a name="UUID" value="ECUC:f23762d6-4749-4f48-a7b5-c2cb915659ca"/>
          <a:a name="DEF"
               value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
          <d:lst name="MODULE_REF">
            <d:ref type="MODULE_REF" value="ASPath:/TS_T40D2M10I1R0/Crypto"/>
          </d:lst>
        </d:ctr>
        </d:chc>
          <d:chc name="Crypto_ModuleDescription" type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
            <d:ctr type="AR-ELEMENT">
                <a:a name="DEF"
                    value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                <d:var name="MODULE_ID" type="INTEGER" >
                    <a:a name="EDITABLE" value="false"/>
                    <a:a name="IMPORTER_INFO" value="@DEF"/>
                </d:var>
                <d:ref type="RECOMMENDED_CONFIGURATION" >
                    <a:a name="EDITABLE" value="false"/>
                    <a:a name="IMPORTER_INFO" value="@DEF"/>
                </d:ref>
                <d:ref type="PRE_CONFIGURED_CONF" >
                    <a:a name="EDITABLE" value="false"/>
                    <a:a name="IMPORTER_INFO" value="@DEF"/>
                </d:ref>
                <d:ref type="VENDOR_SPECIFIC_MODULE_DEF"
                    value="ASPath:/TS_T40D2M10I1R0/Crypto"/>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>
</datamodel>

