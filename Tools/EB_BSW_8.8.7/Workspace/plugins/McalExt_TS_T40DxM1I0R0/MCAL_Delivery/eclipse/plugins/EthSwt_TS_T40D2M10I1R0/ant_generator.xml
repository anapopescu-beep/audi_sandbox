<?xml version="1.0" encoding="ISO-8859-1"?> <project name="tresos" default="all" basedir=".">

<!--
*   @file    ant_generator.xml
*   @version 1.0.1
*
*   @brief   AUTOSAR EthSwt_TS_T40D2M10I1R0 - Tresos Studio plugin documentation configuration file.
*   @details This file contains the links to the plugin documents for EthSwt Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : RTD AUTOSAR 4.4
*   Platform             : CORTEXM
*   Peripheral           : STUB
*   Dependencies         : 
*
*   Autosar Version      : 4.4.0
*   Autosar Revision     : ASR_REL_4_4_REV_0000
*   Autosar Conf.Variant :
*   SW Version           : 1.0.1
*   Build Version        : S32K1_RTD_1_0_1_D2202_ASR_REL_4_4_REV_0000_20220224
*
*   Copyright 2020-2022 NXP Semiconductors
*   NXP Confidential. This software is owned or controlled by NXP and may only be  used strictly in accordance with the applicable license terms.  By expressly  accepting such terms or by downloading, installing, activating and/or otherwise  using the software, you are agreeing that you have read, and that you agree to  comply with and are bound by, such license terms.  If you do not agree to be  bound by the applicable license terms, then you may not retain, install, activate or otherwise use the software.
====================================================================================================
====================================================================================================
====================================================================================================
-->

  <ng.getgeneratorvar name="outputDir" property="outputDirProp" />
  <ng.getgeneratorvar name="postBuildVariant" property="postBuildVariantProp"/>
     <target name="test.if.py.files.should.be.renamed">
      <condition property="shouldPyFilesBeRenamed" value="true" else="false">
        <and>
           <available file="${outputDirProp}\src" type="dir"/>
           <isset property="postBuildVariantProp"/>
           <not>
            <equals arg1="${postBuildVariantProp}" arg2=""/>
           </not>
        </and>   
    </condition>     
  </target>
  
  <target name="runPyFiles">
    <copy todir="${outputDirProp}\cfg">
        <fileset dir="cfg"/>
    </copy>
    <exec dir="${outputDirProp}\src" executable="python">
        <arg line="EthSwt_Cfg.py"/>
    </exec>
    <exec dir="${outputDirProp}\src" executable="python">
        <arg line="Switch_Ip_Cfg.py"/>
    </exec>
  </target>

  <target name="renamePyFiles" if="${shouldPyFilesBeRenamed}" depends="test.if.py.files.should.be.renamed">
    <move todir="${outputDirProp}\src">
        <fileset dir="${outputDirProp}\src">
            <include name="EthSwt_*configStream.c"/>
            <include name="Switch_Ip_configStream.c"/>
            <exclude name="EthSwt_*_configStream.c"/>
        </fileset>
        <mapper type="glob" from="*configStream.c" to="*${postBuildVariantProp}_configStream.c"/>
    </move>
    <move todir="${outputDirProp}\src">
        <fileset dir="${outputDirProp}\src">
            <include name="EthSwt_43_*configStream.c"/>
            <exclude name="EthSwt_43_*_*_configStream.c"/>
        </fileset>
        <mapper type="glob" from="*configStream.c" to="*${postBuildVariantProp}_configStream.c"/>
    </move> 
    
    <move todir="${outputDirProp}\src">
        <fileset dir="${outputDirProp}\src">
            <include name="EthSwt_*Cfg.py"/>
            <include name="Switch_Ip_Cfg.py"/>
            <exclude name="EthSwt_*_Cfg.py"/>
        </fileset>
        <mapper type="glob" from="*Cfg.py" to="*${postBuildVariantProp}_Cfg.py"/>
    </move>
    <move todir="${outputDirProp}\src">
        <fileset dir="${outputDirProp}\src">
            <include name="EthSwt_43_*Cfg.py"/>
            <exclude name="EthSwt_43_*_*_Cfg.py"/>
        </fileset>
        <mapper type="glob" from="*Cfg.py" to="*${postBuildVariantProp}_Cfg.py"/>
    </move> 
  </target>
  
  <target name="test.if.src.files.should.be.renamed">
      <condition property="shouldSrcFilesBeRenamed" value="true" else="false">
        <and>
           <available file="${outputDirProp}\src" type="dir"/>
           <isset property="postBuildVariantProp"/>
           <not>
            <equals arg1="${postBuildVariantProp}" arg2=""/>
           </not>
        </and>   
    </condition>     
  </target>

  <target name="test.if.include.files.should.be.renamed">
    <condition property="shouldIncludeFilesBeRenamed" value="true"  else="false">
        <and>
           <available file="${outputDirProp}\include" type="dir"/>
           <isset property="postBuildVariantProp"/>
           <not>
            <equals arg1="${postBuildVariantProp}" arg2=""/>
           </not>
        </and>   
    </condition> 
  </target>

    <target name="renameSrcFiles" if="${shouldSrcFilesBeRenamed}" depends="test.if.src.files.should.be.renamed">
    <move todir="${outputDirProp}\src">
        <fileset dir="${outputDirProp}\src">
            <filename regex="((CDD_)?EthSwt_PBcfg|(CDD_)?EthSwt_Ipw_PBcfg|.*_Ip_PBcfg).c"/>
        </fileset>
        <mapper type="glob" from="*PBcfg.c" to="*${postBuildVariantProp}_PBcfg.c"/>
    </move>
  </target>

  <target name="renameIncludeFiles" if="${shouldIncludeFilesBeRenamed}" depends="test.if.include.files.should.be.renamed">
    <move todir="${outputDirProp}\include">
        <fileset dir="${outputDirProp}\include">  
            <filename regex="((CDD_)?EthSwt_PBcfg|(CDD_)?EthSwt_Ipw_PBcfg|.*_Ip_PBcfg).h"/>
        </fileset>
        <mapper type="glob" from="*PBcfg.h" to="*${postBuildVariantProp}_PBcfg.h"/>
    </move>
  </target>
  
  <target name="all" depends="renameSrcFiles,renameIncludeFiles,runPyFiles,renamePyFiles">

  </target>
</project>

