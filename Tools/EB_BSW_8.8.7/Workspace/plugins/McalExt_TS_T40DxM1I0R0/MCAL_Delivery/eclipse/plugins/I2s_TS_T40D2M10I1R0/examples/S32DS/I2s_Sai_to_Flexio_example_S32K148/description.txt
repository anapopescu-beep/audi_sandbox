/*!
    @page cdd_i2s_example_group CDD_I2s Transfer
    @brief Example application showing CDD_I2s usage

    ## Application description ##
    _____
    The purpose of this demo application is to show the usage of the I2s driver found on the S32K148 SoC SAI IP and Flexio I2s Ip.

    The application uses SAI driver to make a data transfer of a defined size. SAI 0 instance shall be master and Flexio_I2s shall be slave.
    User can see other settings for SAI 0 and Flexio_I2s in S32 Configuration tool.
    To check if data is transfered correctly, put break point or let program run for about 2 seconds, then see if RecvData content is the same as SendData.

    How the example works:
    - If all conditions are correct, the code goes to the end of program with the status flag bStatus is TRUE

    The application includes a S32DS project that configures the Mcu, Port and Platform drivers.

    The application software functionality:
    - Mcu_Init, Mcu_InitClock, Mcu_SetMode
        Initialize the clock sources, the clock tree and to configure the clock gating of the peripherals.
    - OsIf_Init
        Initialize the OsIf for SAI internal delay.
    - Platform_Init
        Initialize the interrupt controller and to apply the interrupt configuration according to the Platform configuration.
    - Platform_SetIrq
        Enables interrupt request of Sai and Flexio.
    - Platform_InstallIrqHandler
        Install the ISR for the Sai and Flexio.
    - Port_Init
        Initialize Port pins for Sai instance and Flexio Channel.
    - I2s_Init
        Initialization of I2S driver
    - I2s_AsyncTransmit
        Starts an asynchronous transmission on the SAI/Flexio_I2s bus.
        Sends the data from SAI to Flexio_I2s and receive back data from Flexio_I2s
    - The application will verify in the received data corresponds with the sent data and update the status flag bStatus accordingly.
    - I2s_DeInit
        De-initialization of I2s modules to reset values

    ## Prerequisites ##
    _____
    To run the example you will need to have the following items:
    - S32K148EVB-Q176 29644 PCB RevX1 SCH RevB
    - 1 Power adapter for the board
    - 1 Micro-USB cable (OpenSDA PnE on board is used)

    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - S32K148EVB-Q176 29644 PCB RevX1 SCH RevB

    ## Hardware Wiring ##
    _____

    PIN FUNCTION                | S32K148EVB-Q176 |
    ----------------------------|-----------------|
    SCK - PTA12 - PTC30         | P1.11 - P1.21
    WS  - PTA11 - PTD1          | P1.13 - P1.15
    TX -  PTA13 - PTD18         | P1.9  - P1.19
    RX -  PTE1  - PTE16         | P1.7  - P1.39

    ## How to run ##
    ______
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b I2s_Sai_to_Flexio_example. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the S32 configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
    The initial configuration will have the same settings as the default example settings.
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b I2s_Sai_to_Flexio_example).
    Select the "S32 Configuration Tool" menu then click on the desired configuration tool (Pins, Clocks, Peripherals etc...). Clicking on any one of those will generate all the components.
    Make the desired changes(if any) then click on the "S32 Configuration Tool->Update Code" button.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be a debug configuration for this project:
     Configuration Name                           | Description
     ---------------------------------------------|------------
     \b I2s_Sai_to_Flexio_example_Debug_FLASH_PNE | Debug the FLASH configuration using GDB PEMicro: OpenSDA Embedded Debug - USB Port

    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
*/