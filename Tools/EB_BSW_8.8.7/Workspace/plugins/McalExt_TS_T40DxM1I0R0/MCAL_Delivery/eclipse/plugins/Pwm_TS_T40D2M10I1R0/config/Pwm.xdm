<?xml version='1.0'?>
<datamodel version="7.0"
    xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd"
    xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd"
    xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd"
    xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    Pwm.xdm
*   @version 1.0.1
*
*   @brief   AUTOSAR Pwm - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and Pwm Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : RTD AUTOSAR 4.4
*   Platform             : CORTEXM
*   Peripheral           : Ftm Flexio
*   Dependencies         : none
*
*   AUTOSAR Version      : 4.4.0
*   AUTOSAR Revision     : ASR_REL_4_4_REV_0000
*   AUTOSAR Conf.Variant :
*   SW Version           : 1.0.1
*   Build Version        : S32K1_RTD_1_0_1_D2202_ASR_REL_4_4_REV_0000_20220224


*   (c) Copyright 2020-2022 NXP Semiconductors
*   All Rights Reserved.
====================================================================================================
-->
    <d:ctr type="AUTOSAR" factory="autosar"
        xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd"
        xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
        xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd">
        <d:lst type="TOP-LEVEL-PACKAGES">
            <d:ctr name="TS_T40D2M10I1R0" type="AR-PACKAGE">
                <a:a name="UUID" value="ECUC:eb2b2e2c-ed9b-4f77-adf1-391af5829f35"/>
                <d:lst type="ELEMENTS">

                    <d:chc name="Pwm" type="AR-ELEMENT" value="MODULE-DEF">

                        <v:ctr type="MODULE-DEF">

                            <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                                <ad:ADMIN-DATA>
                                    <ad:LANGUAGE>EN</ad:LANGUAGE>
                                    <ad:DOC-REVISIONS>
                                        <ad:DOC-REVISION>
                                            <ad:REVISION-LABEL>4.4.0</ad:REVISION-LABEL>
                                            <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                                            <ad:DATE>2010-12-03</ad:DATE>
                                        </ad:DOC-REVISION>
                                    </ad:DOC-REVISIONS>
                                </ad:ADMIN-DATA>
                            </a:a>

                            <a:a name="RELEASE" value="asc:4.4"/>
                            <a:a name="DESC">
                                <a:v><![CDATA[EN:
                                    <html>
                                        Configuration of Pwm (Pulse Width Modulation) module.
                                    </html> ]]>
                                </a:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:c97d70f3-6753-4e7a-a851-4076ed8bffe6"/>
                            <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Pwm"/>
                            <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>

                            <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                                <a:a name="DESC" value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Post Build Variant Used"/>
                                <a:a name="ORIGIN" value="EB"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:da name="DEFAULT" value="false"/>
                                <a:da name="READONLY" value="FALSE"/>
                                <a:da name="TOOLTIP" value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                            </v:var>

                            <!-- @implements IMPLEMENTATION_CONFIG_VARIANT_Object -->
                            <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                                <a:a name="LABEL" value="Config Variant"/>
                                <a:a name="UUID" value="ECUC:d5b9395c-4e0b-48dd-9b30-5162b6179a15"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            <ul>
                                                <li><b>VariantPreCompile:</b> Only precompile time configuration parameters. Only one set of parameters.</li>
                                                <li><b>VariantPostBuild:</b> Mix of precompile and postbuild time configuration parameters.</li>
                                            </ul>
                                        </html> ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:da name="DEFAULT" value="VariantPostBuild"/>
                                <a:da name="RANGE">
                                    <a:v>VariantPostBuild</a:v>
                                    <a:v>VariantPreCompile</a:v>
                                </a:da>
                            </v:var>

                            <!-- @implements PwmChannelConfigSet_Object -->
                            <v:ctr name="PwmChannelConfigSet" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Container contains the channel configuration parameter of the Pwm driver.
                                        </html> ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:a8b1850d-6942-4fea-a1e4-946e9fdf844d"/>


                                <!-- Pwm Channel configuration -->
                                <!-- @implements PwmChannel_Object -->
                                <v:lst name="PwmChannel" type="MAP">
                                    <a:da name="MIN" value="1"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.LogicChannelsCount'))"
                                               true="Maximum channels available for the selected derivative was exceeded."/>
                                    </a:da>

                                    <v:ctr name="PwmChannel" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    Configuration of an individual Pwm channel.
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:955bd058-9182-47f9-a866-6fa866fe6ad2"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>

                                        <!-- @implements PwmChannelId_Object -->
                                        <v:var name="PwmChannelId" type="INTEGER">
                                            <a:a name="LABEL" value="Channel ID"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Channel ID of the Pwm channel. This value will be assigned to the symbolic name derived of the PwmChannel container short name.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                            <a:a name="UUID" value="ECUC:63e6d780-9971-43f6-9e8d-8a26dd6b5d58"/>
                                            <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                                            <a:a name="INVALID" type="Multi">
                                                <mt:range>
                                                    <mt:tst expr="&lt;=4294967295"/>
                                                    <mt:tst expr="&gt;=0"/>
                                                </mt:range>
                                                <mt:xpath>
                                                    <mt:tst expr="text:uniq(../../*/PwmChannelId, .)"
                                                            false="Duplicate ID of Pwm Channel. Each Pwm Channel must have an unique ID value."/>
                                                    <mt:tst expr="node:fallback(., 0) &lt; count(node:fallback(../../*, text:split('1 2 3')))"
                                                            false="Cannot assign an ID number higher than the number of defined channels."/>
                                                </mt:xpath>
                                            </a:a>
                                        </v:var>


                                        <!-- @implements PwmChannelEcucPartitionRef_Object -->
                                        <v:lst name="PwmChannelEcucPartitionRef">
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(count(./*) = 0) and (./../../../../PwmGeneral/PwmMulticoreEnabled = 'true')"
                                                       true="Please add reference partition for this Pwm channel, because multicore feature enabled as a result of PwmMulticoreEnabled option has been checked."/>
                                                <a:tst expr="(count(./*) != 0) and (./../../../../PwmGeneral/PwmMulticoreEnabled = 'false')"
                                                       true="Please remove all partition(s) in this Pwm channel, because multicore feature disabled as a result of PwmMulticoreEnabled option has been unchecked."/>
                                            </a:da>

                                            <v:ref name="PwmChannelEcucPartitionRef" type="REFERENCE">
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>
                                                                Maps a Pwm channel to zero or multiple ECUC partitions to limit the access to this channel group.
                                                                The ECUC partitions referenced are a subset of the ECUC partitions where the Pwm driver is mapped to.
                                                            </p>
                                                            <p>
                                                                When users choose ENABLE multicore feature by checking <b>PwmMulticoreEnabled</b> option, this will force to configure
                                                                at least 1 ECUC partition in this list that is referenced from ECUC module; OR when DISABLE multicore feature,
                                                                user have to remove all ECUC partitions in this list.
                                                            </p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="SCOPE" value="ECU"/>
                                                <a:a name="UUID" value="ECUC:14ddde73-619e-4029-a793-3535990384ad"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="@index > 0"
                                                           true="In current implementation, one Pwm channel can only contain maximum one partition."/>
                                                    <a:tst expr="not(node:refexists(.))"
                                                           true="Empty partition reference."/>
                                                    <a:tst expr="text:uniq(../*, .)"
                                                           false="Duplicate partition."/>
                                                    <a:tst expr="node:refexists(.) and count(text:grep(node:refs('ASPathDataOfSchema:/TS_T40D2M10I1R0/Pwm')/PwmGeneral/PwmEcucPartitionRef/*, .)) = 0"
                                                           true="This ECUC partition must be defined in PwmGeneral/PwmEcucPartitionRef."/>
                                                </a:da>
                                                <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                            </v:ref>

                                        </v:lst>

                                        <v:ref name="PwmHwChannel" type="CHOICE-REFERENCE">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Select the hw channel on which the functionality of the current PWM channel will be implemented.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="UUID" value="ECUC:d1dd5beb-0087-47c8-a268-497ba3e0d2f3"/>
                                            <a:da name="REF">
                                                <a:v>ASPathDataOfSchema:/TS_T40D2M10I1R0/Pwm/PwmChannelConfigSet/PwmFtm/PwmFtmCh</a:v>
                                                <a:v>ASPathDataOfSchema:/TS_T40D2M10I1R0/Pwm/PwmChannelConfigSet/PwmFlexio/PwmFlexioChannels</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refexists(.)" false="Invalid value of the hardware channel. Please select a valid hardware channel from list of already configured channels.
                                                    If list is empty, please configure an hardware channel first."/>
                                                <a:tst expr="text:uniq(../../*/PwmHwChannel,.)" false="Duplicate reference to hardware channel; each PWM channel must have a unique reference to a hardware channel."/>
                                                <a:tst expr="node:refexists(.) and node:exists(./../../*[node:value(node:ref(./PwmHwChannel)/../../PwmHwInstance) = node:value(node:ref(node:current())/../../PwmHwInstance)]/PwmChannelEcucPartitionRef/*[node:refexists(.) and (node:value(.) != (node:current()/../PwmChannelEcucPartitionRef/*[1]))])"
                                                    true="In current implementation, there is no more than one partition configured in one FTM instance.
                                                          Please go to PwmChannelEcucPartitionRef and change EcucPartition reference correctly."/>
                                            </a:da>
                                        </v:ref>

                                        <!-- @implements PwmChannelClass_Object -->
                                        <v:var name="PwmChannelClass" type="ENUMERATION">
                                            <a:a name="LABEL" value="Channel class"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Class of Pwm Channel.</p>
                                                        <ul>
                                                            <li>PWM_FIXED_PERIOD - Period of the channel will not be changed.</li>
                                                            <li>PWM_FIXED_PERIOD_SHIFTED - Period of the channel will not be changed, and support with phase shift feature.</li>
                                                            <li>PWM_VARIABLE_PERIOD - Period of the channel can be changed.</li>
                                                        </ul>
                                                        <note>
                                                            Due to Ftm hardware specific feature that the counter register and period register are shared common for all
                                                            channels in one Ftm instance, therefore if current channel is configured PWM_FIXED_PERIOD class, but another
                                                            channel in the same Ftm instance is configured PWM_VARIABLE_PERIOD, then when that channel call function to
                                                            change period, current channel will change period, too.
                                                        </note>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="true"/>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8bd8c0a0-27a0-486f-8092-96edf4410406"/>
                                            <a:da name="DEFAULT" value="PWM_FIXED_PERIOD"/>
                                            <a:da name="RANGE">
                                                <a:v>PWM_FIXED_PERIOD</a:v>
                                                <a:v>PWM_FIXED_PERIOD_SHIFTED</a:v>
                                                <a:v>PWM_VARIABLE_PERIOD</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel))) and
                                                    (contains(node:ref(../PwmHwChannel)/../../PwmHwInstance,'Emios')) and
                                                    (. = 'PWM_FIXED_PERIOD_SHIFTED') and
                                                    (
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWFMB') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_DAOC')
                                                    )" true="Invalid EmiosChMode for selected PwmChannelClass. PWM_FIXED_PERIOD_SHIFTED is only supported for EMIOS_PWM_IP_MODE_OPWMB, EMIOS_PWM_IP_MODE_OPWMT."/>
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel))) and
                                                    (contains(node:ref(../PwmHwChannel)/../../PwmHwInstance,'Emios')) and
                                                    (. = 'PWM_VARIABLE_PERIOD') and
                                                    (
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMB') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMT')
                                                    )" true="Invalid EmiosChMode for selected PwmChannelClass. PWM_VARIABLE_PERIOD is not supported for EMIOS_PWM_IP_MODE_OPWMB, EMIOS_PWM_IP_MODE_OPWMT, EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE and EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE."/>

                                                <!-- <a:tst expr="(. = 'PWM_FIXED_PERIOD_SHIFTED') and
                                                             (node:value(../../../../PwmGeneral/PwmEnablePhaseShift) = 'false')"
                                                       true = "To select PWM_FIXED_PERIOD_SHIFTED, PwmEnablePhaseShift should be enabled first."/>
                                                <a:tst expr="(. = 'PWM_FIXED_PERIOD_SHIFTED') and
                                                             (node:value(../../../../PwmGeneral/PwmEnablePhaseShift) = 'false') and
                                                             (
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'INDEPENDENT') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_SYNCED') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_COMPLEMENTARY')
                                                             )"
                                                       true="If reference Ftm channel is configured with INDEPENDENT/COMBINED_SYNCED/COMBINED_COMPLEMENTARY, channel class cannot be PWM_FIXED_PERIOD_SHIFTED."/>
                                                <a:tst expr="(. = 'PWM_FIXED_PERIOD') and
                                                             (
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'PHASE_SHIFTED_SINGLE') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'PHASE_SHIFTED_SYNCED') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'PHASE_SHIFTED_COMPLEMENTARY')
                                                             ) and
                                                             (node:ref(../PwmFtmHwChannelRef)/PwmFtmChPhaseShiftTick != 0)"
                                                       true="If reference Ftm channel is configured with PHASE_SHIFTED_SINGLE/PHASE_SHIFTED_SYNCED/PHASE_SHIFTED_COMPLEMENTARY and PWM_FIXED_PERIOD is selected, then reference PwmFtmChPhaseShiftTick should be 0."/> -->
                                            </a:da>
                                        </v:var>

                                        <v:var name="PwmPeriodInTicks" type="BOOLEAN">
                                            <a:a name="LABEL" value="Period in Ticks"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Check this option to configure <b>Default Period</b> unit in ticks, or uncheck this to configure <b>Default Period</b> unit in seconds.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:a37bfb3c-0fc9-4354-b28a-901600af9851"/>
                                            <a:da name="DEFAULT" value="true"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(contains(node:value(../PwmHwChannel),'Ftm')) and node:refexists(../PwmHwChannel) and node:exists(./../../*[text:split(as:path(node:ref(./PwmHwChannel)), '/')[4] = text:split(as:path(node:ref(node:current()/../PwmHwChannel)), '/')[4] and node:value(./PwmPeriodInTicks)!= node:current()])"
                                                    true="All channels in one FTM instance must be configured in ticks or seconds unit only"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmPeriodDefault_Object -->
                                        <v:var name="PwmPeriodDefault" type="FLOAT">
                                            <a:a name="LABEL" value="Default Period"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Default period value of Pwm channel at initialization.</p>
                                                        <p>The measure unit are in ticks (if <b>Period In Ticks</b> checked), or in seconds (if unchecked)</p>
                                                        <p>Valid range: [0, 65534]</p>
                                                        <note>
                                                            <ul>
                                                                <li>
                                                                    The maximum period tick is 65534 (instead of maximum value of period register 65535) in order to achieve
                                                                    perfect 0 or 100% duty cycle.
                                                                </li>
                                                                <li>
                                                                    All channels which are in the same Ftm instance with current channel must have the same Default Period
                                                                    value, due to Ftm hardware specific feature that the period register is shared common for all channels
                                                                    in one Ftm instance.
                                                                </li>
                                                            </ul>
                                                        </note>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:94a1154f-2838-4b1c-b004-bae4755b5b93"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(contains(node:value(../PwmHwChannel),'Ftm')) and node:refexists(../PwmHwChannel) and node:exists(./../../*[text:split(as:path(node:ref(./PwmHwChannel)), '/')[4] = text:split(as:path(node:ref(node:current()/../PwmHwChannel)), '/')[4] and node:value(./PwmPeriodDefault)!= node:current()])"
                                                    true="All channels using the same FTM instance must be configured with the same period value."/>
                                                <a:tst expr="(. > '512') and (contains(node:value(../PwmHwChannel),'Flexio'))"
                                                       true="Due to FlexIO hardware limitation. Cannot configure the period is larger 512 ticks!"/>

                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=65534"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmDutycycleDefault_Object -->
                                        <v:var name="PwmDutycycleDefault" type="INTEGER">
                                            <a:a name="LABEL" value="Default Duty cycle"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Default value for duty cycle of Pwm channel at initialization.</p>
                                                        <ul>
                                                            <li>0 represents for 0% duty cycle</li>
                                                            <li>16384 (0x4000) represents for 50% duty cycle</li>
                                                            <li>32768 (0x8000) represents for 100% duty cycle</li>
                                                        </ul>
                                                        <p>Valid value: [0,32768]</p>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:3049169d-a074-4f92-b6f8-a95260d8ae88"/>
                                            <a:da name="DEFAULT" value="16384"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=32768"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(ecu:list('Pwm.FlexioHasPinOverride') = 'false') and
                                                             (contains(node:value(../PwmHwChannel),'Flexio')) and
                                                             (. = '32768')"
                                                       true="Due to FlexIO hardware limitation. Cannot configure the duty cycle is 32768(0x8000)!"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmPolarity_Object -->
                                        <v:var name="PwmPolarity" type="ENUMERATION">
                                            <a:a name="LABEL" value="Polarity"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Define the polarity of Pwm channel at initialization.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:77f67089-463a-45c7-b856-f794d7afeb4d"/>
                                            <a:da name="DEFAULT" value="PWM_HIGH"/>
                                            <a:da name="RANGE">
                                                <a:v>PWM_HIGH</a:v>
                                                <a:v>PWM_LOW</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="ecu:list('Pwm.FlexioHasLowMode') = 'false' and
                                                             (contains(node:value(../PwmHwChannel),'Flexio')) and
                                                             (. != 'PWM_HIGH')"
                                                       true="Due to FlexIO hardware limitation. Only use PWM_HIGH for the polarity!"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmIdleState_Object -->
                                        <v:var name="PwmIdleState" type="ENUMERATION">
                                            <a:a name="LABEL" value="Idle state"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Define Pwm channel state when the output is set to idle.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:59bc6810-1b55-4964-864c-f43392ef37be"/>
                                            <a:da name="DEFAULT" value="PWM_LOW"/>
                                            <a:da name="RANGE">
                                                <a:v>PWM_HIGH</a:v>
                                                <a:v>PWM_LOW</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(ecu:list('Pwm.FlexioHasPinOverride') = 'false') and
                                                             (contains(node:value(../PwmHwChannel),'Flexio')) and
                                                             (. != 'PWM_LOW')"
                                                       true="Due to FlexIO hardware limitation. Only use PWM_LOW for the Idle state!"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmNotification_Object -->
                                        <v:var name="PwmNotification" type="FUNCTION-NAME">
                                            <a:a name="LABEL" value="Notification function"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>User callback notification function.</p>
                                                        <p>This option is only activated when <b>PwmGeneral/PwmNotificationSupported</b> is checked.</p>
                                                        <note>
                                                            <ul>
                                                                <li>
                                                                    Use NULL_PTR without any quotes to determine no notification function is used.
                                                                    If the string is different from above, it will be used as the notification function name.
                                                                </li>
                                                                <li>
                                                                    Notification does not apply to channel that its alignment type is PWM_CENTER_ALIGNED.
                                                                </li>
                                                            </ul>
                                                        </note>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="true"/>
                                            <a:da name="EDITABLE" type="XPath" expr="node:value(../../../../PwmGeneral/PwmNotificationSupported) = 'true'" />
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:662d9ad9-e947-4ad3-b7e2-54b944c3bd6c"/>
                                            <a:da name="DEFAULT" value="NULL_PTR"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                <a:tst expr="(contains(../PwmHwChannel,'Emios')) and
                                                    (
                                                        (normalize-space(.) != '&quot;NULL_PTR&quot;') and
                                                        (normalize-space(.) != 'NULL_PTR') and
                                                        (normalize-space(.) != '&quot;NULL&quot;') and
                                                        (normalize-space(.) != 'NULL')
                                                    ) and
                                                    (contains(node:ref(../PwmHwChannel)/EmiosChMode, 'OPWMT'))" true="In current implementation, OPWMT channel does not support notification function, so PwmNotification parameter should be left with name NULL, NULL_PTR or disabled."/>
                                                <a:tst expr="(../../../../PwmGeneral/PwmNotificationSupported = 'true') and
                                                             (
                                                                not(normalize-space(.) = '&quot;NULL_PTR&quot;') and
                                                                not(normalize-space(.) = 'NULL_PTR') and
                                                                not(normalize-space(.) = '&quot;NULL&quot;') and
                                                                not(normalize-space(.) = 'NULL') and
                                                                not(text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))
                                                             )"
                                                       true="Invalid name of the PwmNotification. Must be a valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                               <!--  <a:tst expr="(../../../../PwmGeneral/PwmNotificationSupported = 'true') and
                                                             (
                                                                (. != '&quot;NULL_PTR&quot;') and
                                                                (. != 'NULL_PTR') and
                                                                (. != '&quot;NULL&quot;') and
                                                                (. != 'NULL')
                                                             ) and
                                                             (node:fallback(node:ref(node:value(../PwmFtmHwChannelRef))/../../PwmFtmEdgeAlignment, 'PWM_EDGE_ALIGNED') != 'PWM_EDGE_ALIGNED')"
                                                       true="Center-aligned channel type does not support notification at any edges!
                                                             Please change to edge-aligned type or disable this channel's notification."/>
                                                <a:tst expr="(../../../../PwmGeneral/PwmNotificationSupported = 'true') and
                                                             (
                                                                (. != '&quot;NULL_PTR&quot;') and
                                                                (. != 'NULL_PTR') and
                                                                (. != '&quot;NULL&quot;') and
                                                                (. != 'NULL')
                                                             ) and
                                                             (
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_COMPLEMENTARY') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_SYNCED')
                                                             ) and
                                                             (
                                                                (../../../../PwmConfigurationOfOptApiServices/PwmSetPhaseShift = 'true') or
                                                                (../../../../PwmConfigurationOfOptApiServices/PwmSetPhaseShift_NoUpdate = 'true')
                                                             )"
                                                       true="When PwmSetPhaseShift/PwmSetPhaseShift_NoUpdate is enabled and using COMBINED_SYNCED/COMBINED_COMPLEMENTARY,
                                                             this channel should not be used with notification."/> -->
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmMcuClockReferencePoint_Object -->
                                        <v:ref name="PwmMcuClockReferencePoint" type="REFERENCE">
                                            <a:a name="LABEL" value="MCU clock reference"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Reference to the clock source configuration, which is set in the MCU driver configuration.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="ECU"/>
                                            <a:a name="UUID" value="ECUC:a6618c4e-cba9-4ec0-9447-7f61666ebf8a"/>
                                            <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refvalid(.)"
                                                       false="Invalid or empty reference."/>
                                            </a:da>
                                        </v:ref>
                                    </v:ctr>
                                </v:lst>
                                <!-- END Pwm Channel configuration-->


                                <!-- Ftm Module configuration-->
                                <v:lst name="PwmFtm" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.FtmInstanceCount'))"
                                               true="Maximum Ftm modules available for the selected derivative was exceeded."/>
                                    </a:da>

                                    <!-- @implements PwmFtm_Object -->
                                    <v:ctr name="PwmFtm" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="Ftm Modules"/>
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    Configuration of a Ftm module available on the platform.
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:a854a236-4e7d-40d9-8e83-fe73d05a7949"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>

                                        <v:var name="PwmHwInstance" type="ENUMERATION">
                                            <a:a name="LABEL" value="Ftm Hardware instance"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Select the Ftm hardware module instance available on the current platform.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:3383d087-b835-4ab7-b0fa-33e2667f6a4b"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:uniq(../../*/PwmHwInstance, .)"
                                                       false="Duplicate physical Ftm module."/>
                                            </a:da>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FtmInstances.List'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmInstances.List')"/>
                                        </v:var>
                                        <!-- End of PwmHwInstance Element -->

                                        <v:ctr name="PwmFtmClkCfg" type="IDENTIFIABLE">
                                            <a:a name="LABEL" value="Ftm Clock Configuration"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Ftm Clock configuration settings.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="UUID" value="ECUC:a8b1850d-6942-4fea-b1e4-946e9fdf811d"/>

                                            <v:var name="PwmFtmClockSource" type="ENUMERATION">
                                                <a:a name="LABEL" value="Clock source"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select Ftm module clock source.</p>
                                                            <p>This option will be written into Clock Source Selection bitfield (CLKS) of Status and Control register (SC).</p>
                                                            <ul>
                                                                <li>FTM_PWM_IP_CLOCK_SOURCE_NONE           : No input clock is given to Ftm. Ftm counter is not operational.</li>
                                                                <li>FTM_PWM_IP_CLOCK_SOURCE_SYSTEMCLK      : System clock is given to Ftm, which is refered to PER_CLK.</li>
                                                                <li>FTM_PWM_IP_CLOCK_SOURCE_FIXEDCLK       : An fixed frequnecy clock is given to Ftm. This selection is not supported in current platform.</li>
                                                                <li>FTM_PWM_IP_CLOCK_SOURCE_EXTERNALCLK    : An external clock is given to Ftm, which is refered to Ftm_x_REF_CLK (x = 0 or 1).</li>
                                                            </ul>
                                                            <note>
                                                                Clock source and frequency are dependent on the value of the clock that is configured in MCU
                                                                and refered by <b>MCU clock reference</b>. Make sure that the correct reference is used for the configured clock.
                                                            </note>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:de0beae6-a4bb-48ac-a15b-249be65ddf5e"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmClockSourcesLabel')[2], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmClockSourcesLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmClockSource Element -->

                                            <v:var name="PwmFtmClockPrescaler" type="ENUMERATION">
                                                <a:a name="LABEL" value="Clock prescaler"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select the prescaler value for clock source.</p>
                                                            <p>This option will be written into Prescale Factor Selection bitfield (PS) of Status and Control register (SC).</p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:cac0bf7e-8e5a-4863-9a03-69bdf639376d"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmClockPrescalerLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmClockPrescalerLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmClockPrescaler Element -->

                                            <v:var name="PwmFtmClockPrescalerAlternate" type="ENUMERATION">
                                                <a:a name="LABEL" value="Alternate Clock prescaler "/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select the prescaler value for clock source.</p>
                                                            <p>This option will be written into Prescale Factor Selection bitfield (PS) of Status and Control register (SC).</p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:cac0bf7e-8f5a-4863-9a03-69bdf639399d"/>
                                                <a:da name="EDITABLE" type="XPath" expr="node:value(../../../../../PwmGeneral/PwmEnableDualClockMode) = 'true'" />
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmClockPrescalerLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmClockPrescalerLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmClockPrescalerAlternate Element -->
                                        </v:ctr>
                                        <!-- End of PwmFtmClkCfg Container -->

                                        <v:ctr name="PwmFtmGlobalChCfg" type="IDENTIFIABLE">
                                            <a:a name="LABEL" value="Ftm Global Channel Configuration"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Ftm Clock configuration settings.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="UUID" value="ECUC:f8b1850d-1942-4fea-a1e4-946e9fdf844b"/>

                                            <!-- @implements PwmFtmCounterMode_Object -->
                                            <v:var name="PwmFtmCounterMode" type="ENUMERATION">
                                                <a:a name="LABEL" value="Counter Mode"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select edge alignment type which is applied to all channels in current Ftm module.</p>
                                                            <p>This option will be written into Center-Aligned Pwm Select (CPWMS) of Status and Control register (SC).</p>
                                                            <ul>
                                                                <li>
                                                                    FTM_PWM_IP_EDGE_ALIGNED   : The leading edges of all Pwm signals are aligned with the beginning of the period.
                                                                                            Ftm counter operates in Up Counting mode.
                                                                </li>
                                                                <li>
                                                                    FTM_PWM_IP_CENTER_ALIGNED : The pulse width centers for all Pwm channels are aligned with the value of CNTIN.
                                                                                            Ftm counter operates in Up-Down Counting mode.
                                                                </li>
                                                            </ul>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:1952057c-11ac-48cc-9e25-ff803d6c3d6d"/>
                                                <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FtmModeLabel')[1]"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmModeLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmCounterMode Element -->

                                            <v:var name="PwmFtmPeriod" type="INTEGER">
                                                <a:a name="LABEL" value="Counter Period [ticks]"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            User need to check the FTM frequency before enter the period in frequency of PWM. The min pwm frequency must be greater than (FTM counter frequency / 65536).
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:6052057f-88ac-48bb-9e25-ff803d6c3d6d"/>
                                                <a:da name="DEFAULT" type="XPath" expr="num:i(node:fallback('->node:value(./../../../../PwmChannel/*[(node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../..))]/PwmPeriodDefault)', '1'))"/>
                                                <a:da name="VISIBLE" value="false"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&lt;=65535"/>
                                                    <a:tst expr="&gt;=0"/>
                                                 </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmPeriod Element -->

                                            <v:var name="PwmFtmPeriodDither" type="INTEGER">
                                                <a:a name="LABEL" value="Period Dither [ticks]"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            The value of the dithering applied to the PWM frequency.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:5952057c-89ad-48bb-9e25-ff803d6c3d6d"/>
                                                <a:da name="DEFAULT" value="0"/>
                                                <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FTM_PWM_HAS_DITHERING') = 'true'"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&gt;=0"/>
                                                    <a:tst expr="&lt;=31"/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmPeriodDither Element -->

                                            <!-- @implements PwmFtmDeadTime_Object -->
                                            <v:var name="PwmFtmDeadTime" type="INTEGER">
                                                <a:a name="LABEL" value="Dead Time [ticks]"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>
                                                                Deadtime counter used to create a offset between the output of two consecutive Ftm channels used complementary modes.
                                                                Complementary channels behave as a single channel with two outputs which may have a deadtime between them.
                                                            </p>
                                                            <p>
                                                                This option will be written into Extended Deadtime Value bitfield (DTVALEX) and Deadtime Value bitfield (DTVAL)
                                                                in Deadtime Configuration register (DEADTIME).
                                                            </p>
                                                            <p>Valid value: [0,1023]</p>
                                                            <note>For channels which are configured as independent this value has no effect.</note>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:5952057c-88ac-48bb-9e25-ff803d6c3d6d"/>
                                                <a:da name="DEFAULT" value="0"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&gt;=0"/>
                                                    <a:tst expr="&lt;=1023"/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmDeadTime Element -->

                                            <!-- @implements PwmFtmDeadTimePrescaler_Object -->
                                            <v:var name="PwmFtmDeadTimePrescaler" type="ENUMERATION">
                                                <a:a name="LABEL" value="Dead Time Prescaler"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Deadtime prescaler.</p>
                                                        <p>
                                                            This option will be written into Deadtime Prescaler Value (DTPS) in Deadtime Configuration register (DEADTIME).
                                                        </p>
                                                    </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:5952057c-22ac-18cc-9e25-ff803d6c3d6d"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmDeadTimePrescalerLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmDeadTimePrescalerLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmCounterMode Element -->
                                        </v:ctr>
                                        <!-- End of PwmFtmGlobalChCfg Container -->

                                        <v:ctr name="PwmFtmInstCfg" type="IDENTIFIABLE">
                                            <a:a name="LABEL" value="Ftm Instance Configuration"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Ftm Instance configuration settings.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="UUID" value="ECUC:a8b1850d-3012-4fea-a1e4-946e9fdf844d"/>

                                            <v:var name="PwmFtmDebugMode" type="ENUMERATION">
                                                <a:a name="LABEL" value="Debug mode"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select the Ftm behavior in Debug mode. Refer to <b>Debug mode</b> sub-chapter for more details.</p>
                                                            <p>
                                                                This option will be written into Debug Mode (BDMMODE) in Configuration register (CONF).
                                                            </p>

                                                            <p>
                                                                Mode <b>00</b>
                                                                <ul>
                                                                    <li>Counter           - Stopped</li>
                                                                    <li>Flag bit          - Can be set</li>
                                                                    <li>Output            - Normal</li>
                                                                    <li>Bufferd Registers - Writes bypass the registers buffers</li>
                                                                </ul>

                                                                Mode <b>01</b>
                                                                <ul>
                                                                    <li>Counter           - Stopped</li>
                                                                    <li>Flag bit          - Is not set</li>
                                                                    <li>Output            - Forced to their safe value according to POLn bit</li>
                                                                    <li>Bufferd Registers - Writes bypass the registers buffers</li>
                                                                </ul>

                                                                Mode <b>10</b>
                                                                <ul>
                                                                    <li>Counter           - Stopped</li>
                                                                    <li>Flag bit          - Is not set</li>
                                                                    <li>Output            - Frozen when the chip enters Debug mode</li>
                                                                    <li>Bufferd Registers - Writes bypass the registers buffers</li>
                                                                </ul>

                                                                Mode <b>11</b>
                                                                <ul>
                                                                    <li>Counter           - Running</li>
                                                                    <li>Flag bit          - Can be set</li>
                                                                    <li>Output            - Normal</li>
                                                                    <li>Bufferd Registers - Normal</li>
                                                                </ul>
                                                            </p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f0ab4d4c-74f0-4171-9a8d-458d8e09efee"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmDebugModeLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmDebugModeLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmDebugMode Element -->

                                            <v:var name="PwmFtmWriteProtection" type="BOOLEAN">
                                                <a:a name="LABEL" value="Write Protection enable"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/Disable the write protection of FTM register/bitfields.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:684a8c1c-cbbe-44b8-95a7-807fb94ce266"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmDebugMode Element -->

                                            <v:var name="PwmFtmInitTrigger" type="BOOLEAN">
                                                <a:a name="LABEL" value="Initialization Trigger enable"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/Disable the generation of an initialization trigger.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:684b8c1c-cbbe-44b8-95a7-807fb94cf267"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmInitTrigger Element -->

                                            <v:var name="PwmFtmInitTriggerMode" type="ENUMERATION">
                                                <a:a name="LABEL" value="Initialization Trigger mode"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select the generation of initialization trigger mode.</p>
                                                            <p>
                                                                <ul>
                                                                    <li>Trigger on Reload Point     - Initialization trigger is generated when FTM counter reaches a reload point.</li>
                                                                    <li>Trigger on Counter Update   - Initialization trigger is generated when FTM counter is updated.</li>
                                                                </ul>
                                                            </p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f0abcd4c-84f0-4171-9a8d-458d8e09efee"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmTriggerLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmTriggerLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmDebugMode Element -->

                                            <v:var name="PwmFtmOverflowIrq" type="BOOLEAN">
                                                <a:a name="LABEL" value="Timer Overflow Interrupt"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/Disable the generation of an initialization trigger.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:784b8c1c-cbbe-44b8-95a7-817fb94ce266"/>
                                                <a:da name="DEFAULT" value="false"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmNotificationSupported != 'true') and (. = 'true')"
                                                    true="Please enable PwmNotificationSupported node in PwmGeneral before enabling this node!"/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmOverflowIrq Element -->

                                            <v:ctr name="PwmFtmOverflowIrqCallback" type="IDENTIFIABLE">
                                                <a:a name="LABEL" value="Overflow Notification Callback"/>
                                                <a:a name="TITLE" value="Notification Callback"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Configure Notfication function and parameter for interrupt handler callback.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:da name="VISIBLE" value="false"/>
                                                <a:a name="UUID" value="ECUC:add8fbd9-4274-5dbb-9ab0-a081cfddc77b"/>

                                                <v:var name="PwmFtmOverflowIrqFunctionCallback" type="FUNCTION-NAME">
                                                    <a:a name="LABEL" value="Callback function"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>User callback function.</p>
                                                                <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:6b3ee924-afff-fffd-906e-c70d7cdef216"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmOverflowIrq = 'true')"/>
                                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmOverflowIrqFunctionCallback Container -->

                                                <v:var name="PwmFtmOverflowIrqParameterCallback" type="FUNCTION-NAME">
                                                    <a:a name="LABEL" value="Callback parameter"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>User callback parameter.</p>
                                                                <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:1b3ee924-abcd-faaf-906e-c70d7cdef216"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmOverflowIrq = 'true')"/>
                                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmOverflowIrqParameterCallback Container -->
                                            </v:ctr>
                                            <!-- End of PwmFtmOverflowIrqCallback Container -->

                                            <v:var name="PwmFtmReloadIrq" type="BOOLEAN">
                                                <a:a name="LABEL" value="Reload Point Interrupt"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/Disable the generation of an initialization trigger.
                                                            Do not support for this implementation.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:684f8c1c-cbbe-54b8-95a7-807fb94ce266"/>
                                                <a:a name="EDITABLE" value="false"/>
                                                <a:da name="DEFAULT" value="false"/>
                                                <a:da name="VISIBLE" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmReloadIrq Element -->

                                            <v:ctr name="PwmFtmReloadIrqCallback" type="IDENTIFIABLE">
                                                <a:a name="LABEL" value="Reload Point Notification Callback"/>
                                                <a:a name="TITLE" value="Notification Callback"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Configure Notfication function and parameter for interrupt handler callback.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:da name="VISIBLE" value="false"/>
                                                <a:a name="UUID" value="ECUC:bdd8fbd9-4174-5dbb-91b0-a081cfddc77c"/>

                                                <v:var name="PwmFtmReloadIrqFunctionCallback" type="FUNCTION-NAME">
                                                    <a:a name="LABEL" value="Callback function"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>User callback function.</p>
                                                                <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:6b3ee988-ffff-feff-906e-c70d7cdef216"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmReloadIrq = 'true')"/>
                                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmReloadIrqFunctionCallback Container -->

                                                <v:var name="PwmFtmReloadIrqParameterCallback" type="FUNCTION-NAME">
                                                    <a:a name="LABEL" value="Callback parameter"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>User callback parameter.</p>
                                                                <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:2b3ee924-bcde-faaf-906e-c70d7cdef216"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmReloadIrq = 'true')"/>
                                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmReloadIrqParameterCallback Container -->
                                            </v:ctr>
                                            <!-- End of PwmFtmReloadIrqCallback Container -->
                                        </v:ctr>
                                        <!-- End of PwmFtmInstCfg Container -->

                                        <v:ctr name="PwmFtmSyncCfg" type="IDENTIFIABLE">
                                            <a:a name="LABEL" value="Ftm Synchronization Configuration"/>
                                            <a:a name="TAB" value="Ftm Sync"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Ftm Synchronization configuration settings.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="UUID" value="ECUC:a8b1850d-1993-4fea-a1e4-946e9fdf844d"/>

                                            <v:var name="PwmFtmSyncMode" type="ENUMERATION">
                                                <a:a name="LABEL" value="Synchronization selection"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Configure FTM Sync to use Software or Hardware trigger modes
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f1abcc4c-74f0-4171-9a8d-458d8e09efeb"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmSyncModeLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmSyncModeLabel')"/>
                                                 <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmDutycycleUpdatedEndperiod = 'true') and (. = 'Hardware_sync_trigger')"
                                                        true="Only use Software sync trigger when PwmGeneral/PwmDutycycleUpdatedEndperiod is checked "/>
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmMultiChannelSync = 'true') and (. = 'Hardware_sync_trigger')"
                                                        true="Only use Software sync trigger when PwmGeneral/PwmMultiChannelSync is checked "/>
                                                 </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmSwOutControl Element -->

                                            <v:var name="PwmFtmHwTrig0" type="BOOLEAN">
                                                <a:a name="LABEL" value="Hardware Trigger 0"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enables/disables hardware trigger for register sync
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:0389ad80-5162-4605-99a6-2fb6a829eb3d"/>
                                                <a:da name="EDITABLE" type="XPath" expr="../PwmFtmSyncMode = 'Hardware_sync_trigger'"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmHwTrig0 Element -->

                                            <v:var name="PwmFtmHwTrig1" type="BOOLEAN">
                                                <a:a name="LABEL" value="Hardware Trigger 1"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enables/disables hardware trigger for register sync
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:1289ad80-5162-4605-99d6-2fb6a829eb3f"/>
                                                <a:da name="EDITABLE" type="XPath" expr="../PwmFtmSyncMode = 'Hardware_sync_trigger'"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmHwTrig1 Element -->

                                            <v:var name="PwmFtmHwTrig2" type="BOOLEAN">
                                                <a:a name="LABEL" value="Hardware Trigger 2"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enables/disables hardware trigger for register sync
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:0289ad80-4162-4605-99a6-2fb6a829bb3f"/>
                                                <a:da name="EDITABLE" type="XPath" expr="../PwmFtmSyncMode = 'Hardware_sync_trigger'"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmHwTrig2 Element -->

                                            <v:var name="PwmFtmAutoHwTrig" type="BOOLEAN">
                                                <a:a name="LABEL" value="Automatic Hw Trigger Clear"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/disable auto clear of triggers in hardware trigger mode
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:0289cd80-5162-4605-99a6-2fb6a929eb3f"/>
                                                <a:da name="EDITABLE" type="XPath" expr="../PwmFtmSyncMode = 'Hardware_sync_trigger'"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmAutoHwTrig Element -->

                                            <v:var name="PwmFtmMaxLoadPoint" type="BOOLEAN">
                                                <a:a name="LABEL" value="Max Load Point Enable"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/disable max counter value loading point
                                                            (for Center-Aligned Pwm, the Reload point is in middle of period )
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:0289ad20-5162-4605-19a6-2fb6a829eb3f"/>
                                                <a:da name="DEFAULT" value="false"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmDutycycleUpdatedEndperiod = 'true') and 
                                                    (./../PwmFtmMinLoadPoint = 'false') and (. = 'false')"
                                                        true="At least one of two options: Max Load Point Enable and Min Load Point Enable must be set if channel uses PwmDutycycleUpdatedEndperiod."/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmMaxLoadPoint Element -->

                                            <v:var name="PwmFtmMinLoadPoint" type="BOOLEAN">
                                                <a:a name="LABEL" value="Min Load Point Enable"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/disable min counter value loading point.
                                                            (for Center-Aligned Pwm, the Reload point is in end of period )
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:0289abb0-5162-4605-99a6-2fb6a829eb3f"/>
                                                <a:da name="DEFAULT" value="false"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmDutycycleUpdatedEndperiod = 'true') and 
                                                    (./../PwmFtmMaxLoadPoint = 'false') and (. = 'false')"
                                                        true="At least one of two options: Max Load Point Enable and Min Load Point Enable must be set if channel uses PwmDutycycleUpdatedEndperiod."/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmMinLoadPoint Element -->

                                            <v:var name="PwmFtmHalfCycleLoadPoint" type="BOOLEAN">
                                                <a:a name="LABEL" value="HalfCycle Loading Point"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Enable/disable half cycle loading point
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:0289ad20-5162-4605-9ba6-dfb6a829eb3f"/>
                                                <a:da name="DEFAULT" value="false"/>
                                            </v:var>
                                            <!-- End of PwmFtmHalfCycleLoadPoint Element -->

                                            <v:var name="PwmFtmReloadPointFrequency" type="INTEGER">
                                                <a:a name="LABEL" value="Reload point Frequency"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Select the number of enabled reload opportunities should happen until an enabled reload opportunity becomes a reload point.</p>
                                                            <p>This option will be written into Frequency of the Reload Opportunities bitfield (LDFQ) in Configuration register (CONF).</p>
                                                            <note>
                                                                For safety, this option is activated only when <b>PwmGeneral/PwmDutycycleUpdatedEndperiod</b> is checked.
                                                            </note>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:5952057c-88bc-48fc-9e25-ff703d6c3d6d"/>
                                                <a:da name="DEFAULT" value="0"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&gt;=0"/>
                                                    <a:tst expr="&lt;=31"/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmReloadPointFrequency Element -->

                                            <v:var name="PwmFtmInvertControl" type="ENUMERATION">
                                                <a:a name="LABEL" value="Inverting Control"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Select when the Inverting Control register is synchronized.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f2abcc4c-74f0-4172-9a8d-358d8e09efee"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmSyncLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmSyncLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmInvertControl Element -->

                                            <v:var name="PwmFtmSwOutControl" type="ENUMERATION">
                                                <a:a name="LABEL" value="Software Output Control"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Select when the Software Output Control register is synchronized.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f0aacc4c-74f0-4171-8a8d-458d8e09efee"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmSyncLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmSyncLabel')"/>
                                            </v:var>
                                            <!-- End of PwmFtmSwOutControl Element -->

                                            <v:var name="PwmFtmOutputMask" type="ENUMERATION">
                                                <a:a name="LABEL" value="Output Mask"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Select when the Output Mask register is synchronized.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f0abcc4c-74f0-4171-9a8d-658d8e09efea"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmSyncLabel')[1], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmSyncLabel')"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmEnableMaskOutputs = 'true') and (. != 'Sync_on_FTM_Clock_rising_edge')"
                                                        true="Only use Sync_on_FTM_Clock_rising_edge when PwmGeneral/PwmEnableMaskOutputs is checked "/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmOutputMask Element -->

                                            <v:var name="PwmFtmCounterInitial" type="ENUMERATION">
                                                <a:a name="LABEL" value="Counter Initial"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Select when the Counter Initial, max counter, halfCycle and Counter Value register is synchronized.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f0abcc4c-74f1-4171-9a8d-458d8e09efec"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmSyncLabel')[3], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmSyncLabel')"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmDutycycleUpdatedEndperiod = 'true') and (. != 'Sync_on_FTM_Sync_Trigger')"
                                                        true="Only configure Sync_on_FTM_Sync_Trigger when PwmGeneral/PwmDutycycleUpdatedEndperiod is checked "/>
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmMultiChannelSync = 'true') and (. != 'Sync_on_FTM_Sync_Trigger')"
                                                        true="Only configure Sync_on_FTM_Sync_Trigger when PwmGeneral/PwmMultiChannelSync is checked "/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmCounterInitial Element -->

                                            <v:var name="PwmFtmCounterSync" type="ENUMERATION">
                                                <a:a name="LABEL" value="FTM Counter"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Select when the Ftm Counter register is synchronized.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:f0accc4c-74d0-4171-9a8d-458d8e09efee"/>
                                                <a:da name="DEFAULT" type="XPath" expr="node:fallback(ecu:list('Pwm.FtmSyncLabel')[3], 'N/A')"/>
                                                <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmSyncLabel')"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr=". = 'Sync_on_FTM_Clock_rising_edge'" true="FTM Counter Sync does not support updates on FTM CLK rising edge."/>
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmDutycycleUpdatedEndperiod = 'true') and (. != 'Sync_disabled')"
                                                        true="Only configure Sync_disabled when PwmGeneral/PwmDutycycleUpdatedEndperiod is checked "/>
                                                    <a:tst expr="(../../../../../PwmGeneral/PwmMultiChannelSync = 'true') and (. != 'Sync_on_FTM_Sync_Trigger')"
                                                        true="Only configure Sync_on_FTM_Sync_Trigger when PwmGeneral/PwmMultiChannelSync is checked "/>
                                                </a:da>
                                            </v:var>
                                            <!-- End of PwmFtmCounterSync Element -->
                                        </v:ctr>
                                        <!-- End of PwmFtmSyncCfg Container -->

                                 <v:ctr name="FtmGlobalFaultCfg" type="IDENTIFIABLE">
                                    <a:a name="LABEL" value="Ftm Global Fault configuration"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>
                                                    <p> Global Fault configuration.</p>
                                                    <p> Autosar Requirements: Not specified. </p> 
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:da name="VISIBLE" type="XPath" expr="ecu:list('Pwm.FTM_PWM_HAS_FAULT') = 'true'"/>
                                    <a:a name="UUID" value="ECUC:aba3f711-5a3a-486b-88b2-0cb9f3affc1b"/>
                                    <a:da name="EDITABLE" type="XPath" expr="(../../../../PwmGeneral/PwmFaultSupported = 'true')"/>

                                    <v:var name="FtmFaultFunctionality" type="ENUMERATION">
                                            <a:a name="LABEL" value="Fault Control Mode"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                        <html>
                                                            <p><li> Selects the fault control mode </p>
                                                            <ul>
                                                                <p>><li> FAULT_DISABLED -> Fault control disabled for all channels. </li></p>
                                                                <p>><li> FAULT_EVEN_CHANNELS_MANUAL_CLEAR -> Fault control enabled for even channels (0, 2, 4..) with manual fault clearing. </li></p> 
                                                                <p>><li> FAULT_ALL_CHANNELS_MANUAL_CLEAR -> Fault control enabled for all channels with manual fault clearing. </li></p> 
                                                                <p>><li> FAULT_ALL_CHANNELS_AUTO_CLEAR  -> Fault control enabled for all channels with automatic fault clearing. </li></p> 
                                                            </ul>
                                                            <p><b> Note: </b> For any automatic fault clear modes, a Fault Notification function should be defined. In automatic modes, the hardware shall 
                                                                              be configured into manual fault clearing and automatic fault clearing shall be implemented by software. </p>
                                                        </html>
                                                    ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:da name="EDITABLE" type="XPath" expr="../../../../../PwmGeneral/PwmFaultSupported = 'true'" />   
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:ed570dac-2b99-4fa6-af46-6134351440e7"/>                                                    
                                            <a:da name="DEFAULT" value="FAULT_DISABLED"/>
                                            <a:da name="RANGE">
                                                <a:v>FAULT_DISABLED</a:v>
                                                <a:v>FAULT_EVEN_CHANNELS_MANUAL_CLEAR</a:v>
                                                <a:v>FAULT_ALL_CHANNELS_MANUAL_CLEAR</a:v>
                                                <a:v>FAULT_ALL_CHANNELS_AUTO_CLEAR</a:v>
                                            </a:da>
                                     </v:var>
                                     
                                    <v:var name="FtmFaultFilterValue" type="INTEGER">
                                            <a:a name="LABEL" value="Fault Filter Value"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                        <html>
                                                            <p> Selects the filter value for the fault inputs. </p>
                                                        </html>
                                                    ]]>
                                                 </a:v>
                                            </a:a>
                                           <a:da name="EDITABLE" type="XPath" expr="(./../FtmFaultFunctionality != 'FAULT_DISABLED')"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:354e3a8e-a1b4-4014-b178-c439a6be1efd"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=15"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                    </v:var>
                                   
                                    <v:var name="FtmFaultOutputState" type="ENUMERATION">
                                        <a:a name="LABEL" value="Fault Output State"/>
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:
                                                    <html>
                                                        <p> Specifies the fault state for the PWM channel output during fault conditions </p>
                                                        <ul>
                                                        <p><li> SAFE_VALUE: Outputs will be placed into safe values when fault events in ongoing (defined by polarity) </li></p>
                                                        <p><li> TRI_STATE: Outputs will be tri-stated when fault event is ongoing </li></p>
                                                        </ul>
                                                        <p>Autosar Requirements: Not specified.</p>
                                                    </html>
                                                ]]>
                                            </a:v>
                                        </a:a>
                                        <a:da name="EDITABLE" type="XPath" expr="(node:value(./../FtmFaultFunctionality) != 'FAULT_DISABLED')"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:73beae45-998d-4208-998d-91a7b057e9e9"/>
                                        <a:da name="DEFAULT" value="SAFE_VALUE"/>
                                        <a:da name="RANGE">
                                            <a:v>SAFE_VALUE</a:v>
                                            <a:v>TRI_STATE</a:v>
                                        </a:da>
                                    </v:var>

                                    <v:var name="FtmFaultIrqUsed" type="BOOLEAN">
                                        <a:a name="LABEL" value="Fault Interrupt Enable"/>
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    Enable/Disable the generation of an the fault notification.
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:684f8c1c-cbbe-54f8-95a7-807fb94ce999"/>
                                        <a:da name="EDITABLE" type="XPath" expr="(node:value(./../FtmFaultFunctionality) != 'FAULT_DISABLED')"/>
                                        <a:da name="DEFAULT" value="false"/>
                                    </v:var>
         
                                            <v:lst name="FtmFaultSettings" type="MAP">
                                                <a:da name="MIN" value="0"/>
                                                <a:da name="MAX" value="4"/>

                                                <v:ctr name="FtmFaultSettings" type="IDENTIFIABLE">
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Configuration of an individual Ftm fault input.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="REQUIRES-INDEX" value="true"/>
                                                    <a:da name="VISIBLE" type="XPath" expr="ecu:list('Pwm.FTM_PWM_HAS_FAULT') = 'true'"/>
                                                    <a:a name="UUID" value="ECUC:58693564-bfcc-1b79-b33b-70f3cfb04b99"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                    </a:a>

                                                    <v:var name="FtmFaultId" type="ENUMERATION">
                                                        <a:a name="LABEL" value="Ftm Fault Id"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    Select the Ftm Fault Id available in module.
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:a58ab2db-512c-4157-9a11-ccf07cd7ee40"/>
                                                        <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FtmFaultId')[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                        <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmFaultId')"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="text:uniq(../../*/FtmFaultId, .)"
                                                                   false="Duplicate hardware Ftm channel"/>
                                                      
                                                        </a:da>
                                                    </v:var>
                
                                                <v:var name="FtmFaultPolarity" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Ftm Fault Input Polarity"/>
                                                    <a:a name="DESC">
                                                         <a:v>
                                                            <![CDATA[EN:
                                                                <html>
                                                                    <p> Defines the polarity of the fault input. </p>
                                                                    <p> Autosar Requirements: not specified. </p>
                                                                </html>
                                                            ]]>
                                                         </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:892175d0-e991-4fb4-9c3f-248a31f44452"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(./../../../FtmFaultFunctionality != 'FAULT_DISABLED')"/>
                                                    <a:da name="DEFAULT" value="POLARITY_HIGH"/>
                                                    <a:da name="RANGE">
                                                        <a:v>POLARITY_HIGH</a:v>
                                                        <a:v>POLARITY_LOW</a:v>
                                                    </a:da>
                                                </v:var> 
                                                
                                                <v:var name="FtmEnableFaultFilter" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Ftm Fault Input Filter Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:
                                                                <html>
                                                                    <p> Enables/Disables the filter for the fault input. </p>
                                                                    <p> Autosar Requirements: Not specified. </p>
                                                                </html>
                                                            ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:da name="EDITABLE" type="XPath" expr="(./../../../FtmFaultFunctionality != 'FAULT_DISABLED')" /> 
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:d2b6bd10-60a4-4f11-93e3-809a6d0ee9db"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>   
                                                
                                                <v:var name="FtmFaultNotification" type="FUNCTION-NAME">
                                                    <a:a name="LABEL" value="Ftm Fault Notification"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:
                                                                <html>
                                                                    <p> User callback function. </p>
                                                                    <p><b> Note: </b> Please use NULL or NULL_PTR w/o any quotes. If the used string is different from NULL 
                                                                    or NULL_PTR it will be used as the configured function name. </p>
                                                                </html>
                                                            ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:da name="EDITABLE" type="XPath" expr="(./../../../FtmFaultFunctionality != 'FAULT_DISABLED') and (./../../../FtmFaultIrqUsed = 'true')"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="OPTIONAL" value="false"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:7814a9ec-36a2-413d-b156-9a5f8607ff46"/>
                                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))" 
                                                        false="Invalid name of the FtmFaultNotification. Must be a valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                    </a:da>
                                                </v:var>
                                           </v:ctr>
                                        </v:lst>
                                    </v:ctr> <!-- Fault control configuration-->
                            

                                        <!-- Ftm Channel configuration-->
                                        <v:lst name="PwmFtmCh" type="MAP">
                                            <a:da name="MIN" value="1"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="count(./*) &gt; num:i(ecu:get('Pwm.FtmChannelsCount'))"
                                                    true="Maximum Ftm channels available for the selected derivative was exceeded."/>
                                            </a:da>

                                            <v:ctr name="PwmFtmCh" type="IDENTIFIABLE">
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Configuration of an individual Ftm hardware channel.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="REQUIRES-INDEX" value="true"/>
                                                <a:a name="UUID" value="ECUC:58693564-bfcc-1b79-b33b-70f3cfb04b53"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>

                                                <v:var name="PwmFtmChId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Hardware channel Id"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Select the Ftm hardware channel available in module. This value will be assigned to the symbolic name derived of the PwmChannel container short name.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:a58ab2db-512c-4157-9a11-ccf07cd7ee23"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/PwmFtmChId, .)"
                                                               false="Duplicate hardware Ftm channel"/>
                                                        <a:tst expr="(num:mod(text:grep(text:split(.,'_'), '[0-9]'), '2') = '1') and (../../*[text:grep(text:split(PwmFtmChId,'_'), '[0-9]') = num:add(text:grep(text:split(node:current(),'_'), '[0-9]'), '-1') and PwmFtmPairChEnable = 'true'])"
                                                               true="Channel is already used in pair configuration. Please chose another chanel!"/>
                                                        <a:tst expr="(ecu:get('Pwm.Derivative') = 'S32R45') and ((./../../../PwmHwInstance) = 'Ftm_1') and ((.) != 'CH_0') and ((.) != 'CH_1')"
                                                               true="Channel is not supported by this derivative. Please chose another chanel!"/>    
                                                    </a:da>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FtmChannels')[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmChannels')"/>
                                                </v:var>
                                                <!-- End of PwmFtmChId Element -->

                                                <v:var name="PwmFtmChPulseType" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Generated Pulse"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>The type of the generated PWM signal.</p>

                                                                For Edge/Center aligned PWM:
                                                                <ul>
                                                                    <li>High-true pulse - clear Output on match</li>
                                                                    <li>Low-true pulse  - set Output on match</li>
                                                                </ul>

                                                                For combined modes:
                                                                <ul>
                                                                    <li>High-true pulse - set on channel (n) match, and clear on channel (n+1) match</li>
                                                                    <li>Low-true pulse  - clear on channel (n) match, and set on channel (n+1) match</li>
                                                                </ul>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:f2526262-ee4f-48ef-8ddb-c649f0f57358"/>
                                                    <a:da name="DEFAULT" value="High_true_pulse"/>
                                                    <a:da name="RANGE">
                                                        <a:v>High_true_pulse</a:v>
                                                        <a:v>Low_true_pulse</a:v>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmChPulseType Element -->

                                                <v:var name="PwmFtmChInitOutput" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Initial Output State"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>The initial state of the channel output is configured in PWM signal.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:a2556261-ee4f-48ef-8ddb-c649f0f57358"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="node:when(
                                                                        node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                    (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                    (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                            ]/PwmIdleState)', 'LOW') = 'PWM_LOW',
                                                                        (ecu:list('Pwm.FtmOutputStateLabel'))[1],
                                                                        node:when(
                                                                                    node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                    ]/PwmIdleState)', 'LOW') = 'PWM_HIGH',
                                                                                    (ecu:list('Pwm.FtmOutputStateLabel'))[2],
                                                                                    (ecu:list('Pwm.FtmOutputStateLabel'))[1]
                                                                                )
                                                                    )"/>
                                                    </a:da>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmOutputStateLabel')"/>
                                                </v:var>
                                                <!-- End of PwmFtmChInitOutput Element -->

                                                <v:var name="PwmFtmChPolarity" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Channel Polarity"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Select operation mode of this Ftm channel.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:b2526261-ee4f-48ef-8ddb-c649f0f57358"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="node:when(
                                                                        node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                    (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                    (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                            ]/PwmPolarity)', 'Channel_active_HIGH') = 'PWM_HIGH',
                                                                        (ecu:list('Pwm.FtmPolarityLabel'))[2],
                                                                        node:when(
                                                                                    node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                    ]/PwmPolarity)', 'Channel_active_HIGH') = 'PWM_LOW',
                                                                                    (ecu:list('Pwm.FtmPolarityLabel'))[1],
                                                                                    (ecu:list('Pwm.FtmPolarityLabel'))[2]
                                                                                )
                                                                    )"/>
                                                    </a:da>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmPolarityLabel')"/>
                                                </v:var>
                                                <!-- End of PwmFtmChPolarity Element -->

                                                <v:var name="PwmFtmChDutyCycle" type="INTEGER">
                                                    <a:a name="LABEL" value="Duty Cycle [Ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Define the duty cycle value (in tick) for this channel.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ed7c22c1-1824-4a1a-af7b-d605a6d7cddb"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i((num:i(node:fallback(
                                                                                    '->node:value(../../../../../PwmChannel/*[
                                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                         ]/PwmDutycycleDefault)',
                                                                                    '0')) div 32768) * node:fallback('->num:i(node:value(../../../PwmFtmGlobalChCfg/PwmFtmPeriod))', '1'))"/>
                                                    </a:da>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=65534"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmChDutyCycle Element -->

                                                <v:var name="PwmFtmChDutyCycleDither" type="INTEGER">
                                                    <a:a name="LABEL" value="Duty Cycle Dither [Ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Define the duty cycle dither value (in tick) for this channel.</p>
                                                                <p>Valid value: [0, 1023]</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ed7c22c1-2824-4a1a-af7b-d605a6d7cddb"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FTM_PWM_HAS_DITHERING') = 'true'"/>
                                                    <a:da name="INVALID" type="Multi">
                                                        <mt:range>
                                                            <mt:tst expr="&lt;=31"/>
                                                            <mt:tst expr="&gt;=0"/>
                                                        </mt:range>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmChDutyCycleDither Element -->

                                                <v:var name="PwmFtmChInterrupt" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Channel Interrupt"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Enable/Disable the generation of an initialization trigger.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:684b8c1c-cbbe-44b8-95a7-807fb94ce266"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(../../../../../../PwmGeneral/PwmNotificationSupported != 'true') and (. = 'true')"
                                                        true="Please enable PwmNotificationSupported node in PwmGeneral before enabling this node!"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmChInterrupt Element -->

                                                <v:ctr name="PwmFtmChInterruptCallback" type="IDENTIFIABLE">
                                                    <a:a name="LABEL" value="Channel Notification Callback"/>
                                                    <a:a name="TITLE" value="Notification Callback"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Configure Notfication function and parameter for interrupt handler callback.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5dbb-9ab0-a081bfddc77c"/>

                                                    <v:var name="PwmFtmChInterruptFunctionCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback function"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>User callback function.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                                </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ef924-ffff-ffff-906e-d70d7cdef916"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmChInterrupt = 'true')"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of PwmFtmChInterruptFunctionCallback Container -->

                                                    <v:var name="PwmFtmChInterruptParameterCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback parameter"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>User callback parameter.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                                </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:3b3ee924-abde-faaf-906e-c70d7cdef216"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmChInterrupt = 'true')"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of PwmFtmChInterruptParameterCallback Container -->
                                                </v:ctr>
                                                <!-- End of PwmFtmChInterruptCallback Container -->

                                                <v:var name="PwmFtmChPwmOutputEnable" type="BOOLEAN">
                                                    <a:a name="LABEL" value="PWM Signal Output Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Enable/Disable the output of the PWM signal on the channel pin.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:184a8c1c-ce4e-44b8-95a7-807fb94ce266"/>
                                                    <a:da name="DEFAULT" value="true"/>
                                                </v:var>
                                                <!-- End of PwmFtmChPwmOutputEnable Element -->

                                                <v:var name="PwmFtmChSwCtrlEnable" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Software Control enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Enable/Disable the software control for this channels output.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:284a8c1c-ce4e-44b8-95a7-807fb94ce266"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>
                                                <!-- End of PwmFtmChSwCtrlEnable Element -->

                                                <v:var name="PwmFtmChExternTriggerEnable" type="BOOLEAN">
                                                    <a:a name="LABEL" value="External Trigger enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Enable/Disable the generation of an external trigger.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-107fb94ce266"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>
                                                <!-- End of PwmFtmChExtTriggerEnable Element -->

                                                <v:var name="PwmFtmChSwCtrlValue" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Software Control Value"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>The software output control forces 0 or 1 to the channel output.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-207fb94ce266"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>
                                                <!-- End of PwmFtmChSwCtrlValue Element -->

                                                <v:var name="PwmFtmChMatchLoadPointEnable" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Channel Match Load Point enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Enable/Disable the channel match as an reaload oportunity.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-307fb94ce266"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>
                                                <!-- End of PwmFtmChMatchLoadPointEnable Element -->

                                                <v:var name="PwmFtmPairChEnable" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Paired Channel enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Enable the paired channel feature.</p>
                                                                <p>
                                                                    The channels n and n+1 will be used as a channel pair.
                                                                </p>
                                                                <p><b>Note</b>: Cannot be used for odd channels.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-407fb94ce266"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="num:mod(num:i(text:split(../PwmFtmChId,'_')[last()]), 2) = '0' and (contains(../../../PwmFtmGlobalChCfg/PwmFtmCounterMode,'Edge'))"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(num:mod(num:i(text:split(../PwmFtmChId,'_')[last()]), 2) = '1') and (. = 'true')" true="Odd channels cannot have pair configurations."/>
                                                        <a:tst expr="not(contains(../../../PwmFtmGlobalChCfg/PwmFtmCounterMode,'Edge')) and (. = 'true')" true="Center-Aligned mode cannot have pair configurations."/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of PwmFtmPairChEnable Element -->

                                                <v:ctr name="PwmFtmPairedCh" type="IDENTIFIABLE">
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Configuration of a paired Ftm hardware channel.
                                                                <p>
                                                                    This will configure the channel n+1.
                                                                </p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="UUID" value="ECUC:58693564-bfcc-2b79-b33b-70f3cfb04b53"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../PwmFtmPairChEnable = 'true')"/>

                                                    <v:var name="PwmFtmPairedChDeadtimeEnable" type="BOOLEAN">
                                                        <a:a name="LABEL" value="Deadtime enable"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Enable the deadtime delay for Ftm channel.</p>
                                                                    <p>
                                                                        The deadtime delay insertion ensures that no two complementary signals (channels n
                                                                        and n+1) drive the active state at the same time.
                                                                    </p>
                                                                    <p>
                                                                        This option is activated only when Ftm channel is using operation mode that has COMPLEMENTARY
                                                                        (COMBINED_COMPLEMENTARY, PHASE_SHIFTED_COMPLEMENTARY).
                                                                    </p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-807fb94ca266"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true')"/>
                                                        <a:da name="DEFAULT" value="false"/>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChDeadtimeEnable Element -->

                                                    <v:var name="PwmFtmPairedChSync" type="BOOLEAN">
                                                        <a:a name="LABEL" value="Pair Sync enable"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Enable the synchronization of the channel match value registers for this pair.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-807fb94cb266"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true')"/>
                                                        <a:da name="DEFAULT" value="true"/>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChSync Element -->

                                                    <v:var name="PwmFtmPairedChExtTrig" type="BOOLEAN">
                                                        <a:a name="LABEL" value="External Trigger enable"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Enable the generation of an external trigger for channel n+1 of this pair.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-807fb94cc266"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true')"/>
                                                        <a:da name="DEFAULT" value="false"/>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChSync Element -->

                                                    <v:var name="PwmFtmPairedChComplementary" type="BOOLEAN">
                                                        <a:a name="LABEL" value="Complementary channel enable"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Enable the complementary mode for Ftm channel.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-807fb94cd266"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true')"/>
                                                        <a:da name="DEFAULT" value="false"/>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChComplementary Element -->

                                                    <v:var name="PwmFtmDutyDitheringPaired" type="BOOLEAN">
                                                        <a:a name="LABEL" value="Paired DutyCycle Dithering Type"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p> The PWM edge dithering in Combine/Modified Combine Mode can be done in the channel (n) match edge or in the channel (n+1) match edge.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:684a8c1c-ce4e-44b8-95a7-807fb94cd211"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true') and (ecu:list('Pwm.FTM_PWM_HAS_DITHERING') = 'true')"/>
                                                        <a:da name="DEFAULT" value="false"/>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChDeadtimeEnable Element -->

                                                    <v:var name="PwmFtmPairedChCombineMode" type="ENUMERATION">
                                                        <a:a name="LABEL" value="Combine mode"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Select combine mode for the Ftm channel pair.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:d2526261-ee4f-48ef-8ddb-c649f0f57358"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true')"/>
                                                        <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FtmCHannelCombineLabel'))[1]"/>
                                                        <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmCHannelCombineLabel')"/>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChCombineMode Element -->

                                                    <!-- @implements PwmFtmPairedChComplementaryMode_Object -->
                                                    <v:var name="PwmFtmPairedChComplementaryMode" type="ENUMERATION">
                                                        <a:a name="LABEL" value="Complementary mode"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Select complementary mode of the Ftm channel n+1.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:f2526261-ee4f-48ef-8ddb-c649f0f57358"/>
                                                        <a:da name="EDITABLE" type="XPath">
                                                            <a:tst expr="(../../PwmFtmPairChEnable = 'true') or (../PwmFtmPairedChComplementary = 'true')"/>
                                                        </a:da>
                                                        <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FtmPairPolarityLabel'))[1]"/>
                                                        <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FtmPairPolarityLabel')"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="(
                                                                            (node:value(.) = 'PHASE_SHIFTED_SINGLE') or
                                                                            (node:value(.) = 'PHASE_SHIFTED_SYNCED') or
                                                                            (node:value(.) = 'PHASE_SHIFTED_COMPLEMENTARY')
                                                                        ) and
                                                                        (node:value(../../../../../../PwmGeneral/PwmEnablePhaseShift) = 'false')"
                                                                true="If PHASE_SHIFTED operation mode is selected, PwmGeneral/PwmEnablePhaseShift should be enabled first."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChComplementaryMode Element -->

                                                    <v:var name="PwmFtmPairedChPhaseShift" type="INTEGER">
                                                        <a:a name="LABEL" value="Phase Shift [Ticks]"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Define the offset value (in tick) from 1 that the leading edge of pulse signal will start.</p>
                                                                    <p>Valid value: [0, 65533]</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:ed7c22c1-3824-4a1a-af7b-d605a6d7cddb"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../PwmFtmPairChEnable = 'true')"/>
                                                        <a:da name="DEFAULT" value="0"/>
                                                        <a:da name="INVALID" type="Multi">
                                                            <mt:range>
                                                                <mt:tst expr="&lt;=65533"/>
                                                                <mt:tst expr="&gt;=0"/>
                                                            </mt:range>
                                                            <mt:xpath>
                                                                <mt:tst expr="(node:value(.) &gt; 0) and
                                                                              (node:value(../../../../../../../PwmGeneral/PwmEnablePhaseShift) = 'false')"
                                                                        true="If PHASE SHIFT is used, PwmGeneral/PwmEnablePhaseShift should be enabled first."/>
                                                            </mt:xpath>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of PwmFtmPairedChPhaseShift Element -->
                                                </v:ctr>
                                                <!-- End of PwmFtmPairedCh Container -->

                                            </v:ctr>

                                        </v:lst>
                                        <!-- END Ftm Channel configuration -->

                                    </v:ctr>

                                </v:lst>
                                <!-- END Ftm Module configuration -->

                                <!-- Flexio Module configuration -->
                                <v:lst name="PwmFlexio" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="MAX" type="XPath" expr="ecu:list('Pwm.FlexioInstanceCount')"/>

                                    <!-- @implements PwmFlexio_Object -->
                                    <v:ctr name="PwmFlexio" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="Flexio Instance"/>
                                        <a:a name="TITLE" value="Flexible I/O Configuration (FlexIO)"/>
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html>
                                                    Configuration of an Flexio module available on the platform.
                                                </html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:72b13796-cc7f-418c-83d0-dfa2e35548d6"/>

                                        <v:var name="PwmHwInstance" type="ENUMERATION">
                                            <a:a name="LABEL" value="Hardware instance"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html>
                                                Select the hardware Flexio module.
                                            </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:dd286e45-87d3-4c9d-b607-f532d59fea6f"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:uniq(../../*/PwmHwInstance, .)" false="Duplicate hardware Flexio module."/>
                                            </a:da>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexioInstances'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioInstances')"/>
                                        </v:var>
                                        <!-- End of PwmHwInstance Element -->

                                        <!-- Channel Configuration Array -->
                                        <v:lst name="PwmFlexioChannels" type="MAP">
                                            <a:da name="MIN" value="1"/>
                                            <a:da name="MAX" type="XPath" expr="ecu:get('Pwm.FlexioChannelCount')"/>
                                            <a:a name="LABEL" value="Flexio Channels"/>

                                            <v:ctr name="PwmFlexioChannels" type="IDENTIFIABLE">
                                                <a:a name="TITLE" value="Flexio Channel Configuration"/>
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html>
                                                            List of Flexio channels available on the platform.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="REQUIRES-INDEX" value="true"/>
                                                <a:a name="UUID" value="ECUC:dc52cbeb-9159-4843-ac71-41852b8d09d4"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>

                                                <v:ref name="FlexioMclChRef" type="REFERENCE">
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Select the Flexio MCL hw channel on which the the current PWM channel will be implemented.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="UUID" value="ECUC:d1dd5beb-0087-47c8-a268-4955a3e0d2f3"/>
                                                    <a:da name="REF">
                                                        <a:v>ASPathDataOfSchema:/TS_T40D2M10I1R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels</a:v>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="node:refexists(.)" false="Invalid value of the Flexio Mcl channel. Please select a valid Flexio Mcl channel from the list of already configured channels.
                                                            If list is empty, please configure a Flexio Mcl channel first in /Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels."/>
                                                        <a:tst expr="text:uniq(../../*/FlexioMclChRef,.)" false="Duplicate reference to Mcl Flexio channel; each PWM channel must have a unique reference to a Mcl Flexio channel."/>
                                                    </a:da>
                                                </v:ref>

                                                <v:var name="FlexioChId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Channel Id"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select one of the Flexio channels available on the platform.
                                                                <b>NOTE: This also selects the used timer.</b>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ee29e77b-48b0-46da-8a61-07260085aa45"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexioChannels'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/FlexioChId, .)" false="Duplicate Flexio channel id."/>
                                                        <a:tst expr="node:refexists(../FlexioMclChRef) and text:split(node:ref(../FlexioMclChRef)/FlexioMclChannelId, '_')[2] = text:split(., '_')[2]" false="Selected channel is different from MCL referenced channel. Please update with MCL referenced channel value."/>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioChannels')"/>
                                                </v:var>
                                                <!-- End of FlexioChId Element -->

                                                <v:var name="FlexioPinId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Pin Id"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select one of the Flexio Pins available on the platform.
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ee29e77b-48b0-46da-8a61-072600855a45"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexioPins'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/FlexioPinId, .)" false="Duplicate Flexio pin id."/>
                                                        <a:tst expr="node:refexists(../FlexioMclChRef) and text:split(node:ref(../FlexioMclChRef)/FlexioMclPinId, '_')[2] = text:split(., '_')[2]" false="Selected pin is different from MCL referenced channel. Please update with MCL referenced pin value."/>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioPins')"/>
                                                </v:var>
                                                <!-- End of FlexioPinId Element -->

                                                <v:var name="FlexioChPrescaler" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select clock prescaler used for this Flexio channel.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9a80-a081cf55c77c"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FlexioHasPrescaler') = 'true'"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')"/>
                                                </v:var>
                                                <!-- End of FlexioChPrescaler Element -->

                                                <v:var name="FlexioChPrescalerAlternate" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler Alternate"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select alternative clock prescaler used for this Flexio channel.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9a80-a0855fddc77f"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FlexioHasPrescaler') = 'true'"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')"/>
                                                </v:var>
                                                <!-- End of FlexioChPrescalerAlternate Element -->

                                                <v:var name="FlexioChDutyCycle" type="INTEGER">
                                                    <a:a name="LABEL" value="Duty cycle [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                <p>Value for duty cycle used for initialization.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:dd06841e-0cf9-f55f-adc1-17482a31eb93"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i((num:i(node:fallback(
                                                                                    '->node:value(../../../../../PwmChannel/*[
                                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                            ]/PwmDutycycleDefault)',
                                                                                    '16384')) div 32768) * node:fallback('->node:value(../FlexioChPeriod)', '0'))"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=256"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr=". != num:i(
                                                                                (num:i(
                                                                                    node:fallback(
                                                                                        '->node:value(../../../../../PwmChannel/*[
                                                                                                            (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                            (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                                ]/PwmDutycycleDefault
                                                                                        )',
                                                                                        '16384'
                                                                                    )
                                                                                ) div 32768) * ../FlexioChPeriod)"
                                                               true="Calculated duty value differs from logic channel value. Please recalculate value!"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChDutyCycle Element -->

                                                <v:var name="FlexioChPeriod" type="INTEGER">
                                                    <a:a name="LABEL" value="Period [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                <p>Period value used at initialization.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:718b494d-8c7f-4d1f-92f4-af3df55ece71"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i(node:fallback(
                                                        '->node:value(../../../../../PwmChannel/*[
                                                                            (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                            (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                 ]/PwmPeriodDefault)',
                                                        '0'))"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=512"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr=". != num:i(node:value(../../../../../PwmChannel/*[
                                                                                                    (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                    (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                               ]/PwmPeriodDefault))"
                                                               true="Period value differs from logic channel value. Please recalculate value!"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChPeriod Element -->

                                                <v:var name="FlexioChPolarity" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Polarity"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Define the output polarity of the channel.
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ff7e8cbd-e7a0-463c-b4bb-db9555032575"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="node:when(
                                                                                node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                            (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                            (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                       ]/PwmPolarity)', ' ') = 'PWM_HIGH',
                                                                                'FLEXIO_PWM_IP_ACTIVE_HIGH',
                                                                                node:when(
                                                                                            node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                            ]/PwmPolarity)', ' ') = 'PWM_LOW',
                                                                                            'FLEXIO_PWM_IP_ACTIVE_LOW',
                                                                                            'FLEXIO_PWM_IP_ACTIVE_HIGH'
                                                                                        )
                                                                            )"/>
                                                    </a:da>
                                                    <a:da name="RANGE">
                                                        <a:v>FLEXIO_PWM_IP_ACTIVE_HIGH</a:v>
                                                        <a:v>FLEXIO_PWM_IP_ACTIVE_LOW</a:v>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <!-- Get the list of logic channels
                                                            ../../../../../PwmChannel/*[(
                                                                                            Verify that logic channel reference is this hw channel
                                                                                            node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)
                                                                                            ) and (
                                                                                            Verify that logic channel reference is this hw instance
                                                                                            node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..)
                                                                                        Navigate to the required logic channel node
                                                                                        )]/PwmPolarity -->
                                                        <a:tst expr="(../../../../../PwmChannel/*[
                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                 ]/PwmPolarity = 'PWM_HIGH') and
                                                                     (. != 'FLEXIO_PWM_IP_ACTIVE_HIGH')"
                                                               true="Please recalculate value. Logic channel value is different from hardware channel!"/>
                                                        <a:tst expr="(../../../../../PwmChannel/*[
                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                 ]/PwmPolarity = 'PWM_LOW') and
                                                                     (. != 'FLEXIO_PWM_IP_ACTIVE_LOW')"
                                                               true="Please recalculate value. Logic channel value is different from hardware channel!"/>
                                                        <a:tst expr="ecu:get('Pwm.FlexioHasLowMode') = 'false' and
                                                                     (. != 'FLEXIO_PWM_IP_ACTIVE_HIGH')"
                                                               true="Due to FlexIO hardware limitation. Only use FLEXIO_PWM_IP_ACTIVE_HIGH !"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChPolarity Element -->

                                                <v:var name="FlexioChInterrupt" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Flag Event response"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Define what happens when a flag event is generated.
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ff7e8cbd-ef55-463f-b4bb-db94ffff2575"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FlexioIrqType')[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioIrqType')"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(../../../../../../PwmGeneral/PwmNotificationSupported = 'false') and (. != ecu:list('Pwm.FlexioIrqType')[1])"
                                                                true="Please enable PwmGeneral/PwmNotificationSupported when using interrupts for Flexio channel"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChInterrupt Element -->

                                                <v:ctr name="FlexioChIrqCallback" type="IDENTIFIABLE">
                                                    <a:a name="TITLE" value="Notification Callback"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Configure Notification function and parameter for interrupt handler callback.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5dbb-9ab0-a081cfddc79a"/>
                                                    <a:da name="READONLY" value="true"/>

                                                    <v:var name="FlexioChIrqFunctionCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback function"/>
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html>
                                                                    <p>User callback function.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                                </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ee924-f5ff-f5ff-906e-c70d7cdef216"/>
                                                        <!-- <a:da name="EDITABLE" type="XPath" expr="(../../FlexioChInterrupt != ecu:list('Pwm.FlexioIrqType')[1])"/> -->
                                                        <a:da name="READONLY" value="true"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of FlexioChIrqFunctionCallback Container -->

                                                    <v:var name="FlexioChIrqParameterCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback parameter"/>
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html>
                                                                    <p>User callback parameter.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                                </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ee924-ffff-faaf-906e-c70d7cdef222"/>
                                                        <!-- <a:da name="EDITABLE" type="XPath" expr="(../../FlexioChInterrupt != ecu:list('Pwm.FlexioIrqType')[1])"/> -->
                                                        <a:da name="READONLY" value="true"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of FlexioChIrqParameterCallback Container -->
                                                </v:ctr>
                                                <!-- End of FlexioChIrqCallback Container -->

                                            </v:ctr>
                                            <!-- End of PwmFlexioChannels Container -->

                                        </v:lst>
                                        <!-- End of PwmFlexioChannels Array -->

                                    </v:ctr>
                                    <!-- End of PwmFlexio Container -->

                                </v:lst>
                                <!-- End of PwmFlexio Array -->


                            </v:ctr>
                            <!-- End of PwmChannelConfigSet Array -->

                            <!-- @implements PwmGeneral_Object -->
                            <v:ctr name="PwmGeneral" type="IDENTIFIABLE">
                                <a:a name="UUID" value="ECUC:7677cdf1-7411-425e-a261-82a30b18a79a"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Container used for storing the general configuration of Pwm.
                                        </html> ]]>
                                    </a:v>
                                </a:a>

                                <v:var name="PwmMulticoreEnabled" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Switch to enable/disable multicore feature.</p>
                                                <p>
                                                    User can choose ENABLE multicore feature by checking this option, this will force to configure at least 1 ECUC partition in
                                                    <b>PwmChannelEcucPartitionRef</b>, and each Pwm channel in <b>PwmChannel</b> to configure at least 1 ECUC partition reference
                                                    in <b>PwmChannelEcucPartitionRef</b> container to fulfill generating code condition; OR uncheck this option to DISABLE
                                                    multicore feature, performing this action will force user to remove all ECUC partition reference in every Pwm channels contained
                                                    in <b>PwmChannel</b> and in <b>PwmChannelEcucPartitionRef</b>.
                                                </p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2e5f2e8d-3657-4d05-81f1-f3a360ecd67c"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="node:current()='true' and contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k344')"
                                            true="The derivative S32K344 will be treated as a single-core device. So the MulticoreSupport should be disabled"/>
                                        <a:tst expr="node:current()='true' and contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k314')"
                                            true="The derivative S32K314 will be treated as a single-core device. So the MulticoreSupport should be disabled"/>
                                        <a:tst expr="node:current()='true' and contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k1')"
                                            true="The derivative S32K1XX will be treated as a single-core device. So the MulticoreSupport should be disabled"/>
                                    </a:da>
                                </v:var>

                                <!-- @implements PwmDevErrorDetect_Object -->
                                <v:var name="PwmDevErrorDetect" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Switch to enable/disable the development error detection.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2e5e2e8d-3612-4d05-81f1-f3e360ecd67c"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>

                                <!-- @implements PwmDutycycleUpdatedEndperiod_Object -->
                                <v:var name="PwmDutycycleUpdatedEndperiod" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Switch to enable the update of the duty cycle parameter at the end of the current period.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0289ad20-5162-4605-9ba6-dfb6a829eb3e"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmPeriodUpdatedEndperiod_Object -->
                                <v:var name="PwmPeriodUpdatedEndperiod" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Switch to enable the update of the period parameter at the end of the current period.</p>
                                                <note>In current implementation, this option is locked and always enable by default.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1bbf9d6a-7052-4ccf-9346-59c751f2bf72"/>
                                    <a:da name="DEFAULT"  value="true"/>
                                    <a:da name="READONLY" value="true"/>
                                </v:var>

                                <!-- @implements PwmNotificationSupported_Object -->
                                <v:var name="PwmNotificationSupported" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Switch to indicate that the notifications are supported.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:6ca93ef8-bc54-44b8-bc2d-3f2ed21d6498"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmEnableUserModeSupport_Object -->
                                <v:var name="PwmEnableUserModeSupport" type="BOOLEAN">
                                    <a:a name="LABEL" value="PwmEnableUserMode"/>
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>
                                                    If enabled, the Pwm module will adapt to run from User Mode.
                                                </p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:f466f20d-5bba-65fa-be74-2bd1bb030b88"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="EDITABLE" type="XPath" expr="not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k1'))"/>
                                </v:var>

                                <!-- @implements PwmLowPowerStatesSupport_Object -->
                                <v:var name="PwmLowPowerStatesSupport" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                If enabled, hardware offers low power mode and adds all power state management related APIs
                                                (<b>Pwm_SetPowerState</b>, <b>Pwm_GetCurrentPowerState</b>, <b>Pwm_GetTargetPowerState</b>,
                                                <b>Pwm_PreparePowerState</b>, <b>Pwm_Main_PowerTransitionManager</b>),
                                                indicating if the hardware offers low power state management.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:c33a1896-8fc4-4eb7-929a-704ab99e3d3d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmPowerStateAsynchTransitionMode" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Enable the support of the Pwm driver to the asynchronous power state transition.</p>
                                                <note> This feature is not supported and is rejected, as all hardware modules do not support asynchronous power state transitions.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:ac453b11-25dd-40cf-9f52-b9d4b8c7b070"/>
                                    <a:da name="READONLY" value="true"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmEnableDualClockMode_Object -->
                                <v:var name="PwmEnableDualClockMode" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Switch to enable/disable dual clock mode feature, which will add/remove the service <b>Pwm_SetClockMode</b>() from the code.</p>
                                                <p>This feature is used when the prescaler value needs to be changed to maintain same period at different frequency.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:72b6baa6-32e9-4f65-b9b8-57e1ae08e4c6"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmEnableExternalTrigger_Object -->
                                <v:var name="PwmEnableExternalTrigger" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Enable external trigger generation.</p>
                                                <p>This option will activate the use of <b>PwmEnableTrigger</b> and <b>PwmDisableTrigger</b>.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:921edfe4-caae-4a6c-967e-b286e6f33bd5"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmEnablePhaseShift" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Enable phase-shift feature.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:5a2930e5-ef7a-4949-c4b6-bffe0f7dea3f"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmEnableMaskOutputs" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Enable mask output feature, which will add/remove the services <b>Pwm_MaskOutputs</b> and <b>Pwm_UnMaskOutputs</b> from the code.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76d1d3-ac8a-4ed0-8113-06679cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>
                                
                                <!-- @implements PwmFaultSupported_Object -->
                                <v:var name="PwmFaultSupported" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                          <html>
                                                This enables the fault functionality. <p></p>
                                          </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:81a1ac8a-f248-4c0b-904e-1cd529672501"/>
                                    <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FTM_PWM_HAS_FAULT') = 'true'"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmMultiChannelSync_Object -->
                                <v:var name="PwmMultiChannelSync" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Enable the update synchronous feature for several channels.</p>
                                                <p>
                                                    This option will activate the use of <b>PwmSetDutyCycle_NoUpdate</b>, <b>PwmSetPeriodAndDuty_NoUpdate</b> and
                                                    <b>PwmSetPhaseShift_NoUpdate</b> or <b>PwmSetDutyPhaseShift</b>.
                                                </p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:95392817-1d9a-48b5-9cd1-19f8a90e8e89"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (. = 'true') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetDutyCycle_NoUpdate = 'false') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetPeriodAndDuty_NoUpdate = 'false') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetPhaseShift_NoUpdate = 'false') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetDutyPhaseShift = 'false')
                                                     )"
                                               true="Please enable PwmSetDutyCycle_NoUpdate or PwmSetPeriodAndDuty_NoUpdate  or PwmSetPhaseShift_NoUpdate or PwmSetDutyPhaseShift to support the usage of PwmMultiChannelSync option."/>
                                    </a:da>
                                </v:var>

                                <!-- @implements PwmIndex_Object -->
                                <v:var name="PwmIndex" type="INTEGER">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Specify the InstanceId of this module instance. If only one instance is present it shall have the ID 0.</p>
                                                <note>In current implementation, this feature is not used.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:3a1c0fa1-ba15-4daa-92f0-049c004412b7"/>
                                    <a:da name="READONLY" value="true"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>

                                <!-- @implements PwmEcucPartitionRef_Object -->
                                <v:lst name="PwmEcucPartitionRef">
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(count(./*) = 0) and (./../PwmMulticoreEnabled = 'true')"
                                               true="Please add at least 1 reference partition for this list, because multicore feature enabled as a result of PwmMulticoreEnabled option has been checked."/>
                                        <a:tst expr="(count(./*) != 0) and (./../PwmMulticoreEnabled = 'false')"
                                               true="Please remove all partition(s) in this list, because multicore feature disabled as a result of PwmMulticoreEnabled option has been unchecked."/>
                                    </a:da>

                                    <v:ref name="PwmEcucPartitionRef" type="REFERENCE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    <p>
                                                        Maps the Pwm driver to zero or multiple ECUC partitions to make the driver API available in the according partition.
                                                        Depending on the addressed timer resource the interfaces operate as follows.
                                                    </p>
                                                    <p>
                                                        When users choose ENABLE multicore feature by checking <b>PwmMulticoreEnabled</b> option, this will force to configure
                                                        at least 1 ECUC partition in this list that is referenced from ECUC module; OR when DISABLE multicore feature,
                                                        user have to remove all ECUC partitions in this list.
                                                    </p>
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                        <a:a name="SCOPE" value="ECU"/>
                                        <a:a name="UUID" value="ECUC:f86d720b-a1e5-4f3f-a656-ddd9601b8563"/>
                                        <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="not(node:refexists(.))"
                                                   true="Empty partition reference."/>
                                            <a:tst expr="text:uniq(../*, .)"
                                                   false="Duplicate partition."/>
                                            <a:tst expr="node:refexists(.) and count(text:grep(node:refs('ASPathDataOfSchema:/TS_T40D2M10I1R0/Os')/OsApplication/*/OsAppEcucPartitionRef, .)) = 0"
                                                   true="This ECUC partition must be defined in OS."/>
                                        </a:da>
                                    </v:ref>
                                </v:lst>

                                <v:ref name="PwmKernelEcucPartitionRef" type="REFERENCE">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>
                                                    Maps the Pwm kernel to zero or one ECUC partitions to assign the driver kernel to a certain core.
                                                    The ECUC partition referenced is a subset of the ECUC partitions where the Pwm driver is mapped to.
                                                </p>
                                                <note>This feature is not supported and is rejected.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                    <a:a name="SCOPE" value="ECU"/>
                                    <a:a name="UUID" value="ECUC:2257ea54-eeee-4b76-84b2-e12939218b57"/>
                                    <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:da name="READONLY" value="true"/>
                                </v:ref>

                                <v:lst name="PwmPowerStateConfig" type="MAP">
                                    <a:da name="EDITABLE" type="XPath" expr=" (../PwmPowerStateAsynchTransitionMode = 'true' )"/>

                                    <v:ctr name="PwmPowerStateConfig" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    <p>Each instance of this parameter defines a power state and the callback to be called when this power state is reached.</p>
                                                    <note>This feature is not supported and is rejected, as all hardware modules do not support asynchronous power state transitions.</note>
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:de14dbaf-3499-4b7e-89de-65775795e1b9"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>

                                        <v:var name="PwmPowerState" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Each instance of this parameter describes a different power state supported by the Pwm hardware.
                                                        It should be defined by the hardware supplier and used by the Pwm Driver to reference specific HW configurations which set the Pwm HW module in the referenced power state.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                            <a:a name="UUID" value="ECUC:19cc5c0f-3c89-4ccb-a19a-09d55a125a4c"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=9223372036854775807"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>

                                        <v:var name="PwmPowerStateReadyCbkRef" type="FUNCTION-NAME">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Each instance of this parameter contains a reference to a power mode callback defined in a CDD or IoHwAbs component.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:da name="DEFAULT" value="NULL_PTR"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:08fbf442-0ed3-474d-8b47-977c9fc0cb23"/>
                                        </v:var>

                                    </v:ctr>
                                </v:lst>

                            </v:ctr>

                            <!-- @implements PwmConfigurationOfOptApiServices_Object -->
                            <v:ctr name="PwmConfigurationOfOptApiServices" type="IDENTIFIABLE">
                                <a:a name="UUID" value="ECUC:b01829e6-fff6-4134-acdf-8422daea3c43"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Container used for storing the configuration of all optional API's.
                                        </html> ]]>
                                    </a:v>
                                </a:a>

                                <!-- @implements PwmDeInitApi_Object -->
                                <v:var name="PwmDeInitApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_DeInit</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_DE_INIT_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a1becc10-ea4e-4eea-aa13-b8833828cfe4"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>

                                <!-- @implements PwmGetOutputState_Object -->
                                <v:var name="PwmGetOutputState" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_GetOutputState</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_GET_OUTPUT_STATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:c2499d37-6b19-4024-9211-91bf6c2f12ee"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetDutyCycle_Object -->
                                <v:var name="PwmSetDutyCycle" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetDutyCycle</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_DUTY_CYCLE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:c3a2208e-ef8d-4847-b930-a20dc26475b7"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetOutputToIdle_Object -->
                                <v:var name="PwmSetOutputToIdle" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetOutputToIdle</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_OUTPUT_TO_IDLE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:28b9df5c-5812-45c7-bdda-ba78f16f13ab"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetPeriodAndDuty_Object -->
                                <v:var name="PwmSetPeriodAndDuty" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPeriodAndDuty</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PERIOD_AND_DUTY_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a907a6c3-886d-4fb6-bb95-33c37e19ffdc"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmVersionInfoApi_Object -->
                                <v:var name="PwmVersionInfoApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_GetVersionInfo</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_VERSION_INFO_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a07dd9bf-bc10-4d33-8b49-096098c1a7c0"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmGetChannelStateApi_Object -->
                                <v:var name="PwmGetChannelStateApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_GetChannelState</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_GET_CHANNEL_STATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a9a228b3-f6c9-40b9-aaa0-8b54d271aa88"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetDutyCycle_NoUpdate" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetDutyCycle_NoUpdate</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_DUTY_CYCLE_NO_UPDATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:45dcdf29-42fb-4f27-82f8-66d726ff4902"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetPeriodAndDuty_NoUpdate" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPeriodAndDuty_NoUpdate</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PERIOD_AND_DUTY_NO_UPDATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76c1d3-ac80-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetPhaseShift" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPhaseShift</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PHASE_SHIFT_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0576c1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetPhaseShift_NoUpdate" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPhaseShift_NoUpdate</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PHASE_SHIFT_NO_UPDATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76c1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetDutyPhaseShift_Object -->
                                <v:var name="PwmSetDutyPhaseShift" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetDutyPhaseShift</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_DUTY_PHASE_SHIFT_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76c1d3-ac8a-4ed0-8113-01997cdfe19a"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetChannelDeadTime" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetChannelDeadTime</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SETCHANNELDEADTIME_API</b> define macro.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76d1d3-ac8a-4ed0-8113-06479cdfe21j"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmForceOutputToZeroApi_Object -->
                                <v:var name="PwmForceOutputToZeroApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_ForceOutputToZero</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_FORCE_OUTPUT_TO_ZERO_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:4b5aa6c3-0ba5-467c-bfd2-b72e96437dfa"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmEnableTrigger" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_EnableTrigger</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_ENABLE_TRIGGER_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmEnableExternalTrigger</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmEnableExternalTrigger) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0ea6c1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmDisableTrigger" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_DisableTrigger</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_DISABLE_TRIGGER_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmEnableExternalTrigger</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmEnableExternalTrigger) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0ec6c1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmResetCounter" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_ResetCounterEnable</b>() and <b>Pwm_ResetCounterDisable</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_RESET_COUNTER_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76d1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>


                            </v:ctr>

                            <!-- @implements CommonPublishedInformation_Object -->
                            <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Common container, aggregated by all modules. It contains published information about vendor and versions.
                                        </html> ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:c83c2323-3489-4755-a0dd-44ff3afc7049"/>


                                <!-- @implements ArReleaseMajorVersion_Object -->
                                <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:dc80b0ef-2fff-4bf5-8bb9-ba446f8c7114"/>
                                    <a:da name="DEFAULT" value="4"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=4"/>
                                        <a:tst expr="&lt;=4"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements ArReleaseMinorVersion_Object -->
                                <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:803ea582-0444-42d5-a64b-f57f75b5b5b8"/>
                                    <a:da name="DEFAULT" value="4"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=4"/>
                                        <a:tst expr="&lt;=4"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements ArReleaseRevisionVersion_Object -->
                                <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Revision version number of AUTOSAR specification on which the appropriate implementation is based on.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:3acfd1d3-e160-4fed-92d2-171236e5179a"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0"/>
                                        <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements ModuleId_Object -->
                                <v:var name="ModuleId" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Module ID of this module from Module List.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:ee5986ba-896b-4a84-8d2e-81d7bbeeea70"/>
                                    <a:da name="DEFAULT" value="121"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=121"/>
                                        <a:tst expr="&lt;=121"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements SwMajorVersion_Object -->
                                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Major version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2d8eded7-6b04-4d65-9d6f-ab31ab4b64f6"/>
                                    <a:da name="DEFAULT" value="1"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=1"/>
                                        <a:tst expr="&lt;=1"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements SwMinorVersion_Object -->
                                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:b871f486-2437-48dc-8739-1b80e469c37c"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0"/>
                                        <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements SwPatchVersion_Object -->
                                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:472aa408-c6fc-4b92-b23e-d582be0b1809"/>
                                    <a:da name="DEFAULT" value="1"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=1"/>
                                        <a:tst expr="&lt;=1"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements VendorApiInfix_Object -->
                                <v:var name="VendorApiInfix" type="STRING_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                                This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                                                &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                                E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                                This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:d1d8e60f-c31e-43f1-889f-cd7ca3b418b4"/>
                                    <a:da name="DEFAULT" value=""/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:da name="READONLY" value="true"/>
                                </v:var>


                                <!-- @implements VendorId_Object -->
                                <v:var name="VendorId" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:3e0b8129-c679-49d1-a6e5-7f9d9c1e9a31"/>
                                    <a:da name="DEFAULT" value="43"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=43"/>
                                        <a:tst expr="&lt;=43"/>
                                    </a:da>
                                </v:var>

                            </v:ctr>

                        </v:ctr>

                    </d:chc>



                    <d:chc name="Pwm_EcuParameterDefinition" type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">

                        <d:ctr type="AR-ELEMENT">
                            <a:a name="UUID" value="ECUC:3c13428f-5075-4613-a9eb-46c30bbf037b"/>
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
                            <d:lst name="MODULE_REF">
                                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D2M10I1R0/Pwm"/>
                            </d:lst>
                        </d:ctr>

                    </d:chc>



                    <d:chc name="Pwm_ModuleDescription" type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">

                        <d:ctr type="AR-ELEMENT">
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                            <d:var name="MODULE_ID" type="INTEGER">
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:var>

                            <d:ref type="RECOMMENDED_CONFIGURATION">
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>

                            <d:ref type="PRE_CONFIGURED_CONF">
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>

                            <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" value="ASPath:/TS_T40D2M10I1R0/Pwm"/>
                        </d:ctr>
                    </d:chc>

                </d:lst>
            </d:ctr>
        </d:lst>
    </d:ctr>
</datamodel>

