/**
 * \file
 *
 * \brief AUTOSAR Demo_DAG
 *
 * This file contains the implementation of the AUTOSAR
 * module Demo_DAG.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2016 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

#if (!defined DEM_H)
#define DEM_H

/*==[Includes]================================================================*/

#include <Dem_StubCfg.h>
#include <Dem_Types.h>
#include <Dcm_Types.h>

/*==[Macros]==================================================================*/

/* Configuration macros */
#if (!defined EBSTUBS_MAX_CALLS_DEM)
#define EBSTUBS_MAX_CALLS_DEM 1U
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETVERSIONINFO)
#define EBSTUBS_MAX_CALLS_DEM_GETVERSIONINFO EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_PREINIT)
#define EBSTUBS_MAX_CALLS_DEM_PREINIT EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_INIT)
#define EBSTUBS_MAX_CALLS_DEM_INIT EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SHUTDOWN)
#define EBSTUBS_MAX_CALLS_DEM_SHUTDOWN EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_REPORTERRORSTATUS)
#define EBSTUBS_MAX_CALLS_DEM_REPORTERRORSTATUS EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETEVENTSTATUS)
#define EBSTUBS_MAX_CALLS_DEM_SETEVENTSTATUS EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_RESETEVENTSTATUS)
#define EBSTUBS_MAX_CALLS_DEM_RESETEVENTSTATUS EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_PRESTOREFREEZEFRAME)
#define EBSTUBS_MAX_CALLS_DEM_PRESTOREFREEZEFRAME EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_CLEARPRESTOREDFREEZEFRAME)
#define EBSTUBS_MAX_CALLS_DEM_CLEARPRESTOREDFREEZEFRAME EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLESTATE)
#define EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLESTATE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLECNTVALUE)
#define EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLECNTVALUE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLESTATE)
#define EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLESTATE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLECOUNTERVALUE)
#define EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLECOUNTERVALUE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEVENTSTATUS)
#define EBSTUBS_MAX_CALLS_DEM_GETEVENTSTATUS EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEVENTFAILED)
#define EBSTUBS_MAX_CALLS_DEM_GETEVENTFAILED EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEVENTTESTED)
#define EBSTUBS_MAX_CALLS_DEM_GETEVENTTESTED EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT)
#define EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETENABLECONDITION)
#define EBSTUBS_MAX_CALLS_DEM_SETENABLECONDITION EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETSTORAGECONDITION)
#define EBSTUBS_MAX_CALLS_DEM_SETSTORAGECONDITION EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETFAULTDETECTIONCOUNTER)
#define EBSTUBS_MAX_CALLS_DEM_GETFAULTDETECTIONCOUNTER EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETINDICATORSTATUS)
#define EBSTUBS_MAX_CALLS_DEM_GETINDICATORSTATUS EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA)
#define EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD)
#define EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEVENTMEMORYOVERFLOW)
#define EBSTUBS_MAX_CALLS_DEM_GETEVENTMEMORYOVERFLOW EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION)
#define EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER)
#define EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETFREEZEFRAMERECORDFILTER)
#define EBSTUBS_MAX_CALLS_DEM_SETFREEZEFRAMERECORDFILTER EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETDTCSTATUSAVAILABILITYMASK)
#define EBSTUBS_MAX_CALLS_DEM_GETDTCSTATUSAVAILABILITYMASK EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETNUMBEROFFILTEREDDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETNUMBEROFFILTEREDDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETDTCBYOCCURRENCETIME)
#define EBSTUBS_MAX_CALLS_DEM_GETDTCBYOCCURRENCETIME EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDRECORD)
#define EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDRECORD EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDFDC)
#define EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDFDC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY)
#define EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETTRANSLATIONTYPE)
#define EBSTUBS_MAX_CALLS_DEM_GETTRANSLATIONTYPE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETSEVERITYOFDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETSEVERITYOFDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETFUNCTIONALUNITOFDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETFUNCTIONALUNITOFDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DISABLEDTCRECORDUPDATE)
#define EBSTUBS_MAX_CALLS_DEM_DISABLEDTCRECORDUPDATE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_ENABLEDTCRECORDUPDATE)
#define EBSTUBS_MAX_CALLS_DEM_ENABLEDTCRECORDUPDATE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD)
#define EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC)
#define EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_CLEARDTC)
#define EBSTUBS_MAX_CALLS_DEM_CLEARDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DISABLEDTCSETTING)
#define EBSTUBS_MAX_CALLS_DEM_DISABLEDTCSETTING EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_ENABLEDTCSETTING)
#define EBSTUBS_MAX_CALLS_DEM_ENABLEDTCSETTING EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMCANCELOPERATION)
#define EBSTUBS_MAX_CALLS_DEM_DCMCANCELOPERATION EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETEVENTDISABLED)
#define EBSTUBS_MAX_CALLS_DEM_SETEVENTDISABLED EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_REPIUMPRFAULTDETECT)
#define EBSTUBS_MAX_CALLS_DEM_REPIUMPRFAULTDETECT EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENLOCK)
#define EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENLOCK EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENRELEASE)
#define EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENRELEASE EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE08)
#define EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE08 EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE0B)
#define EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE0B EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID01)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID01 EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID1C)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID1C EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID21)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID21 EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID30)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID30 EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID31)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID31 EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID41)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID41 EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4D)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4D EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4E)
#define EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4E EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME)
#define EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_GETDTCOFOBDFREEZEFRAME)
#define EBSTUBS_MAX_CALLS_DEM_GETDTCOFOBDFREEZEFRAME EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_SETPTOSTATUS)
#define EBSTUBS_MAX_CALLS_DEM_SETPTOSTATUS EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_MAINFUNCTION)
#define EBSTUBS_MAX_CALLS_DEM_MAINFUNCTION EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMSETSTOREDDTCFILTER)
#define EBSTUBS_MAX_CALLS_DEM_DCMSETSTOREDDTCFILTER EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMGETNEXTFILTEREDSTOREDDTC)
#define EBSTUBS_MAX_CALLS_DEM_DCMGETNEXTFILTEREDSTOREDDTC EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_MAX_CALLS_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION)
#define EBSTUBS_MAX_CALLS_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION EBSTUBS_MAX_CALLS_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM)
#define EBSTUBS_FUNCENABLED_DEM STD_ON
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETVERSIONINFO)
#define EBSTUBS_FUNCENABLED_DEM_GETVERSIONINFO EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_PREINIT)
#define EBSTUBS_FUNCENABLED_DEM_PREINIT EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_INIT)
#define EBSTUBS_FUNCENABLED_DEM_INIT EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SHUTDOWN)
#define EBSTUBS_FUNCENABLED_DEM_SHUTDOWN EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_REPORTERRORSTATUS)
#define EBSTUBS_FUNCENABLED_DEM_REPORTERRORSTATUS EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETEVENTSTATUS)
#define EBSTUBS_FUNCENABLED_DEM_SETEVENTSTATUS EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_RESETEVENTSTATUS)
#define EBSTUBS_FUNCENABLED_DEM_RESETEVENTSTATUS EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_PRESTOREFREEZEFRAME)
#define EBSTUBS_FUNCENABLED_DEM_PRESTOREFREEZEFRAME EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_CLEARPRESTOREDFREEZEFRAME)
#define EBSTUBS_FUNCENABLED_DEM_CLEARPRESTOREDFREEZEFRAME EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLESTATE)
#define EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLESTATE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLECNTVALUE)
#define EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLECNTVALUE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLESTATE)
#define EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLESTATE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLECOUNTERVALUE)
#define EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLECOUNTERVALUE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEVENTSTATUS)
#define EBSTUBS_FUNCENABLED_DEM_GETEVENTSTATUS EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEVENTFAILED)
#define EBSTUBS_FUNCENABLED_DEM_GETEVENTFAILED EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEVENTTESTED)
#define EBSTUBS_FUNCENABLED_DEM_GETEVENTTESTED EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETDTCOFEVENT)
#define EBSTUBS_FUNCENABLED_DEM_GETDTCOFEVENT EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETENABLECONDITION)
#define EBSTUBS_FUNCENABLED_DEM_SETENABLECONDITION EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETSTORAGECONDITION)
#define EBSTUBS_FUNCENABLED_DEM_SETSTORAGECONDITION EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETFAULTDETECTIONCOUNTER)
#define EBSTUBS_FUNCENABLED_DEM_GETFAULTDETECTIONCOUNTER EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETINDICATORSTATUS)
#define EBSTUBS_FUNCENABLED_DEM_GETINDICATORSTATUS EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEVENTFREEZEFRAMEDATA)
#define EBSTUBS_FUNCENABLED_DEM_GETEVENTFREEZEFRAMEDATA EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEVENTEXTENDEDDATARECORD)
#define EBSTUBS_FUNCENABLED_DEM_GETEVENTEXTENDEDDATARECORD EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEVENTMEMORYOVERFLOW)
#define EBSTUBS_FUNCENABLED_DEM_GETEVENTMEMORYOVERFLOW EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETDTCSUPPRESSION)
#define EBSTUBS_FUNCENABLED_DEM_SETDTCSUPPRESSION EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETDTCFILTER)
#define EBSTUBS_FUNCENABLED_DEM_SETDTCFILTER EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETFREEZEFRAMERECORDFILTER)
#define EBSTUBS_FUNCENABLED_DEM_SETFREEZEFRAMERECORDFILTER EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETSTATUSOFDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETSTATUSOFDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETDTCSTATUSAVAILABILITYMASK)
#define EBSTUBS_FUNCENABLED_DEM_GETDTCSTATUSAVAILABILITYMASK EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETNUMBEROFFILTEREDDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETNUMBEROFFILTEREDDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETDTCBYOCCURRENCETIME)
#define EBSTUBS_FUNCENABLED_DEM_GETDTCBYOCCURRENCETIME EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDRECORD)
#define EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDRECORD EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDFDC)
#define EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDFDC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDSEVERITY)
#define EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDSEVERITY EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETTRANSLATIONTYPE)
#define EBSTUBS_FUNCENABLED_DEM_GETTRANSLATIONTYPE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETSEVERITYOFDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETSEVERITYOFDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETFUNCTIONALUNITOFDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETFUNCTIONALUNITOFDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DISABLEDTCRECORDUPDATE)
#define EBSTUBS_FUNCENABLED_DEM_DISABLEDTCRECORDUPDATE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_ENABLEDTCRECORDUPDATE)
#define EBSTUBS_FUNCENABLED_DEM_ENABLEDTCRECORDUPDATE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYRECORD)
#define EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYRECORD EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETSIZEOFFREEZEFRAMEBYDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETSIZEOFFREEZEFRAMEBYDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETEXTENDEDDATARECORDBYDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETEXTENDEDDATARECORDBYDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC)
#define EBSTUBS_FUNCENABLED_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_CLEARDTC)
#define EBSTUBS_FUNCENABLED_DEM_CLEARDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DISABLEDTCSETTING)
#define EBSTUBS_FUNCENABLED_DEM_DISABLEDTCSETTING EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_ENABLEDTCSETTING)
#define EBSTUBS_FUNCENABLED_DEM_ENABLEDTCSETTING EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMCANCELOPERATION)
#define EBSTUBS_FUNCENABLED_DEM_DCMCANCELOPERATION EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETEVENTDISABLED)
#define EBSTUBS_FUNCENABLED_DEM_SETEVENTDISABLED EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_REPIUMPRFAULTDETECT)
#define EBSTUBS_FUNCENABLED_DEM_REPIUMPRFAULTDETECT EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENLOCK)
#define EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENLOCK EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENRELEASE)
#define EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENRELEASE EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE08)
#define EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE08 EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE0B)
#define EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE0B EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID01)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID01 EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID1C)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID1C EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID21)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID21 EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID30)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID30 EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID31)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID31 EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID41)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID41 EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4D)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4D EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4E)
#define EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4E EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_READDATAOFOBDFREEZEFRAME)
#define EBSTUBS_FUNCENABLED_DEM_READDATAOFOBDFREEZEFRAME EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_GETDTCOFOBDFREEZEFRAME)
#define EBSTUBS_FUNCENABLED_DEM_GETDTCOFOBDFREEZEFRAME EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_SETPTOSTATUS)
#define EBSTUBS_FUNCENABLED_DEM_SETPTOSTATUS EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_MAINFUNCTION)
#define EBSTUBS_FUNCENABLED_DEM_MAINFUNCTION EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMSETSTOREDDTCFILTER)
#define EBSTUBS_FUNCENABLED_DEM_DCMSETSTOREDDTCFILTER EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMGETNEXTFILTEREDSTOREDDTC)
#define EBSTUBS_FUNCENABLED_DEM_DCMGETNEXTFILTEREDSTOREDDTC EBSTUBS_FUNCENABLED_DEM
#endif

#if (!defined EBSTUBS_FUNCENABLED_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION)
#define EBSTUBS_FUNCENABLED_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION EBSTUBS_FUNCENABLED_DEM
#endif

/* Dem_VersionMacros_Dummy */
#define DEM_AR_RELEASE_MAJOR_VERSION 4U
#define DEM_AR_RELEASE_MINOR_VERSION 0U

/*==[Types]===================================================================*/

typedef uint8 Dem_VersionMacros_Dummy;

#if (EBSTUBS_FUNCENABLED_DEM_GETVERSIONINFO == STD_ON)
typedef void(*Dem_GetVersionInfo_CalloutType)
(
   P2VAR(Std_VersionInfoType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetVersionInfo_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETVERSIONINFO > 1)
    Std_VersionInfoType versioninfo_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETVERSIONINFO];
#endif

    Std_VersionInfoType versioninfo_Out;
} Dem_GetVersionInfo_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_PREINIT == STD_ON)
typedef void(*Dem_PreInit_CalloutType)
(
   P2CONST(Dem_ConfigType, TYPEDEF, EBSTUBS_APPL_CONST)
);
typedef struct
{
   uint32 Count;
   Dem_PreInit_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_PREINIT > 1)
    P2CONST(Dem_ConfigType, TYPEDEF, EBSTUBS_APPL_CONST) ConfigPtr_Ary[EBSTUBS_MAX_CALLS_DEM_PREINIT];
#endif

    P2CONST(Dem_ConfigType, TYPEDEF, EBSTUBS_APPL_CONST) ConfigPtr;
} Dem_PreInit_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_INIT == STD_ON)
typedef void(*Dem_Init_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   Dem_Init_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_INIT > 1)
#endif

} Dem_Init_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SHUTDOWN == STD_ON)
typedef void(*Dem_Shutdown_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   Dem_Shutdown_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SHUTDOWN > 1)
#endif

} Dem_Shutdown_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPORTERRORSTATUS == STD_ON)
typedef void(*Dem_ReportErrorStatus_CalloutType)
(
   Dem_EventIdType,
   Dem_EventStatusType
);
typedef struct
{
   uint32 Count;
   Dem_ReportErrorStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_REPORTERRORSTATUS > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_REPORTERRORSTATUS];
    Dem_EventStatusType EventStatus_Ary[EBSTUBS_MAX_CALLS_DEM_REPORTERRORSTATUS];
#endif

    Dem_EventIdType EventId;
    Dem_EventStatusType EventStatus;
} Dem_ReportErrorStatus_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETEVENTSTATUS == STD_ON)
typedef Std_ReturnType(*Dem_SetEventStatus_CalloutType)
(
   Dem_EventIdType,
   Dem_EventStatusType
);
typedef struct
{
   uint32 Count;
   Dem_SetEventStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETEVENTSTATUS > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_SETEVENTSTATUS];
    Dem_EventStatusType EventStatus_Ary[EBSTUBS_MAX_CALLS_DEM_SETEVENTSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETEVENTSTATUS];
#endif

    Dem_EventIdType EventId;
    Dem_EventStatusType EventStatus;
   Std_ReturnType RetVal;
} Dem_SetEventStatus_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_RESETEVENTSTATUS == STD_ON)
typedef Std_ReturnType(*Dem_ResetEventStatus_CalloutType)
(
   Dem_EventIdType
);
typedef struct
{
   uint32 Count;
   Dem_ResetEventStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_RESETEVENTSTATUS > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_RESETEVENTSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_RESETEVENTSTATUS];
#endif

    Dem_EventIdType EventId;
   Std_ReturnType RetVal;
} Dem_ResetEventStatus_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_PRESTOREFREEZEFRAME == STD_ON)
typedef Std_ReturnType(*Dem_PrestoreFreezeFrame_CalloutType)
(
   Dem_EventIdType
);
typedef struct
{
   uint32 Count;
   Dem_PrestoreFreezeFrame_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_PRESTOREFREEZEFRAME > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_PRESTOREFREEZEFRAME];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_PRESTOREFREEZEFRAME];
#endif

    Dem_EventIdType EventId;
   Std_ReturnType RetVal;
} Dem_PrestoreFreezeFrame_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_CLEARPRESTOREDFREEZEFRAME == STD_ON)
typedef Std_ReturnType(*Dem_ClearPrestoredFreezeFrame_CalloutType)
(
   Dem_EventIdType
);
typedef struct
{
   uint32 Count;
   Dem_ClearPrestoredFreezeFrame_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_CLEARPRESTOREDFREEZEFRAME > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_CLEARPRESTOREDFREEZEFRAME];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_CLEARPRESTOREDFREEZEFRAME];
#endif

    Dem_EventIdType EventId;
   Std_ReturnType RetVal;
} Dem_ClearPrestoredFreezeFrame_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLESTATE == STD_ON)
typedef Std_ReturnType(*Dem_SetOperationCycleState_CalloutType)
(
   uint8,
   Dem_OperationCycleStateType
);
typedef struct
{
   uint32 Count;
   Dem_SetOperationCycleState_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLESTATE > 1)
    uint8 OperationCycleId_Ary[EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLESTATE];
    Dem_OperationCycleStateType CycleState_Ary[EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLESTATE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLESTATE];
#endif

    uint8 OperationCycleId;
    Dem_OperationCycleStateType CycleState;
   Std_ReturnType RetVal;
} Dem_SetOperationCycleState_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLECNTVALUE == STD_ON)
typedef Std_ReturnType(*Dem_SetOperationCycleCntValue_CalloutType)
(
   uint8,
   uint8
);
typedef struct
{
   uint32 Count;
   Dem_SetOperationCycleCntValue_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLECNTVALUE > 1)
    uint8 OperationCycleId_Ary[EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLECNTVALUE];
    uint8 CounterValue_Ary[EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLECNTVALUE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETOPERATIONCYCLECNTVALUE];
#endif

    uint8 OperationCycleId;
    uint8 CounterValue;
   Std_ReturnType RetVal;
} Dem_SetOperationCycleCntValue_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLESTATE == STD_ON)
typedef Std_ReturnType(*Dem_SetAgingCycleState_CalloutType)
(
   uint8
);
typedef struct
{
   uint32 Count;
   Dem_SetAgingCycleState_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLESTATE > 1)
    uint8 AgingCycleId_Ary[EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLESTATE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLESTATE];
#endif

    uint8 AgingCycleId;
   Std_ReturnType RetVal;
} Dem_SetAgingCycleState_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLECOUNTERVALUE == STD_ON)
typedef Std_ReturnType(*Dem_SetAgingCycleCounterValue_CalloutType)
(
   uint8
);
typedef struct
{
   uint32 Count;
   Dem_SetAgingCycleCounterValue_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLECOUNTERVALUE > 1)
    uint8 CounterValue_Ary[EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLECOUNTERVALUE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETAGINGCYCLECOUNTERVALUE];
#endif

    uint8 CounterValue;
   Std_ReturnType RetVal;
} Dem_SetAgingCycleCounterValue_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTSTATUS == STD_ON)
typedef Std_ReturnType(*Dem_GetEventStatus_CalloutType)
(
   Dem_EventIdType,
   P2VAR(Dem_EventStatusExtendedType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetEventStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEVENTSTATUS > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTSTATUS];
    Dem_EventStatusExtendedType EventStatusExtended_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTSTATUS];
#endif

    Dem_EventIdType EventId;
    Dem_EventStatusExtendedType EventStatusExtended_Out;
   Std_ReturnType RetVal;
} Dem_GetEventStatus_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTFAILED == STD_ON)
typedef Std_ReturnType(*Dem_GetEventFailed_CalloutType)
(
   Dem_EventIdType,
   P2VAR(boolean, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetEventFailed_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEVENTFAILED > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFAILED];
    boolean EventFailed_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFAILED];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFAILED];
#endif

    Dem_EventIdType EventId;
    boolean EventFailed_Out;
   Std_ReturnType RetVal;
} Dem_GetEventFailed_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTTESTED == STD_ON)
typedef Std_ReturnType(*Dem_GetEventTested_CalloutType)
(
   Dem_EventIdType,
   P2VAR(boolean, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetEventTested_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEVENTTESTED > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTTESTED];
    boolean EventTested_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTTESTED];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTTESTED];
#endif

    Dem_EventIdType EventId;
    boolean EventTested_Out;
   Std_ReturnType RetVal;
} Dem_GetEventTested_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCOFEVENT == STD_ON)
typedef Std_ReturnType(*Dem_GetDTCOfEvent_CalloutType)
(
   Dem_EventIdType,
   Dem_DTCFormatType,
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetDTCOfEvent_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT];
    Dem_DTCFormatType DTCFormat_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT];
    uint32 DTCOfEvent_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFEVENT];
#endif

    Dem_EventIdType EventId;
    Dem_DTCFormatType DTCFormat;
    uint32 DTCOfEvent_Out;
   Std_ReturnType RetVal;
} Dem_GetDTCOfEvent_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETENABLECONDITION == STD_ON)
typedef Std_ReturnType(*Dem_SetEnableCondition_CalloutType)
(
   uint8,
   boolean
);
typedef struct
{
   uint32 Count;
   Dem_SetEnableCondition_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETENABLECONDITION > 1)
    uint8 EnableConditionID_Ary[EBSTUBS_MAX_CALLS_DEM_SETENABLECONDITION];
    boolean ConditionFulfilled_Ary[EBSTUBS_MAX_CALLS_DEM_SETENABLECONDITION];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETENABLECONDITION];
#endif

    uint8 EnableConditionID;
    boolean ConditionFulfilled;
   Std_ReturnType RetVal;
} Dem_SetEnableCondition_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETSTORAGECONDITION == STD_ON)
typedef Std_ReturnType(*Dem_SetStorageCondition_CalloutType)
(
   uint8,
   boolean
);
typedef struct
{
   uint32 Count;
   Dem_SetStorageCondition_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETSTORAGECONDITION > 1)
    uint8 StorageConditionID_Ary[EBSTUBS_MAX_CALLS_DEM_SETSTORAGECONDITION];
    boolean ConditionFulfilled_Ary[EBSTUBS_MAX_CALLS_DEM_SETSTORAGECONDITION];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETSTORAGECONDITION];
#endif

    uint8 StorageConditionID;
    boolean ConditionFulfilled;
   Std_ReturnType RetVal;
} Dem_SetStorageCondition_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFAULTDETECTIONCOUNTER == STD_ON)
typedef Std_ReturnType(*Dem_GetFaultDetectionCounter_CalloutType)
(
   Dem_EventIdType,
   P2VAR(sint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetFaultDetectionCounter_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETFAULTDETECTIONCOUNTER > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETFAULTDETECTIONCOUNTER];
    sint8 FaultDetectionCounter_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETFAULTDETECTIONCOUNTER];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETFAULTDETECTIONCOUNTER];
#endif

    Dem_EventIdType EventId;
    sint8 FaultDetectionCounter_Out;
   Std_ReturnType RetVal;
} Dem_GetFaultDetectionCounter_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINDICATORSTATUS == STD_ON)
typedef Std_ReturnType(*Dem_GetIndicatorStatus_CalloutType)
(
   uint8,
   P2VAR(Dem_IndicatorStatusType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetIndicatorStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETINDICATORSTATUS > 1)
    uint8 IndicatorId_Ary[EBSTUBS_MAX_CALLS_DEM_GETINDICATORSTATUS];
    Dem_IndicatorStatusType IndicatorStatus_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETINDICATORSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETINDICATORSTATUS];
#endif

    uint8 IndicatorId;
    Dem_IndicatorStatusType IndicatorStatus_Out;
   Std_ReturnType RetVal;
} Dem_GetIndicatorStatus_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTFREEZEFRAMEDATA == STD_ON)
typedef Std_ReturnType(*Dem_GetEventFreezeFrameData_CalloutType)
(
   Dem_EventIdType,
   uint8,
   boolean,
   uint16,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetEventFreezeFrameData_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA];
    uint8 RecordNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA];
    boolean ReportTotalRecord_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA];
    uint16 DataId_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA];
    uint8 DestBuffer_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTFREEZEFRAMEDATA];
#endif

    Dem_EventIdType EventId;
    uint8 RecordNumber;
    boolean ReportTotalRecord;
    uint16 DataId;
    uint8 DestBuffer_Out;
   Std_ReturnType RetVal;
} Dem_GetEventFreezeFrameData_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTEXTENDEDDATARECORD == STD_ON)
typedef Std_ReturnType(*Dem_GetEventExtendedDataRecord_CalloutType)
(
   Dem_EventIdType,
   uint8,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetEventExtendedDataRecord_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD];
    uint8 RecordNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD];
    uint8 DestBuffer_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTEXTENDEDDATARECORD];
#endif

    Dem_EventIdType EventId;
    uint8 RecordNumber;
    uint8 DestBuffer_Out;
   Std_ReturnType RetVal;
} Dem_GetEventExtendedDataRecord_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTMEMORYOVERFLOW == STD_ON)
typedef Std_ReturnType(*Dem_GetEventMemoryOverflow_CalloutType)
(
   Dem_DTCOriginType,
   P2VAR(boolean, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetEventMemoryOverflow_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEVENTMEMORYOVERFLOW > 1)
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTMEMORYOVERFLOW];
    boolean OverflowIndication_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTMEMORYOVERFLOW];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEVENTMEMORYOVERFLOW];
#endif

    Dem_DTCOriginType DTCOrigin;
    boolean OverflowIndication_Out;
   Std_ReturnType RetVal;
} Dem_GetEventMemoryOverflow_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETDTCSUPPRESSION == STD_ON)
typedef Std_ReturnType(*Dem_SetDTCSuppression_CalloutType)
(
   uint32,
   Dem_DTCFormatType,
   boolean
);
typedef struct
{
   uint32 Count;
   Dem_SetDTCSuppression_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION];
    Dem_DTCFormatType DTCFormat_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION];
    boolean SuppressionStatus_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCSUPPRESSION];
#endif

    uint32 DTC;
    Dem_DTCFormatType DTCFormat;
    boolean SuppressionStatus;
   Std_ReturnType RetVal;
} Dem_SetDTCSuppression_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETDTCFILTER == STD_ON)
typedef Dem_ReturnSetFilterType(*Dem_SetDTCFilter_CalloutType)
(
   uint8,
   Dem_DTCKindType,
   Dem_DTCFormatType,
   Dem_DTCOriginType,
   Dem_FilterWithSeverityType,
   Dem_DTCSeverityType,
   Dem_FilterForFDCType
);
typedef struct
{
   uint32 Count;
   Dem_SetDTCFilter_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER > 1)
    uint8 DTCStatusMask_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
    Dem_DTCKindType DTCKind_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
    Dem_DTCFormatType DTCFormat_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
    Dem_FilterWithSeverityType FilterWithSeverity_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
    Dem_DTCSeverityType DTCSeverityMask_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
    Dem_FilterForFDCType FilterForFaultDetectionCounter_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
   Dem_ReturnSetFilterType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETDTCFILTER];
#endif

    uint8 DTCStatusMask;
    Dem_DTCKindType DTCKind;
    Dem_DTCFormatType DTCFormat;
    Dem_DTCOriginType DTCOrigin;
    Dem_FilterWithSeverityType FilterWithSeverity;
    Dem_DTCSeverityType DTCSeverityMask;
    Dem_FilterForFDCType FilterForFaultDetectionCounter;
   Dem_ReturnSetFilterType RetVal;
} Dem_SetDTCFilter_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETFREEZEFRAMERECORDFILTER == STD_ON)
typedef Dem_ReturnSetFilterType(*Dem_SetFreezeFrameRecordFilter_CalloutType)
(
   Dem_DTCFormatType,
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_SetFreezeFrameRecordFilter_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETFREEZEFRAMERECORDFILTER > 1)
    Dem_DTCFormatType DTCFormat_Ary[EBSTUBS_MAX_CALLS_DEM_SETFREEZEFRAMERECORDFILTER];
    P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA) NumberOfFilteredRecords_Ary[EBSTUBS_MAX_CALLS_DEM_SETFREEZEFRAMERECORDFILTER];
   Dem_ReturnSetFilterType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETFREEZEFRAMERECORDFILTER];
#endif

    Dem_DTCFormatType DTCFormat;
    P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA) NumberOfFilteredRecords;
   Dem_ReturnSetFilterType RetVal;
} Dem_SetFreezeFrameRecordFilter_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSTATUSOFDTC == STD_ON)
typedef Dem_ReturnGetStatusOfDTCType(*Dem_GetStatusOfDTC_CalloutType)
(
   uint32,
   Dem_DTCOriginType,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetStatusOfDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC];
    uint8 DTCStatus_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC];
   Dem_ReturnGetStatusOfDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETSTATUSOFDTC];
#endif

    uint32 DTC;
    Dem_DTCOriginType DTCOrigin;
    uint8 DTCStatus_Out;
   Dem_ReturnGetStatusOfDTCType RetVal;
} Dem_GetStatusOfDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCSTATUSAVAILABILITYMASK == STD_ON)
typedef Std_ReturnType(*Dem_GetDTCStatusAvailabilityMask_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetDTCStatusAvailabilityMask_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETDTCSTATUSAVAILABILITYMASK > 1)
    uint8 DTCStatusMask_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCSTATUSAVAILABILITYMASK];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCSTATUSAVAILABILITYMASK];
#endif

    uint8 DTCStatusMask_Out;
   Std_ReturnType RetVal;
} Dem_GetDTCStatusAvailabilityMask_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNUMBEROFFILTEREDDTC == STD_ON)
typedef Dem_ReturnGetNumberOfFilteredDTCType(*Dem_GetNumberOfFilteredDTC_CalloutType)
(
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetNumberOfFilteredDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETNUMBEROFFILTEREDDTC > 1)
    uint16 NumberOfFilteredDTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNUMBEROFFILTEREDDTC];
   Dem_ReturnGetNumberOfFilteredDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETNUMBEROFFILTEREDDTC];
#endif

    uint16 NumberOfFilteredDTC_Out;
   Dem_ReturnGetNumberOfFilteredDTCType RetVal;
} Dem_GetNumberOfFilteredDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTC == STD_ON)
typedef Dem_ReturnGetNextFilteredDTCType(*Dem_GetNextFilteredDTC_CalloutType)
(
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetNextFilteredDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTC > 1)
    uint32 DTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTC];
    uint8 DTCStatus_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTC];
   Dem_ReturnGetNextFilteredDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTC];
#endif

    uint32 DTC_Out;
    uint8 DTCStatus_Out;
   Dem_ReturnGetNextFilteredDTCType RetVal;
} Dem_GetNextFilteredDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCBYOCCURRENCETIME == STD_ON)
typedef Dem_ReturnGetDTCByOccurrenceTimeType(*Dem_GetDTCByOccurrenceTime_CalloutType)
(
   Dem_DTCRequestType,
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetDTCByOccurrenceTime_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETDTCBYOCCURRENCETIME > 1)
    Dem_DTCRequestType DTCRequest_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCBYOCCURRENCETIME];
    uint32 DTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCBYOCCURRENCETIME];
   Dem_ReturnGetDTCByOccurrenceTimeType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCBYOCCURRENCETIME];
#endif

    Dem_DTCRequestType DTCRequest;
    uint32 DTC_Out;
   Dem_ReturnGetDTCByOccurrenceTimeType RetVal;
} Dem_GetDTCByOccurrenceTime_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDRECORD == STD_ON)
typedef Dem_ReturnGetNextFilteredDTCType(*Dem_GetNextFilteredRecord_CalloutType)
(
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetNextFilteredRecord_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDRECORD > 1)
    uint32 DTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDRECORD];
    uint8 RecordNumber_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDRECORD];
   Dem_ReturnGetNextFilteredDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDRECORD];
#endif

    uint32 DTC_Out;
    uint8 RecordNumber_Out;
   Dem_ReturnGetNextFilteredDTCType RetVal;
} Dem_GetNextFilteredRecord_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDFDC == STD_ON)
typedef Dem_ReturnGetNextFilteredDTCType(*Dem_GetNextFilteredDTCAndFDC_CalloutType)
(
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(sint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetNextFilteredDTCAndFDC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDFDC > 1)
    uint32 DTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDFDC];
    sint8 DTCFaultDetectionCounter_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDFDC];
   Dem_ReturnGetNextFilteredDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDFDC];
#endif

    uint32 DTC_Out;
    sint8 DTCFaultDetectionCounter_Out;
   Dem_ReturnGetNextFilteredDTCType RetVal;
} Dem_GetNextFilteredDTCAndFDC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDSEVERITY == STD_ON)
typedef Dem_ReturnGetNextFilteredDTCType(*Dem_GetNextFilteredDTCAndSeverity_CalloutType)
(
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(Dem_DTCSeverityType, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetNextFilteredDTCAndSeverity_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY > 1)
    uint32 DTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY];
    uint8 DTCStatus_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY];
    Dem_DTCSeverityType DTCSeverity_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY];
    uint8 DTCFunctionalUnit_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY];
   Dem_ReturnGetNextFilteredDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETNEXTFILTEREDDTCANDSEVERITY];
#endif

    uint32 DTC_Out;
    uint8 DTCStatus_Out;
    Dem_DTCSeverityType DTCSeverity_Out;
    uint8 DTCFunctionalUnit_Out;
   Dem_ReturnGetNextFilteredDTCType RetVal;
} Dem_GetNextFilteredDTCAndSeverity_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETTRANSLATIONTYPE == STD_ON)
typedef Dem_DTCTranslationFormatType(*Dem_GetTranslationType_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   Dem_GetTranslationType_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETTRANSLATIONTYPE > 1)
   Dem_DTCTranslationFormatType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETTRANSLATIONTYPE];
#endif

   Dem_DTCTranslationFormatType RetVal;
} Dem_GetTranslationType_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSEVERITYOFDTC == STD_ON)
typedef Dem_ReturnGetSeverityOfDTCType(*Dem_GetSeverityOfDTC_CalloutType)
(
   uint32,
   P2VAR(Dem_DTCSeverityType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetSeverityOfDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETSEVERITYOFDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETSEVERITYOFDTC];
    Dem_DTCSeverityType DTCSeverity_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETSEVERITYOFDTC];
   Dem_ReturnGetSeverityOfDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETSEVERITYOFDTC];
#endif

    uint32 DTC;
    Dem_DTCSeverityType DTCSeverity_Out;
   Dem_ReturnGetSeverityOfDTCType RetVal;
} Dem_GetSeverityOfDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFUNCTIONALUNITOFDTC == STD_ON)
typedef Dem_ReturnGetFunctionalUnitOfDTCType(*Dem_GetFunctionalUnitOfDTC_CalloutType)
(
   uint32,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetFunctionalUnitOfDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETFUNCTIONALUNITOFDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETFUNCTIONALUNITOFDTC];
    P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA) DTCFunctionalUnit_Ary[EBSTUBS_MAX_CALLS_DEM_GETFUNCTIONALUNITOFDTC];
   Dem_ReturnGetFunctionalUnitOfDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETFUNCTIONALUNITOFDTC];
#endif

    uint32 DTC;
    P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA) DTCFunctionalUnit;
   Dem_ReturnGetFunctionalUnitOfDTCType RetVal;
} Dem_GetFunctionalUnitOfDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DISABLEDTCRECORDUPDATE == STD_ON)
typedef Dem_ReturnDisableDTCRecordUpdateType(*Dem_DisableDTCRecordUpdate_CalloutType)
(
   uint32,
   Dem_DTCOriginType
);
typedef struct
{
   uint32 Count;
   Dem_DisableDTCRecordUpdate_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DISABLEDTCRECORDUPDATE > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_DISABLEDTCRECORDUPDATE];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_DISABLEDTCRECORDUPDATE];
   Dem_ReturnDisableDTCRecordUpdateType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DISABLEDTCRECORDUPDATE];
#endif

    uint32 DTC;
    Dem_DTCOriginType DTCOrigin;
   Dem_ReturnDisableDTCRecordUpdateType RetVal;
} Dem_DisableDTCRecordUpdate_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_ENABLEDTCRECORDUPDATE == STD_ON)
typedef Std_ReturnType(*Dem_EnableDTCRecordUpdate_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   Dem_EnableDTCRecordUpdate_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_ENABLEDTCRECORDUPDATE > 1)
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_ENABLEDTCRECORDUPDATE];
#endif

   Std_ReturnType RetVal;
} Dem_EnableDTCRecordUpdate_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYRECORD == STD_ON)
typedef Dem_ReturnGetFreezeFrameDataByRecordType(*Dem_GetFreezeFrameDataByRecord_CalloutType)
(
   uint8,
   Dem_DTCOriginType,
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetFreezeFrameDataByRecord_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD > 1)
    uint8 RecordNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD];
    P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA) DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD];
    P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA) DestBuffer_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD];
    P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA) BufSize_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD];
   Dem_ReturnGetFreezeFrameDataByRecordType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYRECORD];
#endif

    uint8 RecordNumber;
    Dem_DTCOriginType DTCOrigin;
    P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA) DTC;
    P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA) DestBuffer;
    P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA) BufSize;
   Dem_ReturnGetFreezeFrameDataByRecordType RetVal;
} Dem_GetFreezeFrameDataByRecord_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYDTC == STD_ON)
typedef Dem_ReturnGetFreezeFrameDataByDTCType(*Dem_GetFreezeFrameDataByDTC_CalloutType)
(
   uint32,
   Dem_DTCOriginType,
   uint8,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetFreezeFrameDataByDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
    uint8 RecordNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
    uint8 DestBuffer_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
    uint16 BufSize_In_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
    uint16 BufSize_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
   Dem_ReturnGetFreezeFrameDataByDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETFREEZEFRAMEDATABYDTC];
#endif

    uint32 DTC;
    Dem_DTCOriginType DTCOrigin;
    uint8 RecordNumber;
    uint8 DestBuffer_Out;
    uint16 BufSize_In;
    uint16 BufSize_Out;
   Dem_ReturnGetFreezeFrameDataByDTCType RetVal;
} Dem_GetFreezeFrameDataByDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSIZEOFFREEZEFRAMEBYDTC == STD_ON)
typedef Dem_ReturnGetSizeOfFreezeFrameByDTCType(*Dem_GetSizeOfFreezeFrameByDTC_CalloutType)
(
   uint32,
   Dem_DTCOriginType,
   uint8,
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetSizeOfFreezeFrameByDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC];
    uint8 RecordNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC];
    uint16 SizeOfFreezeFrame_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC];
   Dem_ReturnGetSizeOfFreezeFrameByDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFFREEZEFRAMEBYDTC];
#endif

    uint32 DTC;
    Dem_DTCOriginType DTCOrigin;
    uint8 RecordNumber;
    uint16 SizeOfFreezeFrame_Out;
   Dem_ReturnGetSizeOfFreezeFrameByDTCType RetVal;
} Dem_GetSizeOfFreezeFrameByDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEXTENDEDDATARECORDBYDTC == STD_ON)
typedef Dem_ReturnGetExtendedDataRecordByDTCType(*Dem_GetExtendedDataRecordByDTC_CalloutType)
(
   uint32,
   Dem_DTCOriginType,
   uint8,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetExtendedDataRecordByDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
    uint8 ExtendedDataNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
    uint8 DestBuffer_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
    uint16 BufSize_In_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
    uint16 BufSize_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
   Dem_ReturnGetExtendedDataRecordByDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETEXTENDEDDATARECORDBYDTC];
#endif

    uint32 DTC;
    Dem_DTCOriginType DTCOrigin;
    uint8 ExtendedDataNumber;
    uint8 DestBuffer_Out;
    uint16 BufSize_In;
    uint16 BufSize_Out;
   Dem_ReturnGetExtendedDataRecordByDTCType RetVal;
} Dem_GetExtendedDataRecordByDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC == STD_ON)
typedef Dem_ReturnGetSizeOfExtendedDataRecordByDTCType(*Dem_GetSizeOfExtendedDataRecordByDTC_CalloutType)
(
   uint32,
   Dem_DTCOriginType,
   uint8,
   P2VAR(uint16, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetSizeOfExtendedDataRecordByDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC];
    uint8 ExtendedDataNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC];
    uint16 SizeOfExtendedDataRecord_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC];
   Dem_ReturnGetSizeOfExtendedDataRecordByDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC];
#endif

    uint32 DTC;
    Dem_DTCOriginType DTCOrigin;
    uint8 ExtendedDataNumber;
    uint16 SizeOfExtendedDataRecord_Out;
   Dem_ReturnGetSizeOfExtendedDataRecordByDTCType RetVal;
} Dem_GetSizeOfExtendedDataRecordByDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_CLEARDTC == STD_ON)
typedef Dem_ReturnClearDTCType(*Dem_ClearDTC_CalloutType)
(
   uint32,
   Dem_DTCFormatType,
   Dem_DTCOriginType
);
typedef struct
{
   uint32 Count;
   Dem_ClearDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_CLEARDTC > 1)
    uint32 DTC_Ary[EBSTUBS_MAX_CALLS_DEM_CLEARDTC];
    Dem_DTCFormatType DTCFormat_Ary[EBSTUBS_MAX_CALLS_DEM_CLEARDTC];
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_CLEARDTC];
   Dem_ReturnClearDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_CLEARDTC];
#endif

    uint32 DTC;
    Dem_DTCFormatType DTCFormat;
    Dem_DTCOriginType DTCOrigin;
   Dem_ReturnClearDTCType RetVal;
} Dem_ClearDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DISABLEDTCSETTING == STD_ON)
typedef Dem_ReturnControlDTCSettingType(*Dem_DisableDTCSetting_CalloutType)
(
   Dem_DTCGroupType,
   Dem_DTCKindType
);
typedef struct
{
   uint32 Count;
   Dem_DisableDTCSetting_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DISABLEDTCSETTING > 1)
    Dem_DTCGroupType DTCGroup_Ary[EBSTUBS_MAX_CALLS_DEM_DISABLEDTCSETTING];
    Dem_DTCKindType DTCKind_Ary[EBSTUBS_MAX_CALLS_DEM_DISABLEDTCSETTING];
   Dem_ReturnControlDTCSettingType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DISABLEDTCSETTING];
#endif

    Dem_DTCGroupType DTCGroup;
    Dem_DTCKindType DTCKind;
   Dem_ReturnControlDTCSettingType RetVal;
} Dem_DisableDTCSetting_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_ENABLEDTCSETTING == STD_ON)
typedef Dem_ReturnControlDTCSettingType(*Dem_EnableDTCSetting_CalloutType)
(
   Dem_DTCGroupType,
   Dem_DTCKindType
);
typedef struct
{
   uint32 Count;
   Dem_EnableDTCSetting_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_ENABLEDTCSETTING > 1)
    Dem_DTCGroupType DTCGroup_Ary[EBSTUBS_MAX_CALLS_DEM_ENABLEDTCSETTING];
    Dem_DTCKindType DTCKind_Ary[EBSTUBS_MAX_CALLS_DEM_ENABLEDTCSETTING];
   Dem_ReturnControlDTCSettingType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_ENABLEDTCSETTING];
#endif

    Dem_DTCGroupType DTCGroup;
    Dem_DTCKindType DTCKind;
   Dem_ReturnControlDTCSettingType RetVal;
} Dem_EnableDTCSetting_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMCANCELOPERATION == STD_ON)
typedef void(*Dem_DcmCancelOperation_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   Dem_DcmCancelOperation_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMCANCELOPERATION > 1)
#endif

} Dem_DcmCancelOperation_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETEVENTDISABLED == STD_ON)
typedef Std_ReturnType(*Dem_SetEventDisabled_CalloutType)
(
   Dem_EventIdType
);
typedef struct
{
   uint32 Count;
   Dem_SetEventDisabled_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETEVENTDISABLED > 1)
    Dem_EventIdType EventId_Ary[EBSTUBS_MAX_CALLS_DEM_SETEVENTDISABLED];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETEVENTDISABLED];
#endif

    Dem_EventIdType EventId;
   Std_ReturnType RetVal;
} Dem_SetEventDisabled_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRFAULTDETECT == STD_ON)
typedef Std_ReturnType(*Dem_RepIUMPRFaultDetect_CalloutType)
(
   Dem_RatioIdType
);
typedef struct
{
   uint32 Count;
   Dem_RepIUMPRFaultDetect_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_REPIUMPRFAULTDETECT > 1)
    Dem_RatioIdType RatioID_Ary[EBSTUBS_MAX_CALLS_DEM_REPIUMPRFAULTDETECT];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_REPIUMPRFAULTDETECT];
#endif

    Dem_RatioIdType RatioID;
   Std_ReturnType RetVal;
} Dem_RepIUMPRFaultDetect_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENLOCK == STD_ON)
typedef Std_ReturnType(*Dem_RepIUMPRDenLock_CalloutType)
(
   Dem_RatioIdType
);
typedef struct
{
   uint32 Count;
   Dem_RepIUMPRDenLock_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENLOCK > 1)
    Dem_RatioIdType RatioID_Ary[EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENLOCK];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENLOCK];
#endif

    Dem_RatioIdType RatioID;
   Std_ReturnType RetVal;
} Dem_RepIUMPRDenLock_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENRELEASE == STD_ON)
typedef Std_ReturnType(*Dem_RepIUMPRDenRelease_CalloutType)
(
   Dem_RatioIdType
);
typedef struct
{
   uint32 Count;
   Dem_RepIUMPRDenRelease_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENRELEASE > 1)
    Dem_RatioIdType RatioID_Ary[EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENRELEASE];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_REPIUMPRDENRELEASE];
#endif

    Dem_RatioIdType RatioID;
   Std_ReturnType RetVal;
} Dem_RepIUMPRDenRelease_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE08 == STD_ON)
typedef Std_ReturnType(*Dem_GetInfoTypeValue08_CalloutType)
(
   Dcm_OpStatusType,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetInfoTypeValue08_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE08 > 1)
    Dcm_OpStatusType OpStatus_Ary[EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE08];
    uint8 Iumprdata08_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE08];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE08];
#endif

    Dcm_OpStatusType OpStatus;
    uint8 Iumprdata08_Out;
   Std_ReturnType RetVal;
} Dem_GetInfoTypeValue08_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE0B == STD_ON)
typedef Std_ReturnType(*Dem_GetInfoTypeValue0B_CalloutType)
(
   Dcm_OpStatusType,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetInfoTypeValue0B_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE0B > 1)
    Dcm_OpStatusType OpStatus_Ary[EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE0B];
    uint8 Iumprdata0B_Out_Ary[EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE0B];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETINFOTYPEVALUE0B];
#endif

    Dcm_OpStatusType OpStatus;
    uint8 Iumprdata0B_Out;
   Std_ReturnType RetVal;
} Dem_GetInfoTypeValue0B_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID01 == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID01_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID01_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID01 > 1)
    uint8 PID01value_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID01];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID01];
#endif

    uint8 PID01value_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID01_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID1C == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID1C_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID1C_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID1C > 1)
    uint8 PID1Cvalue_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID1C];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID1C];
#endif

    uint8 PID1Cvalue_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID1C_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID21 == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID21_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID21_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID21 > 1)
    uint8 PID21value_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID21];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID21];
#endif

    uint8 PID21value_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID21_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID30 == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID30_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID30_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID30 > 1)
    uint8 PID30value_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID30];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID30];
#endif

    uint8 PID30value_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID30_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID31 == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID31_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID31_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID31 > 1)
    uint8 PID31value_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID31];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID31];
#endif

    uint8 PID31value_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID31_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID41 == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID41_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID41_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID41 > 1)
    uint8 PID41value_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID41];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID41];
#endif

    uint8 PID41value_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID41_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4D == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID4D_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID4D_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4D > 1)
    uint8 PID4Dvalue_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4D];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4D];
#endif

    uint8 PID4Dvalue_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID4D_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4E == STD_ON)
typedef Std_ReturnType(*Dem_DcmReadDataOfPID4E_CalloutType)
(
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmReadDataOfPID4E_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4E > 1)
    uint8 PID4Evalue_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4E];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMREADDATAOFPID4E];
#endif

    uint8 PID4Evalue_Out;
   Std_ReturnType RetVal;
} Dem_DcmReadDataOfPID4E_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_READDATAOFOBDFREEZEFRAME == STD_ON)
typedef Std_ReturnType(*Dem_ReadDataOfOBDFreezeFrame_CalloutType)
(
   uint8,
   uint8,
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA),
   P2VAR(uint8, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_ReadDataOfOBDFreezeFrame_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME > 1)
    uint8 PID_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
    uint8 DataElementIndexOfPID_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
    uint8 DestBuffer_In_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
    uint8 DestBuffer_Out_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
    uint8 BufSize_In_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
    uint8 BufSize_Out_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_READDATAOFOBDFREEZEFRAME];
#endif

    uint8 PID;
    uint8 DataElementIndexOfPID;
    uint8 DestBuffer_In;
    uint8 DestBuffer_Out;
    uint8 BufSize_In;
    uint8 BufSize_Out;
   Std_ReturnType RetVal;
} Dem_ReadDataOfOBDFreezeFrame_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCOFOBDFREEZEFRAME == STD_ON)
typedef Std_ReturnType(*Dem_GetDTCOfOBDFreezeFrame_CalloutType)
(
   uint8,
   P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_GetDTCOfOBDFreezeFrame_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_GETDTCOFOBDFREEZEFRAME > 1)
    uint8 FrameNumber_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFOBDFREEZEFRAME];
    P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA) DTC_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFOBDFREEZEFRAME];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_GETDTCOFOBDFREEZEFRAME];
#endif

    uint8 FrameNumber;
    P2VAR(uint32, TYPEDEF, EBSTUBS_APPL_DATA) DTC;
   Std_ReturnType RetVal;
} Dem_GetDTCOfOBDFreezeFrame_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETPTOSTATUS == STD_ON)
typedef Std_ReturnType(*Dem_SetPtoStatus_CalloutType)
(
   boolean
);
typedef struct
{
   uint32 Count;
   Dem_SetPtoStatus_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_SETPTOSTATUS > 1)
    boolean PtoStatus_Ary[EBSTUBS_MAX_CALLS_DEM_SETPTOSTATUS];
   Std_ReturnType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_SETPTOSTATUS];
#endif

    boolean PtoStatus;
   Std_ReturnType RetVal;
} Dem_SetPtoStatus_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_MAINFUNCTION == STD_ON)
typedef void(*Dem_MainFunction_CalloutType)
(
   void
);
typedef struct
{
   uint32 Count;
   Dem_MainFunction_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_MAINFUNCTION > 1)
#endif

} Dem_MainFunction_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMSETSTOREDDTCFILTER == STD_ON)
typedef Dem_ReturnSetFilterType(*Dem_DcmSetStoredDTCFilter_CalloutType)
(
   Dem_DTCOriginType,
   Dem_DataKindType
);
typedef struct
{
   uint32 Count;
   Dem_DcmSetStoredDTCFilter_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMSETSTOREDDTCFILTER > 1)
    Dem_DTCOriginType DTCOrigin_Ary[EBSTUBS_MAX_CALLS_DEM_DCMSETSTOREDDTCFILTER];
    Dem_DataKindType DataKind_Ary[EBSTUBS_MAX_CALLS_DEM_DCMSETSTOREDDTCFILTER];
   Dem_ReturnSetFilterType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMSETSTOREDDTCFILTER];
#endif

    Dem_DTCOriginType DTCOrigin;
    Dem_DataKindType DataKind;
   Dem_ReturnSetFilterType RetVal;
} Dem_DcmSetStoredDTCFilter_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMGETNEXTFILTEREDSTOREDDTC == STD_ON)
typedef Dem_ReturnGetNextFilteredDTCType(*Dem_DcmGetNextFilteredStoredDTC_CalloutType)
(
   P2VAR(Dem_DTCType, TYPEDEF, EBSTUBS_APPL_DATA)
);
typedef struct
{
   uint32 Count;
   Dem_DcmGetNextFilteredStoredDTC_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMGETNEXTFILTEREDSTOREDDTC > 1)
    Dem_DTCType DTC_Out_Ary[EBSTUBS_MAX_CALLS_DEM_DCMGETNEXTFILTEREDSTOREDDTC];
   Dem_ReturnGetNextFilteredDTCType RetVal_Ary[EBSTUBS_MAX_CALLS_DEM_DCMGETNEXTFILTEREDSTOREDDTC];
#endif

    Dem_DTCType DTC_Out;
   Dem_ReturnGetNextFilteredDTCType RetVal;
} Dem_DcmGetNextFilteredStoredDTC_StubType;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION == STD_ON)
typedef void(*Dem_DcmControlDTCStatusChangedNotification_CalloutType)
(
   boolean
);
typedef struct
{
   uint32 Count;
   Dem_DcmControlDTCStatusChangedNotification_CalloutType Callout;

#if (EBSTUBS_MAX_CALLS_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION > 1)
    boolean TriggerNotification_Ary[EBSTUBS_MAX_CALLS_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION];
#endif

    boolean TriggerNotification;
} Dem_DcmControlDTCStatusChangedNotification_StubType;
#endif

/*==[Declaration of functions with external linkage]==========================*/

#define EBSTUBS_START_SEC_CODE
#include <MemMap.h>

#if (EBSTUBS_FUNCENABLED_DEM_GETVERSIONINFO == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_GetVersionInfo
(
  P2VAR(Std_VersionInfoType, AUTOMATIC, EBSTUBS_APPL_DATA) versioninfo
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_PREINIT == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_PreInit
(
  P2CONST(Dem_ConfigType, AUTOMATIC, EBSTUBS_APPL_CONST) ConfigPtr
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_INIT == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_Init
(
  void
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SHUTDOWN == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_Shutdown
(
  void
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPORTERRORSTATUS == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_ReportErrorStatus
(
  Dem_EventIdType EventId,
  Dem_EventStatusType EventStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETEVENTSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetEventStatus
(
  Dem_EventIdType EventId,
  Dem_EventStatusType EventStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_RESETEVENTSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_ResetEventStatus
(
  Dem_EventIdType EventId
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_PRESTOREFREEZEFRAME == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_PrestoreFreezeFrame
(
  Dem_EventIdType EventId
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_CLEARPRESTOREDFREEZEFRAME == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_ClearPrestoredFreezeFrame
(
  Dem_EventIdType EventId
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLESTATE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetOperationCycleState
(
  uint8 OperationCycleId,
  Dem_OperationCycleStateType CycleState
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLECNTVALUE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetOperationCycleCntValue
(
  uint8 OperationCycleId,
  uint8 CounterValue
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLESTATE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetAgingCycleState
(
  uint8 AgingCycleId
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLECOUNTERVALUE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetAgingCycleCounterValue
(
  uint8 CounterValue
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetEventStatus
(
  Dem_EventIdType EventId,
  P2VAR(Dem_EventStatusExtendedType, AUTOMATIC, EBSTUBS_APPL_DATA) EventStatusExtended
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTFAILED == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetEventFailed
(
  Dem_EventIdType EventId,
  P2VAR(boolean, AUTOMATIC, EBSTUBS_APPL_DATA) EventFailed
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTTESTED == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetEventTested
(
  Dem_EventIdType EventId,
  P2VAR(boolean, AUTOMATIC, EBSTUBS_APPL_DATA) EventTested
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCOFEVENT == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetDTCOfEvent
(
  Dem_EventIdType EventId,
  Dem_DTCFormatType DTCFormat,
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTCOfEvent
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETENABLECONDITION == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetEnableCondition
(
  uint8 EnableConditionID,
  boolean ConditionFulfilled
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETSTORAGECONDITION == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetStorageCondition
(
  uint8 StorageConditionID,
  boolean ConditionFulfilled
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFAULTDETECTIONCOUNTER == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetFaultDetectionCounter
(
  Dem_EventIdType EventId,
  P2VAR(sint8, AUTOMATIC, EBSTUBS_APPL_DATA) FaultDetectionCounter
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINDICATORSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetIndicatorStatus
(
  uint8 IndicatorId,
  P2VAR(Dem_IndicatorStatusType, AUTOMATIC, EBSTUBS_APPL_DATA) IndicatorStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTFREEZEFRAMEDATA == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetEventFreezeFrameData
(
  Dem_EventIdType EventId,
  uint8 RecordNumber,
  boolean ReportTotalRecord,
  uint16 DataId,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DestBuffer
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTEXTENDEDDATARECORD == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetEventExtendedDataRecord
(
  Dem_EventIdType EventId,
  uint8 RecordNumber,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DestBuffer
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTMEMORYOVERFLOW == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetEventMemoryOverflow
(
  Dem_DTCOriginType DTCOrigin,
  P2VAR(boolean, AUTOMATIC, EBSTUBS_APPL_DATA) OverflowIndication
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETDTCSUPPRESSION == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetDTCSuppression
(
  uint32 DTC,
  Dem_DTCFormatType DTCFormat,
  boolean SuppressionStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETDTCFILTER == STD_ON)
extern FUNC(Dem_ReturnSetFilterType, EBSTUBS_CODE) Dem_SetDTCFilter
(
  uint8 DTCStatusMask,
  Dem_DTCKindType DTCKind,
  Dem_DTCFormatType DTCFormat,
  Dem_DTCOriginType DTCOrigin,
  Dem_FilterWithSeverityType FilterWithSeverity,
  Dem_DTCSeverityType DTCSeverityMask,
  Dem_FilterForFDCType FilterForFaultDetectionCounter
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETFREEZEFRAMERECORDFILTER == STD_ON)
extern FUNC(Dem_ReturnSetFilterType, EBSTUBS_CODE) Dem_SetFreezeFrameRecordFilter
(
  Dem_DTCFormatType DTCFormat,
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) NumberOfFilteredRecords
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSTATUSOFDTC == STD_ON)
extern FUNC(Dem_ReturnGetStatusOfDTCType, EBSTUBS_CODE) Dem_GetStatusOfDTC
(
  uint32 DTC,
  Dem_DTCOriginType DTCOrigin,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCSTATUSAVAILABILITYMASK == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetDTCStatusAvailabilityMask
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCStatusMask
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNUMBEROFFILTEREDDTC == STD_ON)
extern FUNC(Dem_ReturnGetNumberOfFilteredDTCType, EBSTUBS_CODE) Dem_GetNumberOfFilteredDTC
(
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) NumberOfFilteredDTC
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTC == STD_ON)
extern FUNC(Dem_ReturnGetNextFilteredDTCType, EBSTUBS_CODE) Dem_GetNextFilteredDTC
(
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCBYOCCURRENCETIME == STD_ON)
extern FUNC(Dem_ReturnGetDTCByOccurrenceTimeType, EBSTUBS_CODE) Dem_GetDTCByOccurrenceTime
(
  Dem_DTCRequestType DTCRequest,
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDRECORD == STD_ON)
extern FUNC(Dem_ReturnGetNextFilteredDTCType, EBSTUBS_CODE) Dem_GetNextFilteredRecord
(
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) RecordNumber
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDFDC == STD_ON)
extern FUNC(Dem_ReturnGetNextFilteredDTCType, EBSTUBS_CODE) Dem_GetNextFilteredDTCAndFDC
(
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC,
  P2VAR(sint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCFaultDetectionCounter
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDSEVERITY == STD_ON)
extern FUNC(Dem_ReturnGetNextFilteredDTCType, EBSTUBS_CODE) Dem_GetNextFilteredDTCAndSeverity
(
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCStatus,
  P2VAR(Dem_DTCSeverityType, AUTOMATIC, EBSTUBS_APPL_DATA) DTCSeverity,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCFunctionalUnit
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETTRANSLATIONTYPE == STD_ON)
extern FUNC(Dem_DTCTranslationFormatType, EBSTUBS_CODE) Dem_GetTranslationType
(
  void
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSEVERITYOFDTC == STD_ON)
extern FUNC(Dem_ReturnGetSeverityOfDTCType, EBSTUBS_CODE) Dem_GetSeverityOfDTC
(
  uint32 DTC,
  P2VAR(Dem_DTCSeverityType, AUTOMATIC, EBSTUBS_APPL_DATA) DTCSeverity
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFUNCTIONALUNITOFDTC == STD_ON)
extern FUNC(Dem_ReturnGetFunctionalUnitOfDTCType, EBSTUBS_CODE) Dem_GetFunctionalUnitOfDTC
(
  uint32 DTC,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DTCFunctionalUnit
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DISABLEDTCRECORDUPDATE == STD_ON)
extern FUNC(Dem_ReturnDisableDTCRecordUpdateType, EBSTUBS_CODE) Dem_DisableDTCRecordUpdate
(
  uint32 DTC,
  Dem_DTCOriginType DTCOrigin
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_ENABLEDTCRECORDUPDATE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_EnableDTCRecordUpdate
(
  void
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYRECORD == STD_ON)
extern FUNC(Dem_ReturnGetFreezeFrameDataByRecordType, EBSTUBS_CODE) Dem_GetFreezeFrameDataByRecord
(
  uint8 RecordNumber,
  Dem_DTCOriginType DTCOrigin,
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DestBuffer,
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) BufSize
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYDTC == STD_ON)
extern FUNC(Dem_ReturnGetFreezeFrameDataByDTCType, EBSTUBS_CODE) Dem_GetFreezeFrameDataByDTC
(
  uint32 DTC,
  Dem_DTCOriginType DTCOrigin,
  uint8 RecordNumber,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DestBuffer,
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) BufSize
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSIZEOFFREEZEFRAMEBYDTC == STD_ON)
extern FUNC(Dem_ReturnGetSizeOfFreezeFrameByDTCType, EBSTUBS_CODE) Dem_GetSizeOfFreezeFrameByDTC
(
  uint32 DTC,
  Dem_DTCOriginType DTCOrigin,
  uint8 RecordNumber,
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) SizeOfFreezeFrame
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEXTENDEDDATARECORDBYDTC == STD_ON)
extern FUNC(Dem_ReturnGetExtendedDataRecordByDTCType, EBSTUBS_CODE) Dem_GetExtendedDataRecordByDTC
(
  uint32 DTC,
  Dem_DTCOriginType DTCOrigin,
  uint8 ExtendedDataNumber,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DestBuffer,
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) BufSize
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC == STD_ON)
extern FUNC(Dem_ReturnGetSizeOfExtendedDataRecordByDTCType, EBSTUBS_CODE) Dem_GetSizeOfExtendedDataRecordByDTC
(
  uint32 DTC,
  Dem_DTCOriginType DTCOrigin,
  uint8 ExtendedDataNumber,
  P2VAR(uint16, AUTOMATIC, EBSTUBS_APPL_DATA) SizeOfExtendedDataRecord
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_CLEARDTC == STD_ON)
extern FUNC(Dem_ReturnClearDTCType, EBSTUBS_CODE) Dem_ClearDTC
(
  uint32 DTC,
  Dem_DTCFormatType DTCFormat,
  Dem_DTCOriginType DTCOrigin
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DISABLEDTCSETTING == STD_ON)
extern FUNC(Dem_ReturnControlDTCSettingType, EBSTUBS_CODE) Dem_DisableDTCSetting
(
  Dem_DTCGroupType DTCGroup,
  Dem_DTCKindType DTCKind
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_ENABLEDTCSETTING == STD_ON)
extern FUNC(Dem_ReturnControlDTCSettingType, EBSTUBS_CODE) Dem_EnableDTCSetting
(
  Dem_DTCGroupType DTCGroup,
  Dem_DTCKindType DTCKind
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMCANCELOPERATION == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_DcmCancelOperation
(
  void
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETEVENTDISABLED == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetEventDisabled
(
  Dem_EventIdType EventId
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRFAULTDETECT == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_RepIUMPRFaultDetect
(
  Dem_RatioIdType RatioID
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENLOCK == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_RepIUMPRDenLock
(
  Dem_RatioIdType RatioID
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENRELEASE == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_RepIUMPRDenRelease
(
  Dem_RatioIdType RatioID
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE08 == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetInfoTypeValue08
(
  Dcm_OpStatusType OpStatus,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) Iumprdata08
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE0B == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetInfoTypeValue0B
(
  Dcm_OpStatusType OpStatus,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) Iumprdata0B
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID01 == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID01
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID01value
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID1C == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID1C
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID1Cvalue
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID21 == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID21
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID21value
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID30 == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID30
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID30value
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID31 == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID31
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID31value
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID41 == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID41
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID41value
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4D == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID4D
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID4Dvalue
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4E == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_DcmReadDataOfPID4E
(
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) PID4Evalue
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_READDATAOFOBDFREEZEFRAME == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_ReadDataOfOBDFreezeFrame
(
  uint8 PID,
  uint8 DataElementIndexOfPID,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) DestBuffer,
  P2VAR(uint8, AUTOMATIC, EBSTUBS_APPL_DATA) BufSize
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCOFOBDFREEZEFRAME == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_GetDTCOfOBDFreezeFrame
(
  uint8 FrameNumber,
  P2VAR(uint32, AUTOMATIC, EBSTUBS_APPL_DATA) DTC
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETPTOSTATUS == STD_ON)
extern FUNC(Std_ReturnType, EBSTUBS_CODE) Dem_SetPtoStatus
(
  boolean PtoStatus
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_MAINFUNCTION == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_MainFunction
(
  void
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMSETSTOREDDTCFILTER == STD_ON)
extern FUNC(Dem_ReturnSetFilterType, EBSTUBS_CODE) Dem_DcmSetStoredDTCFilter
(
  Dem_DTCOriginType DTCOrigin,
  Dem_DataKindType DataKind
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMGETNEXTFILTEREDSTOREDDTC == STD_ON)
extern FUNC(Dem_ReturnGetNextFilteredDTCType, EBSTUBS_CODE) Dem_DcmGetNextFilteredStoredDTC
(
  P2VAR(Dem_DTCType, AUTOMATIC, EBSTUBS_APPL_DATA) DTC
);
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION == STD_ON)
extern FUNC(void, EBSTUBS_CODE) Dem_DcmControlDTCStatusChangedNotification
(
  boolean TriggerNotification
);
#endif

#define EBSTUBS_STOP_SEC_CODE
#include <MemMap.h>

/*==[Constants with external linkage]=========================================*/

/*==[Variables with external linkage]=========================================*/

#define EBSTUBS_START_SEC_VAR_UNSPECIFIED
#include <MemMap.h>

#if (EBSTUBS_FUNCENABLED_DEM_GETVERSIONINFO == STD_ON)
extern VAR(Dem_GetVersionInfo_StubType, EBSTUBS_VAR)
   Dem_GetVersionInfo_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_PREINIT == STD_ON)
extern VAR(Dem_PreInit_StubType, EBSTUBS_VAR)
   Dem_PreInit_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_INIT == STD_ON)
extern VAR(Dem_Init_StubType, EBSTUBS_VAR)
   Dem_Init_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SHUTDOWN == STD_ON)
extern VAR(Dem_Shutdown_StubType, EBSTUBS_VAR)
   Dem_Shutdown_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPORTERRORSTATUS == STD_ON)
extern VAR(Dem_ReportErrorStatus_StubType, EBSTUBS_VAR)
   Dem_ReportErrorStatus_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETEVENTSTATUS == STD_ON)
extern VAR(Dem_SetEventStatus_StubType, EBSTUBS_VAR)
   Dem_SetEventStatus_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_RESETEVENTSTATUS == STD_ON)
extern VAR(Dem_ResetEventStatus_StubType, EBSTUBS_VAR)
   Dem_ResetEventStatus_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_PRESTOREFREEZEFRAME == STD_ON)
extern VAR(Dem_PrestoreFreezeFrame_StubType, EBSTUBS_VAR)
   Dem_PrestoreFreezeFrame_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_CLEARPRESTOREDFREEZEFRAME == STD_ON)
extern VAR(Dem_ClearPrestoredFreezeFrame_StubType, EBSTUBS_VAR)
   Dem_ClearPrestoredFreezeFrame_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLESTATE == STD_ON)
extern VAR(Dem_SetOperationCycleState_StubType, EBSTUBS_VAR)
   Dem_SetOperationCycleState_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETOPERATIONCYCLECNTVALUE == STD_ON)
extern VAR(Dem_SetOperationCycleCntValue_StubType, EBSTUBS_VAR)
   Dem_SetOperationCycleCntValue_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLESTATE == STD_ON)
extern VAR(Dem_SetAgingCycleState_StubType, EBSTUBS_VAR)
   Dem_SetAgingCycleState_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETAGINGCYCLECOUNTERVALUE == STD_ON)
extern VAR(Dem_SetAgingCycleCounterValue_StubType, EBSTUBS_VAR)
   Dem_SetAgingCycleCounterValue_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTSTATUS == STD_ON)
extern VAR(Dem_GetEventStatus_StubType, EBSTUBS_VAR)
   Dem_GetEventStatus_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTFAILED == STD_ON)
extern VAR(Dem_GetEventFailed_StubType, EBSTUBS_VAR)
   Dem_GetEventFailed_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTTESTED == STD_ON)
extern VAR(Dem_GetEventTested_StubType, EBSTUBS_VAR)
   Dem_GetEventTested_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCOFEVENT == STD_ON)
extern VAR(Dem_GetDTCOfEvent_StubType, EBSTUBS_VAR)
   Dem_GetDTCOfEvent_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETENABLECONDITION == STD_ON)
extern VAR(Dem_SetEnableCondition_StubType, EBSTUBS_VAR)
   Dem_SetEnableCondition_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETSTORAGECONDITION == STD_ON)
extern VAR(Dem_SetStorageCondition_StubType, EBSTUBS_VAR)
   Dem_SetStorageCondition_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFAULTDETECTIONCOUNTER == STD_ON)
extern VAR(Dem_GetFaultDetectionCounter_StubType, EBSTUBS_VAR)
   Dem_GetFaultDetectionCounter_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINDICATORSTATUS == STD_ON)
extern VAR(Dem_GetIndicatorStatus_StubType, EBSTUBS_VAR)
   Dem_GetIndicatorStatus_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTFREEZEFRAMEDATA == STD_ON)
extern VAR(Dem_GetEventFreezeFrameData_StubType, EBSTUBS_VAR)
   Dem_GetEventFreezeFrameData_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTEXTENDEDDATARECORD == STD_ON)
extern VAR(Dem_GetEventExtendedDataRecord_StubType, EBSTUBS_VAR)
   Dem_GetEventExtendedDataRecord_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEVENTMEMORYOVERFLOW == STD_ON)
extern VAR(Dem_GetEventMemoryOverflow_StubType, EBSTUBS_VAR)
   Dem_GetEventMemoryOverflow_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETDTCSUPPRESSION == STD_ON)
extern VAR(Dem_SetDTCSuppression_StubType, EBSTUBS_VAR)
   Dem_SetDTCSuppression_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETDTCFILTER == STD_ON)
extern VAR(Dem_SetDTCFilter_StubType, EBSTUBS_VAR)
   Dem_SetDTCFilter_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETFREEZEFRAMERECORDFILTER == STD_ON)
extern VAR(Dem_SetFreezeFrameRecordFilter_StubType, EBSTUBS_VAR)
   Dem_SetFreezeFrameRecordFilter_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSTATUSOFDTC == STD_ON)
extern VAR(Dem_GetStatusOfDTC_StubType, EBSTUBS_VAR)
   Dem_GetStatusOfDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCSTATUSAVAILABILITYMASK == STD_ON)
extern VAR(Dem_GetDTCStatusAvailabilityMask_StubType, EBSTUBS_VAR)
   Dem_GetDTCStatusAvailabilityMask_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNUMBEROFFILTEREDDTC == STD_ON)
extern VAR(Dem_GetNumberOfFilteredDTC_StubType, EBSTUBS_VAR)
   Dem_GetNumberOfFilteredDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTC == STD_ON)
extern VAR(Dem_GetNextFilteredDTC_StubType, EBSTUBS_VAR)
   Dem_GetNextFilteredDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCBYOCCURRENCETIME == STD_ON)
extern VAR(Dem_GetDTCByOccurrenceTime_StubType, EBSTUBS_VAR)
   Dem_GetDTCByOccurrenceTime_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDRECORD == STD_ON)
extern VAR(Dem_GetNextFilteredRecord_StubType, EBSTUBS_VAR)
   Dem_GetNextFilteredRecord_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDFDC == STD_ON)
extern VAR(Dem_GetNextFilteredDTCAndFDC_StubType, EBSTUBS_VAR)
   Dem_GetNextFilteredDTCAndFDC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETNEXTFILTEREDDTCANDSEVERITY == STD_ON)
extern VAR(Dem_GetNextFilteredDTCAndSeverity_StubType, EBSTUBS_VAR)
   Dem_GetNextFilteredDTCAndSeverity_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETTRANSLATIONTYPE == STD_ON)
extern VAR(Dem_GetTranslationType_StubType, EBSTUBS_VAR)
   Dem_GetTranslationType_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSEVERITYOFDTC == STD_ON)
extern VAR(Dem_GetSeverityOfDTC_StubType, EBSTUBS_VAR)
   Dem_GetSeverityOfDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFUNCTIONALUNITOFDTC == STD_ON)
extern VAR(Dem_GetFunctionalUnitOfDTC_StubType, EBSTUBS_VAR)
   Dem_GetFunctionalUnitOfDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DISABLEDTCRECORDUPDATE == STD_ON)
extern VAR(Dem_DisableDTCRecordUpdate_StubType, EBSTUBS_VAR)
   Dem_DisableDTCRecordUpdate_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_ENABLEDTCRECORDUPDATE == STD_ON)
extern VAR(Dem_EnableDTCRecordUpdate_StubType, EBSTUBS_VAR)
   Dem_EnableDTCRecordUpdate_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYRECORD == STD_ON)
extern VAR(Dem_GetFreezeFrameDataByRecord_StubType, EBSTUBS_VAR)
   Dem_GetFreezeFrameDataByRecord_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETFREEZEFRAMEDATABYDTC == STD_ON)
extern VAR(Dem_GetFreezeFrameDataByDTC_StubType, EBSTUBS_VAR)
   Dem_GetFreezeFrameDataByDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSIZEOFFREEZEFRAMEBYDTC == STD_ON)
extern VAR(Dem_GetSizeOfFreezeFrameByDTC_StubType, EBSTUBS_VAR)
   Dem_GetSizeOfFreezeFrameByDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETEXTENDEDDATARECORDBYDTC == STD_ON)
extern VAR(Dem_GetExtendedDataRecordByDTC_StubType, EBSTUBS_VAR)
   Dem_GetExtendedDataRecordByDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETSIZEOFEXTENDEDDATARECORDBYDTC == STD_ON)
extern VAR(Dem_GetSizeOfExtendedDataRecordByDTC_StubType, EBSTUBS_VAR)
   Dem_GetSizeOfExtendedDataRecordByDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_CLEARDTC == STD_ON)
extern VAR(Dem_ClearDTC_StubType, EBSTUBS_VAR)
   Dem_ClearDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DISABLEDTCSETTING == STD_ON)
extern VAR(Dem_DisableDTCSetting_StubType, EBSTUBS_VAR)
   Dem_DisableDTCSetting_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_ENABLEDTCSETTING == STD_ON)
extern VAR(Dem_EnableDTCSetting_StubType, EBSTUBS_VAR)
   Dem_EnableDTCSetting_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMCANCELOPERATION == STD_ON)
extern VAR(Dem_DcmCancelOperation_StubType, EBSTUBS_VAR)
   Dem_DcmCancelOperation_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETEVENTDISABLED == STD_ON)
extern VAR(Dem_SetEventDisabled_StubType, EBSTUBS_VAR)
   Dem_SetEventDisabled_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRFAULTDETECT == STD_ON)
extern VAR(Dem_RepIUMPRFaultDetect_StubType, EBSTUBS_VAR)
   Dem_RepIUMPRFaultDetect_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENLOCK == STD_ON)
extern VAR(Dem_RepIUMPRDenLock_StubType, EBSTUBS_VAR)
   Dem_RepIUMPRDenLock_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_REPIUMPRDENRELEASE == STD_ON)
extern VAR(Dem_RepIUMPRDenRelease_StubType, EBSTUBS_VAR)
   Dem_RepIUMPRDenRelease_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE08 == STD_ON)
extern VAR(Dem_GetInfoTypeValue08_StubType, EBSTUBS_VAR)
   Dem_GetInfoTypeValue08_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETINFOTYPEVALUE0B == STD_ON)
extern VAR(Dem_GetInfoTypeValue0B_StubType, EBSTUBS_VAR)
   Dem_GetInfoTypeValue0B_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID01 == STD_ON)
extern VAR(Dem_DcmReadDataOfPID01_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID01_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID1C == STD_ON)
extern VAR(Dem_DcmReadDataOfPID1C_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID1C_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID21 == STD_ON)
extern VAR(Dem_DcmReadDataOfPID21_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID21_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID30 == STD_ON)
extern VAR(Dem_DcmReadDataOfPID30_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID30_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID31 == STD_ON)
extern VAR(Dem_DcmReadDataOfPID31_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID31_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID41 == STD_ON)
extern VAR(Dem_DcmReadDataOfPID41_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID41_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4D == STD_ON)
extern VAR(Dem_DcmReadDataOfPID4D_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID4D_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMREADDATAOFPID4E == STD_ON)
extern VAR(Dem_DcmReadDataOfPID4E_StubType, EBSTUBS_VAR)
   Dem_DcmReadDataOfPID4E_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_READDATAOFOBDFREEZEFRAME == STD_ON)
extern VAR(Dem_ReadDataOfOBDFreezeFrame_StubType, EBSTUBS_VAR)
   Dem_ReadDataOfOBDFreezeFrame_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_GETDTCOFOBDFREEZEFRAME == STD_ON)
extern VAR(Dem_GetDTCOfOBDFreezeFrame_StubType, EBSTUBS_VAR)
   Dem_GetDTCOfOBDFreezeFrame_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_SETPTOSTATUS == STD_ON)
extern VAR(Dem_SetPtoStatus_StubType, EBSTUBS_VAR)
   Dem_SetPtoStatus_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_MAINFUNCTION == STD_ON)
extern VAR(Dem_MainFunction_StubType, EBSTUBS_VAR)
   Dem_MainFunction_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMSETSTOREDDTCFILTER == STD_ON)
extern VAR(Dem_DcmSetStoredDTCFilter_StubType, EBSTUBS_VAR)
   Dem_DcmSetStoredDTCFilter_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMGETNEXTFILTEREDSTOREDDTC == STD_ON)
extern VAR(Dem_DcmGetNextFilteredStoredDTC_StubType, EBSTUBS_VAR)
   Dem_DcmGetNextFilteredStoredDTC_Stub;
#endif

#if (EBSTUBS_FUNCENABLED_DEM_DCMCONTROLDTCSTATUSCHANGEDNOTIFICATION == STD_ON)
extern VAR(Dem_DcmControlDTCStatusChangedNotification_StubType, EBSTUBS_VAR)
   Dem_DcmControlDTCStatusChangedNotification_Stub;
#endif


#define EBSTUBS_STOP_SEC_VAR_UNSPECIFIED
#include <MemMap.h>

/* stub extension header file */
#include <Dem_StubExt.h>

#endif /* !defined DEM_H */
