<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T40D2M7I0R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Flash" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>7.0.2</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2018-07-11T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>EN:&lt;html&gt;
                      Configuration of the Flash driver of S32K144.
                    &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="3d92ddc5-303e-4648-927e-0d2f27850c98"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="7"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="General" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:&lt;html&gt;
                          This container contains the general proprieties of the node.
                        &lt;/html&gt;</a:v>
                </a:a>
                <v:var name="AsmKeyword" type="STRING">
                  <a:a name="DESC">
                    <a:v>EN:&lt;html&gt;
                                Define syntaxe to be used with asm code( asm / __asm / ..).
                              &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="asm"/>
                </v:var>
                <v:var name="ProjectCompiler" type="STRING">
                  <a:a name="DESC">
                    <a:v>EN:&lt;html&gt;
                            Select in the list the compiler of the project. It sets correct keywords for the selected one.
                          &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="Other"/>
                  <a:da name="RANGE">
                    <a:v>COSMIC</a:v>
                    <a:v>GHS</a:v>
                    <a:v>WINDRIVER</a:v>
                    <a:v>HIGHTEC</a:v>
                    <a:v>Other</a:v>
                  </a:da>
                </v:var>
                <v:var name="FLASH_Ctrl_Address" type="INTEGER">
                  <a:a name="DEFAULT_RADIX" value="HEX"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Define the base address of the Flash controler.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0xC3F88000"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=0"/>
                    <a:tst expr="&lt;=0xFFFFFFFF"/>
                  </a:da>
                </v:var>
                <v:var name="UseSectorTab" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Enable the FlsSector tab, used to map the Flash memory.
                        Mandatory if the flash mapping is not linear.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="FLASH_Page_Size" type="INTEGER">
                  <a:a name="DEFAULT_RADIX" value="DEC"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        Define the base size of a flash page.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="8"/>
                  <a:da name="INVALID" type="Range" expr="&gt;=0"/>
                </v:var>
                <v:var name="Flash_Mode" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;ul&gt;
                              &lt;li&gt;Slicer_Sync:Write and erase operations key parameters are stored within called function which only return FLASH_BUSY,then call FLASH_MainFunction
                              to execute remaining task one slice by one slice and call finally call FLASH_GetJobStatus to check the status of the task;&lt;/li&gt;
                              &lt;li&gt;Blocker_Sync:Write and erase operations are done within called function;&lt;/li&gt;
                            &lt;/ul&gt;  
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="Blocker_Sync"/>
                  <a:da name="RANGE">
                    <a:v>Slicer_Sync</a:v>
                    <a:v>Blocker_Sync</a:v>
                  </a:da>
                </v:var>
                <v:var name="FLASH_Number_Of_Page_Per_Slicer" type="INTEGER">
                  <a:a name="DEFAULT_RADIX" value="DEC"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        In Slicer mode, the number of pages written at each FLASH_MainFunction call.
                        This value should be set to biggest within following limitation:
                        1.considering the external time constraints and write duration of 1 page
                            Example:
                            If 1 page write operation duration is 2ms.
                            While constraints is 100ms which means a status frame should be send within 100ms by bootloader.
                            FLASH_Number_Of_Page_Per_Slicer should set blow to: 100/2 = 50 and as close to 50 as it can. 
                        2.Considering Stack size because (FLASH_NUMBER_OF_PAGE_PER_SLICER * FLASH_PAGES_SIZE_BYTE) will be used in FLASH_MainFunction
                             as a size of a Array.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../Flash_Mode = &apos;Slicer_Sync&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;=0x80"/>
                  </a:da>
                </v:var>
                <v:var name="Watchdog_care" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        If this option is selected, the FLASH driver calls API to disable the watchdog before
                        memory operation, then API to re-enable the watchdog after the operation.
                        The called APIs are:
                        * void Watchdog_WdgDeactivate(void)
                        * void Watchdog_WdgActivate(void)
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="true"/>
                </v:var>
                <v:var name="Operation_Callback" type="STRING">
                  <a:a name="DESC">
                    <a:v>EN:&lt;html&gt;
                            Pointer to function so that some function can be called in FLASH_LLD_WaitOperationEnding.
                            If it is not necessary to provide the CallBack service, disable it by a NULL_CALLBACK field value (default value).
                          &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="ORIGIN" value="EB"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="NULL_CALLBACK"/>
                </v:var>
              </v:ctr>
              <v:lst name="FlsSector" type="MAP">
                <a:a name="COLUMNS">
                  <a:v>Start_Address</a:v>
                  <a:v>Length</a:v>
                  <a:v>Programmable</a:v>
                </a:a>
                <a:da name="ENABLE" type="XPath" 
                      expr="../General/UseSectorTab = &apos;true&apos;"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="FlsSector" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN:&lt;html&gt;
                          This contain the description of the sectors.&quot;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="Start_Address" type="INTEGER">
                    <a:a name="DEFAULT_RADIX" value="HEX"/>
                    <a:a name="DESC">
                      <a:v>EN:&lt;html&gt;
                                Contains the Flash Start_Address in hexadecimal
                              &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="Length" type="INTEGER">
                    <a:a name="DEFAULT_RADIX" value="HEX"/>
                    <a:a name="DESC">
                      <a:v>EN:&lt;html&gt;
                                Contains the sector Length in hexadecimal
                              &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  </v:var>
                  <v:var name="Programmable" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN:
                          &lt;html&gt;
                            Specify if the sector is programmable or not
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="ORIGIN" value="EB"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                </v:ctr>
              </v:lst>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Flash can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
          <d:chc name="myEcuParameterDefinition" type="AR-ELEMENT" 
                 value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D2M7I0R0/Flash"/>
              </d:lst>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
